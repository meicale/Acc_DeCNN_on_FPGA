-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_quantize_mul_shift_24_8_16_16_16_16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_conv3_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    s_conv3_empty_n : IN STD_LOGIC;
    s_conv3_read : OUT STD_LOGIC;
    f3_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    f3_full_n : IN STD_LOGIC;
    f3_write : OUT STD_LOGIC;
    s_scale_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    s_scale_1_empty_n : IN STD_LOGIC;
    s_scale_1_read : OUT STD_LOGIC;
    s_bias_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    s_bias_1_empty_n : IN STD_LOGIC;
    s_bias_1_read : OUT STD_LOGIC;
    mul_ln93_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mul_ln93_1_loc_empty_n : IN STD_LOGIC;
    mul_ln93_1_loc_read : OUT STD_LOGIC;
    OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    OC_V_loc_empty_n : IN STD_LOGIC;
    OC_V_loc_read : OUT STD_LOGIC;
    skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    skip3_empty_n : IN STD_LOGIC;
    skip3_read : OUT STD_LOGIC;
    relu3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    relu3_empty_n : IN STD_LOGIC;
    relu3_read : OUT STD_LOGIC );
end;


architecture behav of top_quantize_mul_shift_24_8_16_16_16_16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv44_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv44_1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_117 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_137 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_157 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_177 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_197 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_127 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100111";
    constant ap_const_lv32_147 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000111";
    constant ap_const_lv32_167 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100111";
    constant ap_const_lv32_187 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000111";
    constant ap_const_lv32_1A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100111";
    constant ap_const_lv32_1C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000111";
    constant ap_const_lv32_1E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv24_FFFF80 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv40_8000 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal s_conv3_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal f3_blk_n : STD_LOGIC;
    signal skip_reg_3161 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal s_scale_1_blk_n : STD_LOGIC;
    signal s_bias_1_blk_n : STD_LOGIC;
    signal mul_ln93_1_loc_blk_n : STD_LOGIC;
    signal OC_V_loc_blk_n : STD_LOGIC;
    signal skip3_blk_n : STD_LOGIC;
    signal relu3_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_283 : STD_LOGIC_VECTOR (43 downto 0);
    signal relu_reg_3165 : STD_LOGIC_VECTOR (0 downto 0);
    signal rep_reg_3185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_cast_reg_3190 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal bound_reg_3205 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln272_fu_316_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state7_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln272_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_2_fu_485_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_reg_3219 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_reg_3219_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_reg_3219_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_2_reg_3219_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_1_i_i_reg_3235 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_1_i_i_reg_3235_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_1_i_i_reg_3235_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_1_i_i_reg_3235_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_2_i_i_reg_3251 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_2_i_i_reg_3251_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_2_i_i_reg_3251_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_2_i_i_reg_3251_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_3_i_i_reg_3267 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_3_i_i_reg_3267_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_3_i_i_reg_3267_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_3_i_i_reg_3267_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_4_i_i_reg_3283 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_4_i_i_reg_3283_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_4_i_i_reg_3283_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_4_i_i_reg_3283_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_5_i_i_reg_3299 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_5_i_i_reg_3299_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_5_i_i_reg_3299_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_5_i_i_reg_3299_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_6_i_i_reg_3315 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_6_i_i_reg_3315_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_6_i_i_reg_3315_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_6_i_i_reg_3315_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_7_i_i_reg_3331 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_7_i_i_reg_3331_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_7_i_i_reg_3331_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_7_i_i_reg_3331_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_8_i_i_reg_3347 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_8_i_i_reg_3347_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_8_i_i_reg_3347_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_8_i_i_reg_3347_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_9_i_i_reg_3363 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_9_i_i_reg_3363_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_9_i_i_reg_3363_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_9_i_i_reg_3363_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_3379 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_3379_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_3379_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_3379_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_10_i_i_reg_3395 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_10_i_i_reg_3395_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_10_i_i_reg_3395_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_10_i_i_reg_3395_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_11_i_i_reg_3411 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_11_i_i_reg_3411_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_11_i_i_reg_3411_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_11_i_i_reg_3411_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_12_i_i_reg_3427 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_12_i_i_reg_3427_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_12_i_i_reg_3427_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_12_i_i_reg_3427_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_13_i_i_reg_3443 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_13_i_i_reg_3443_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_13_i_i_reg_3443_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_13_i_i_reg_3443_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_14_i_i_reg_3459 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_14_i_i_reg_3459_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_14_i_i_reg_3459_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_14_i_i_reg_3459_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_i_i_reg_3475 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_reg_3480 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_1_i_i_reg_3485 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_reg_3490 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_2_i_i_reg_3495 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_15_reg_3500 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_3_i_i_reg_3505 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_16_reg_3510 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_4_i_i_reg_3515 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_17_reg_3520 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_5_i_i_reg_3525 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_18_reg_3530 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_6_i_i_reg_3535 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_19_reg_3540 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_7_i_i_reg_3545 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_20_reg_3550 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_8_i_i_reg_3555 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_21_reg_3560 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_9_i_i_reg_3565 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_22_reg_3570 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_i_i_183_reg_3575 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_23_reg_3580 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_10_i_i_reg_3585 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_24_reg_3590 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_11_i_i_reg_3595 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_25_reg_3600 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_12_i_i_reg_3605 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_26_reg_3610 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_13_i_i_reg_3615 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_27_reg_3620 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_14_i_i_reg_3625 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_28_reg_3630 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln263_fu_1432_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_reg_3635 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_reg_3635_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_16_fu_1475_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_16_reg_3641 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_16_reg_3641_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_17_fu_1518_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_17_reg_3647 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_17_reg_3647_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_18_fu_1561_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_18_reg_3653 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_18_reg_3653_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_19_fu_1604_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_19_reg_3659 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_19_reg_3659_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_20_fu_1647_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_20_reg_3665 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_20_reg_3665_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_21_fu_1690_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_21_reg_3671 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_21_reg_3671_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_22_fu_1733_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_22_reg_3677 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_22_reg_3677_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_23_fu_1776_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_23_reg_3683 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_23_reg_3683_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_24_fu_1819_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_24_reg_3689 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_24_reg_3689_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_25_fu_1862_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_25_reg_3695 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_25_reg_3695_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_26_fu_1905_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_26_reg_3701 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_26_reg_3701_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_27_fu_1948_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_27_reg_3707 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_27_reg_3707_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_28_fu_1991_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_28_reg_3713 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_28_reg_3713_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_29_fu_2034_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_29_reg_3719 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_29_reg_3719_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_30_fu_2077_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_30_reg_3725 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln263_30_reg_3725_pp0_iter6_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln886_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_3731 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_2105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_3737 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_16_fu_2126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_16_reg_3742 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_16_fu_2132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_16_reg_3748 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_17_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_17_reg_3753 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_17_fu_2159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_17_reg_3759 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_18_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_18_reg_3764 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_18_fu_2186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_18_reg_3770 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_19_fu_2207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_19_reg_3775 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_19_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_19_reg_3781 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_20_fu_2234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_20_reg_3786 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_20_fu_2240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_20_reg_3792 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_21_fu_2261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_21_reg_3797 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_21_fu_2267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_21_reg_3803 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_22_fu_2288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_22_reg_3808 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_22_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_22_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_23_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_23_reg_3819 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_23_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_23_reg_3825 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_24_fu_2342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_24_reg_3830 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_24_fu_2348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_24_reg_3836 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_25_fu_2369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_25_reg_3841 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_25_fu_2375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_25_reg_3847 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_26_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_26_reg_3852 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_26_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_26_reg_3858 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_27_fu_2423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_27_reg_3863 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_27_fu_2429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_27_reg_3869 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_28_fu_2450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_28_reg_3874 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_28_fu_2456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_28_reg_3880 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_29_fu_2477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_29_reg_3885 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_29_fu_2483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_29_reg_3891 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_30_fu_2504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_30_reg_3896 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_30_fu_2510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_30_reg_3902 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal p_Result_i_i_fu_1071_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_4_i_i_fu_2964_p17 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_310_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_V_0_fu_327_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_fu_481_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_1_fu_331_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_1_i_i_fu_497_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_2_fu_341_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_2_i_i_fu_525_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_3_fu_351_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_3_i_i_fu_553_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_fu_361_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_4_i_i_fu_581_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_5_fu_371_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_5_i_i_fu_609_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_6_fu_381_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_6_i_i_fu_637_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_7_fu_391_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_7_i_i_fu_665_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_8_fu_401_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_8_i_i_fu_693_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_9_fu_411_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_9_i_i_fu_721_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_10_fu_421_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_i_i_fu_749_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_11_fu_431_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_10_i_i_fu_777_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_12_fu_441_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_11_i_i_fu_805_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_13_fu_451_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_12_i_i_fu_833_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_14_fu_461_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_13_i_i_fu_861_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_15_fu_471_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_14_i_i_fu_889_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln69_28_fu_1061_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_27_fu_1051_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_26_fu_1041_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_25_fu_1031_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_24_fu_1021_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_23_fu_1011_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_22_fu_1001_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_21_fu_991_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_20_fu_981_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_19_fu_971_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_18_fu_961_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_17_fu_951_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_16_fu_941_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_15_fu_931_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_s_fu_921_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln69_fu_917_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3001_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3011_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3021_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3031_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3041_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3051_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3061_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3071_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3081_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3091_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3101_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3111_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3121_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3131_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3141_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_3151_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln691_fu_1396_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_32_fu_1399_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_32_fu_1402_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_47_fu_1412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_fu_1407_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_fu_1420_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_fu_1428_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_16_fu_1439_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_33_fu_1442_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_34_fu_1445_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_49_fu_1455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_16_fu_1450_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_16_fu_1463_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_16_fu_1471_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_17_fu_1482_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_34_fu_1485_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_36_fu_1488_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_51_fu_1498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_17_fu_1493_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_17_fu_1506_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_17_fu_1514_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_18_fu_1525_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_35_fu_1528_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_38_fu_1531_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_53_fu_1541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_18_fu_1536_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_18_fu_1549_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_18_fu_1557_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_19_fu_1568_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_36_fu_1571_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_40_fu_1574_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_55_fu_1584_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_19_fu_1579_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_19_fu_1592_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_19_fu_1600_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_20_fu_1611_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_37_fu_1614_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_42_fu_1617_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_57_fu_1627_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_20_fu_1622_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_20_fu_1635_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_20_fu_1643_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_21_fu_1654_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_38_fu_1657_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_44_fu_1660_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_59_fu_1670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_21_fu_1665_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_21_fu_1678_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_21_fu_1686_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_22_fu_1697_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_39_fu_1700_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_46_fu_1703_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_61_fu_1713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_22_fu_1708_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_22_fu_1721_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_22_fu_1729_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_23_fu_1740_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_40_fu_1743_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_48_fu_1746_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_63_fu_1756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_23_fu_1751_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_23_fu_1764_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_23_fu_1772_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_24_fu_1783_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_41_fu_1786_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_50_fu_1789_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_65_fu_1799_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_24_fu_1794_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_24_fu_1807_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_24_fu_1815_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_25_fu_1826_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_42_fu_1829_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_52_fu_1832_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_67_fu_1842_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_25_fu_1837_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_25_fu_1850_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_25_fu_1858_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_26_fu_1869_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_43_fu_1872_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_54_fu_1875_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_69_fu_1885_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_26_fu_1880_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_26_fu_1893_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_26_fu_1901_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_27_fu_1912_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_44_fu_1915_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_56_fu_1918_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_71_fu_1928_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_27_fu_1923_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_27_fu_1936_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_27_fu_1944_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_28_fu_1955_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_45_fu_1958_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_58_fu_1961_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_73_fu_1971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_28_fu_1966_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_28_fu_1979_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_28_fu_1987_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_29_fu_1998_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_46_fu_2001_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_60_fu_2004_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_75_fu_2014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_29_fu_2009_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_29_fu_2022_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_29_fu_2030_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_30_fu_2041_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln691_47_fu_2044_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln691_62_fu_2047_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_77_fu_2057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln297_30_fu_2052_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln298_30_fu_2065_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln299_30_fu_2073_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln692_fu_2084_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_48_fu_2089_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_16_fu_2111_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_50_fu_2116_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_17_fu_2138_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_52_fu_2143_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_18_fu_2165_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_fu_2170_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_19_fu_2192_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_56_fu_2197_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_20_fu_2219_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_58_fu_2224_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_21_fu_2246_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_60_fu_2251_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_22_fu_2273_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_62_fu_2278_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_23_fu_2300_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_64_fu_2305_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_24_fu_2327_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_66_fu_2332_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_25_fu_2354_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_68_fu_2359_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_26_fu_2381_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_70_fu_2386_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_27_fu_2408_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_72_fu_2413_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_28_fu_2435_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_74_fu_2440_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_29_fu_2462_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_76_fu_2467_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln692_30_fu_2489_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_78_fu_2494_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln692_fu_2516_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_fu_2532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_fu_2525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_fu_2519_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_16_fu_2544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_16_fu_2560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_33_fu_2553_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_16_fu_2547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_17_fu_2572_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_17_fu_2588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_35_fu_2581_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_17_fu_2575_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_18_fu_2600_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_18_fu_2616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_37_fu_2609_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_18_fu_2603_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_19_fu_2628_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_19_fu_2644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_39_fu_2637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_19_fu_2631_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_20_fu_2656_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_20_fu_2672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_41_fu_2665_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_20_fu_2659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_21_fu_2684_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_21_fu_2700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_43_fu_2693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_21_fu_2687_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_22_fu_2712_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_22_fu_2728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_45_fu_2721_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_22_fu_2715_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_23_fu_2740_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_23_fu_2756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_47_fu_2749_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_23_fu_2743_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_24_fu_2768_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_24_fu_2784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_49_fu_2777_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_24_fu_2771_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_25_fu_2796_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_25_fu_2812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_51_fu_2805_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_25_fu_2799_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_26_fu_2824_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_26_fu_2840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_53_fu_2833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_26_fu_2827_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_27_fu_2852_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_27_fu_2868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_55_fu_2861_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_27_fu_2855_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_28_fu_2880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_28_fu_2896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_57_fu_2889_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_28_fu_2883_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_29_fu_2908_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_29_fu_2924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_59_fu_2917_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_29_fu_2911_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln692_30_fu_2936_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln69_30_fu_2952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_61_fu_2945_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln69_30_fu_2939_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_62_fu_2956_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_60_fu_2928_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_58_fu_2900_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_56_fu_2872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_54_fu_2844_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_52_fu_2816_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_50_fu_2788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_48_fu_2760_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_46_fu_2732_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_44_fu_2704_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_42_fu_2676_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_40_fu_2648_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_38_fu_2620_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_36_fu_2592_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_34_fu_2564_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln69_32_fu_2536_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3001_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3011_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3021_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3031_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3041_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3051_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3061_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3071_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3081_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3091_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3101_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3111_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3121_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3131_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3141_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3151_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_3001_ce : STD_LOGIC;
    signal grp_fu_3011_ce : STD_LOGIC;
    signal grp_fu_3021_ce : STD_LOGIC;
    signal grp_fu_3031_ce : STD_LOGIC;
    signal grp_fu_3041_ce : STD_LOGIC;
    signal grp_fu_3051_ce : STD_LOGIC;
    signal grp_fu_3061_ce : STD_LOGIC;
    signal grp_fu_3071_ce : STD_LOGIC;
    signal grp_fu_3081_ce : STD_LOGIC;
    signal grp_fu_3091_ce : STD_LOGIC;
    signal grp_fu_3101_ce : STD_LOGIC;
    signal grp_fu_3111_ce : STD_LOGIC;
    signal grp_fu_3121_ce : STD_LOGIC;
    signal grp_fu_3131_ce : STD_LOGIC;
    signal grp_fu_3141_ce : STD_LOGIC;
    signal grp_fu_3151_ce : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_310_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_310_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_condition_2456 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component top_mul_32ns_12ns_44_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component top_mac_muladd_24s_16s_17ns_40_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    mul_32ns_12ns_44_5_1_U871 : component top_mul_32ns_12ns_44_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_310_p0,
        din1 => grp_fu_310_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_310_p2);

    mac_muladd_24s_16s_17ns_40_4_1_U872 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_0_fu_327_p1,
        din1 => trunc_ln674_fu_481_p1,
        din2 => grp_fu_3001_p2,
        ce => grp_fu_3001_ce,
        dout => grp_fu_3001_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U873 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_1_fu_331_p4,
        din1 => p_Result_1_1_i_i_fu_497_p4,
        din2 => grp_fu_3011_p2,
        ce => grp_fu_3011_ce,
        dout => grp_fu_3011_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U874 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_2_fu_341_p4,
        din1 => p_Result_1_2_i_i_fu_525_p4,
        din2 => grp_fu_3021_p2,
        ce => grp_fu_3021_ce,
        dout => grp_fu_3021_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U875 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_3_fu_351_p4,
        din1 => p_Result_1_3_i_i_fu_553_p4,
        din2 => grp_fu_3031_p2,
        ce => grp_fu_3031_ce,
        dout => grp_fu_3031_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U876 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_4_fu_361_p4,
        din1 => p_Result_1_4_i_i_fu_581_p4,
        din2 => grp_fu_3041_p2,
        ce => grp_fu_3041_ce,
        dout => grp_fu_3041_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U877 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_5_fu_371_p4,
        din1 => p_Result_1_5_i_i_fu_609_p4,
        din2 => grp_fu_3051_p2,
        ce => grp_fu_3051_ce,
        dout => grp_fu_3051_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U878 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_6_fu_381_p4,
        din1 => p_Result_1_6_i_i_fu_637_p4,
        din2 => grp_fu_3061_p2,
        ce => grp_fu_3061_ce,
        dout => grp_fu_3061_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U879 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_7_fu_391_p4,
        din1 => p_Result_1_7_i_i_fu_665_p4,
        din2 => grp_fu_3071_p2,
        ce => grp_fu_3071_ce,
        dout => grp_fu_3071_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U880 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_8_fu_401_p4,
        din1 => p_Result_1_8_i_i_fu_693_p4,
        din2 => grp_fu_3081_p2,
        ce => grp_fu_3081_ce,
        dout => grp_fu_3081_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U881 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_9_fu_411_p4,
        din1 => p_Result_1_9_i_i_fu_721_p4,
        din2 => grp_fu_3091_p2,
        ce => grp_fu_3091_ce,
        dout => grp_fu_3091_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U882 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_10_fu_421_p4,
        din1 => p_Result_1_i_i_fu_749_p4,
        din2 => grp_fu_3101_p2,
        ce => grp_fu_3101_ce,
        dout => grp_fu_3101_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U883 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_11_fu_431_p4,
        din1 => p_Result_1_10_i_i_fu_777_p4,
        din2 => grp_fu_3111_p2,
        ce => grp_fu_3111_ce,
        dout => grp_fu_3111_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U884 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_12_fu_441_p4,
        din1 => p_Result_1_11_i_i_fu_805_p4,
        din2 => grp_fu_3121_p2,
        ce => grp_fu_3121_ce,
        dout => grp_fu_3121_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U885 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_13_fu_451_p4,
        din1 => p_Result_1_12_i_i_fu_833_p4,
        din2 => grp_fu_3131_p2,
        ce => grp_fu_3131_ce,
        dout => grp_fu_3131_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U886 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_14_fu_461_p4,
        din1 => p_Result_1_13_i_i_fu_861_p4,
        din2 => grp_fu_3141_p2,
        ce => grp_fu_3141_ce,
        dout => grp_fu_3141_p3);

    mac_muladd_24s_16s_17ns_40_4_1_U887 : component top_mac_muladd_24s_16s_17ns_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_data_V_15_fu_471_p4,
        din1 => p_Result_1_14_i_i_fu_889_p4,
        din2 => grp_fu_3151_p2,
        ce => grp_fu_3151_ce,
        dout => grp_fu_3151_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln272_fu_322_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_283 <= add_ln272_fu_316_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten_reg_283 <= ap_const_lv44_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                bound_reg_3205 <= grp_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln878_16_reg_3748 <= icmp_ln878_16_fu_2132_p2;
                icmp_ln878_17_reg_3759 <= icmp_ln878_17_fu_2159_p2;
                icmp_ln878_18_reg_3770 <= icmp_ln878_18_fu_2186_p2;
                icmp_ln878_19_reg_3781 <= icmp_ln878_19_fu_2213_p2;
                icmp_ln878_20_reg_3792 <= icmp_ln878_20_fu_2240_p2;
                icmp_ln878_21_reg_3803 <= icmp_ln878_21_fu_2267_p2;
                icmp_ln878_22_reg_3814 <= icmp_ln878_22_fu_2294_p2;
                icmp_ln878_23_reg_3825 <= icmp_ln878_23_fu_2321_p2;
                icmp_ln878_24_reg_3836 <= icmp_ln878_24_fu_2348_p2;
                icmp_ln878_25_reg_3847 <= icmp_ln878_25_fu_2375_p2;
                icmp_ln878_26_reg_3858 <= icmp_ln878_26_fu_2402_p2;
                icmp_ln878_27_reg_3869 <= icmp_ln878_27_fu_2429_p2;
                icmp_ln878_28_reg_3880 <= icmp_ln878_28_fu_2456_p2;
                icmp_ln878_29_reg_3891 <= icmp_ln878_29_fu_2483_p2;
                icmp_ln878_30_reg_3902 <= icmp_ln878_30_fu_2510_p2;
                icmp_ln878_reg_3737 <= icmp_ln878_fu_2105_p2;
                icmp_ln886_16_reg_3742 <= icmp_ln886_16_fu_2126_p2;
                icmp_ln886_17_reg_3753 <= icmp_ln886_17_fu_2153_p2;
                icmp_ln886_18_reg_3764 <= icmp_ln886_18_fu_2180_p2;
                icmp_ln886_19_reg_3775 <= icmp_ln886_19_fu_2207_p2;
                icmp_ln886_20_reg_3786 <= icmp_ln886_20_fu_2234_p2;
                icmp_ln886_21_reg_3797 <= icmp_ln886_21_fu_2261_p2;
                icmp_ln886_22_reg_3808 <= icmp_ln886_22_fu_2288_p2;
                icmp_ln886_23_reg_3819 <= icmp_ln886_23_fu_2315_p2;
                icmp_ln886_24_reg_3830 <= icmp_ln886_24_fu_2342_p2;
                icmp_ln886_25_reg_3841 <= icmp_ln886_25_fu_2369_p2;
                icmp_ln886_26_reg_3852 <= icmp_ln886_26_fu_2396_p2;
                icmp_ln886_27_reg_3863 <= icmp_ln886_27_fu_2423_p2;
                icmp_ln886_28_reg_3874 <= icmp_ln886_28_fu_2450_p2;
                icmp_ln886_29_reg_3885 <= icmp_ln886_29_fu_2477_p2;
                icmp_ln886_30_reg_3896 <= icmp_ln886_30_fu_2504_p2;
                icmp_ln886_reg_3731 <= icmp_ln886_fu_2099_p2;
                p_Result_3_10_i_i_reg_3585 <= grp_fu_3111_p3(39 downto 16);
                p_Result_3_11_i_i_reg_3595 <= grp_fu_3121_p3(39 downto 16);
                p_Result_3_12_i_i_reg_3605 <= grp_fu_3131_p3(39 downto 16);
                p_Result_3_13_i_i_reg_3615 <= grp_fu_3141_p3(39 downto 16);
                p_Result_3_14_i_i_reg_3625 <= grp_fu_3151_p3(39 downto 16);
                p_Result_3_1_i_i_reg_3485 <= grp_fu_3011_p3(39 downto 16);
                p_Result_3_2_i_i_reg_3495 <= grp_fu_3021_p3(39 downto 16);
                p_Result_3_3_i_i_reg_3505 <= grp_fu_3031_p3(39 downto 16);
                p_Result_3_4_i_i_reg_3515 <= grp_fu_3041_p3(39 downto 16);
                p_Result_3_5_i_i_reg_3525 <= grp_fu_3051_p3(39 downto 16);
                p_Result_3_6_i_i_reg_3535 <= grp_fu_3061_p3(39 downto 16);
                p_Result_3_7_i_i_reg_3545 <= grp_fu_3071_p3(39 downto 16);
                p_Result_3_8_i_i_reg_3555 <= grp_fu_3081_p3(39 downto 16);
                p_Result_3_9_i_i_reg_3565 <= grp_fu_3091_p3(39 downto 16);
                p_Result_3_i_i_183_reg_3575 <= grp_fu_3101_p3(39 downto 16);
                p_Result_3_i_i_reg_3475 <= grp_fu_3001_p3(39 downto 16);
                select_ln263_16_reg_3641 <= select_ln263_16_fu_1475_p3;
                select_ln263_17_reg_3647 <= select_ln263_17_fu_1518_p3;
                select_ln263_18_reg_3653 <= select_ln263_18_fu_1561_p3;
                select_ln263_19_reg_3659 <= select_ln263_19_fu_1604_p3;
                select_ln263_20_reg_3665 <= select_ln263_20_fu_1647_p3;
                select_ln263_21_reg_3671 <= select_ln263_21_fu_1690_p3;
                select_ln263_22_reg_3677 <= select_ln263_22_fu_1733_p3;
                select_ln263_23_reg_3683 <= select_ln263_23_fu_1776_p3;
                select_ln263_24_reg_3689 <= select_ln263_24_fu_1819_p3;
                select_ln263_25_reg_3695 <= select_ln263_25_fu_1862_p3;
                select_ln263_26_reg_3701 <= select_ln263_26_fu_1905_p3;
                select_ln263_27_reg_3707 <= select_ln263_27_fu_1948_p3;
                select_ln263_28_reg_3713 <= select_ln263_28_fu_1991_p3;
                select_ln263_29_reg_3719 <= select_ln263_29_fu_2034_p3;
                select_ln263_30_reg_3725 <= select_ln263_30_fu_2077_p3;
                select_ln263_reg_3635 <= select_ln263_fu_1432_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_2_10_i_i_reg_3395 <= s_bias_1_dout(191 downto 176);
                p_Result_2_11_i_i_reg_3411 <= s_bias_1_dout(207 downto 192);
                p_Result_2_12_i_i_reg_3427 <= s_bias_1_dout(223 downto 208);
                p_Result_2_13_i_i_reg_3443 <= s_bias_1_dout(239 downto 224);
                p_Result_2_14_i_i_reg_3459 <= s_bias_1_dout(255 downto 240);
                p_Result_2_1_i_i_reg_3235 <= s_bias_1_dout(31 downto 16);
                p_Result_2_2_i_i_reg_3251 <= s_bias_1_dout(47 downto 32);
                p_Result_2_3_i_i_reg_3267 <= s_bias_1_dout(63 downto 48);
                p_Result_2_4_i_i_reg_3283 <= s_bias_1_dout(79 downto 64);
                p_Result_2_5_i_i_reg_3299 <= s_bias_1_dout(95 downto 80);
                p_Result_2_6_i_i_reg_3315 <= s_bias_1_dout(111 downto 96);
                p_Result_2_7_i_i_reg_3331 <= s_bias_1_dout(127 downto 112);
                p_Result_2_8_i_i_reg_3347 <= s_bias_1_dout(143 downto 128);
                p_Result_2_9_i_i_reg_3363 <= s_bias_1_dout(159 downto 144);
                p_Result_2_i_i_reg_3379 <= s_bias_1_dout(175 downto 160);
                trunc_ln674_2_reg_3219 <= trunc_ln674_2_fu_485_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                p_Result_2_10_i_i_reg_3395_pp0_iter2_reg <= p_Result_2_10_i_i_reg_3395;
                p_Result_2_10_i_i_reg_3395_pp0_iter3_reg <= p_Result_2_10_i_i_reg_3395_pp0_iter2_reg;
                p_Result_2_10_i_i_reg_3395_pp0_iter4_reg <= p_Result_2_10_i_i_reg_3395_pp0_iter3_reg;
                p_Result_2_11_i_i_reg_3411_pp0_iter2_reg <= p_Result_2_11_i_i_reg_3411;
                p_Result_2_11_i_i_reg_3411_pp0_iter3_reg <= p_Result_2_11_i_i_reg_3411_pp0_iter2_reg;
                p_Result_2_11_i_i_reg_3411_pp0_iter4_reg <= p_Result_2_11_i_i_reg_3411_pp0_iter3_reg;
                p_Result_2_12_i_i_reg_3427_pp0_iter2_reg <= p_Result_2_12_i_i_reg_3427;
                p_Result_2_12_i_i_reg_3427_pp0_iter3_reg <= p_Result_2_12_i_i_reg_3427_pp0_iter2_reg;
                p_Result_2_12_i_i_reg_3427_pp0_iter4_reg <= p_Result_2_12_i_i_reg_3427_pp0_iter3_reg;
                p_Result_2_13_i_i_reg_3443_pp0_iter2_reg <= p_Result_2_13_i_i_reg_3443;
                p_Result_2_13_i_i_reg_3443_pp0_iter3_reg <= p_Result_2_13_i_i_reg_3443_pp0_iter2_reg;
                p_Result_2_13_i_i_reg_3443_pp0_iter4_reg <= p_Result_2_13_i_i_reg_3443_pp0_iter3_reg;
                p_Result_2_14_i_i_reg_3459_pp0_iter2_reg <= p_Result_2_14_i_i_reg_3459;
                p_Result_2_14_i_i_reg_3459_pp0_iter3_reg <= p_Result_2_14_i_i_reg_3459_pp0_iter2_reg;
                p_Result_2_14_i_i_reg_3459_pp0_iter4_reg <= p_Result_2_14_i_i_reg_3459_pp0_iter3_reg;
                p_Result_2_1_i_i_reg_3235_pp0_iter2_reg <= p_Result_2_1_i_i_reg_3235;
                p_Result_2_1_i_i_reg_3235_pp0_iter3_reg <= p_Result_2_1_i_i_reg_3235_pp0_iter2_reg;
                p_Result_2_1_i_i_reg_3235_pp0_iter4_reg <= p_Result_2_1_i_i_reg_3235_pp0_iter3_reg;
                p_Result_2_2_i_i_reg_3251_pp0_iter2_reg <= p_Result_2_2_i_i_reg_3251;
                p_Result_2_2_i_i_reg_3251_pp0_iter3_reg <= p_Result_2_2_i_i_reg_3251_pp0_iter2_reg;
                p_Result_2_2_i_i_reg_3251_pp0_iter4_reg <= p_Result_2_2_i_i_reg_3251_pp0_iter3_reg;
                p_Result_2_3_i_i_reg_3267_pp0_iter2_reg <= p_Result_2_3_i_i_reg_3267;
                p_Result_2_3_i_i_reg_3267_pp0_iter3_reg <= p_Result_2_3_i_i_reg_3267_pp0_iter2_reg;
                p_Result_2_3_i_i_reg_3267_pp0_iter4_reg <= p_Result_2_3_i_i_reg_3267_pp0_iter3_reg;
                p_Result_2_4_i_i_reg_3283_pp0_iter2_reg <= p_Result_2_4_i_i_reg_3283;
                p_Result_2_4_i_i_reg_3283_pp0_iter3_reg <= p_Result_2_4_i_i_reg_3283_pp0_iter2_reg;
                p_Result_2_4_i_i_reg_3283_pp0_iter4_reg <= p_Result_2_4_i_i_reg_3283_pp0_iter3_reg;
                p_Result_2_5_i_i_reg_3299_pp0_iter2_reg <= p_Result_2_5_i_i_reg_3299;
                p_Result_2_5_i_i_reg_3299_pp0_iter3_reg <= p_Result_2_5_i_i_reg_3299_pp0_iter2_reg;
                p_Result_2_5_i_i_reg_3299_pp0_iter4_reg <= p_Result_2_5_i_i_reg_3299_pp0_iter3_reg;
                p_Result_2_6_i_i_reg_3315_pp0_iter2_reg <= p_Result_2_6_i_i_reg_3315;
                p_Result_2_6_i_i_reg_3315_pp0_iter3_reg <= p_Result_2_6_i_i_reg_3315_pp0_iter2_reg;
                p_Result_2_6_i_i_reg_3315_pp0_iter4_reg <= p_Result_2_6_i_i_reg_3315_pp0_iter3_reg;
                p_Result_2_7_i_i_reg_3331_pp0_iter2_reg <= p_Result_2_7_i_i_reg_3331;
                p_Result_2_7_i_i_reg_3331_pp0_iter3_reg <= p_Result_2_7_i_i_reg_3331_pp0_iter2_reg;
                p_Result_2_7_i_i_reg_3331_pp0_iter4_reg <= p_Result_2_7_i_i_reg_3331_pp0_iter3_reg;
                p_Result_2_8_i_i_reg_3347_pp0_iter2_reg <= p_Result_2_8_i_i_reg_3347;
                p_Result_2_8_i_i_reg_3347_pp0_iter3_reg <= p_Result_2_8_i_i_reg_3347_pp0_iter2_reg;
                p_Result_2_8_i_i_reg_3347_pp0_iter4_reg <= p_Result_2_8_i_i_reg_3347_pp0_iter3_reg;
                p_Result_2_9_i_i_reg_3363_pp0_iter2_reg <= p_Result_2_9_i_i_reg_3363;
                p_Result_2_9_i_i_reg_3363_pp0_iter3_reg <= p_Result_2_9_i_i_reg_3363_pp0_iter2_reg;
                p_Result_2_9_i_i_reg_3363_pp0_iter4_reg <= p_Result_2_9_i_i_reg_3363_pp0_iter3_reg;
                p_Result_2_i_i_reg_3379_pp0_iter2_reg <= p_Result_2_i_i_reg_3379;
                p_Result_2_i_i_reg_3379_pp0_iter3_reg <= p_Result_2_i_i_reg_3379_pp0_iter2_reg;
                p_Result_2_i_i_reg_3379_pp0_iter4_reg <= p_Result_2_i_i_reg_3379_pp0_iter3_reg;
                select_ln263_16_reg_3641_pp0_iter6_reg <= select_ln263_16_reg_3641;
                select_ln263_17_reg_3647_pp0_iter6_reg <= select_ln263_17_reg_3647;
                select_ln263_18_reg_3653_pp0_iter6_reg <= select_ln263_18_reg_3653;
                select_ln263_19_reg_3659_pp0_iter6_reg <= select_ln263_19_reg_3659;
                select_ln263_20_reg_3665_pp0_iter6_reg <= select_ln263_20_reg_3665;
                select_ln263_21_reg_3671_pp0_iter6_reg <= select_ln263_21_reg_3671;
                select_ln263_22_reg_3677_pp0_iter6_reg <= select_ln263_22_reg_3677;
                select_ln263_23_reg_3683_pp0_iter6_reg <= select_ln263_23_reg_3683;
                select_ln263_24_reg_3689_pp0_iter6_reg <= select_ln263_24_reg_3689;
                select_ln263_25_reg_3695_pp0_iter6_reg <= select_ln263_25_reg_3695;
                select_ln263_26_reg_3701_pp0_iter6_reg <= select_ln263_26_reg_3701;
                select_ln263_27_reg_3707_pp0_iter6_reg <= select_ln263_27_reg_3707;
                select_ln263_28_reg_3713_pp0_iter6_reg <= select_ln263_28_reg_3713;
                select_ln263_29_reg_3719_pp0_iter6_reg <= select_ln263_29_reg_3719;
                select_ln263_30_reg_3725_pp0_iter6_reg <= select_ln263_30_reg_3725;
                select_ln263_reg_3635_pp0_iter6_reg <= select_ln263_reg_3635;
                trunc_ln674_2_reg_3219_pp0_iter2_reg <= trunc_ln674_2_reg_3219;
                trunc_ln674_2_reg_3219_pp0_iter3_reg <= trunc_ln674_2_reg_3219_pp0_iter2_reg;
                trunc_ln674_2_reg_3219_pp0_iter4_reg <= trunc_ln674_2_reg_3219_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                relu_reg_3165 <= relu3_dout;
                rep_reg_3185 <= mul_ln93_1_loc_dout;
                ret_cast_reg_3190 <= OC_V_loc_dout(15 downto 4);
                skip_reg_3161 <= skip3_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (relu_reg_3165 = ap_const_lv1_1))) then
                tmp_15_reg_3500 <= grp_fu_3021_p3(38 downto 16);
                tmp_16_reg_3510 <= grp_fu_3031_p3(38 downto 16);
                tmp_17_reg_3520 <= grp_fu_3041_p3(38 downto 16);
                tmp_18_reg_3530 <= grp_fu_3051_p3(38 downto 16);
                tmp_19_reg_3540 <= grp_fu_3061_p3(38 downto 16);
                tmp_20_reg_3550 <= grp_fu_3071_p3(38 downto 16);
                tmp_21_reg_3560 <= grp_fu_3081_p3(38 downto 16);
                tmp_22_reg_3570 <= grp_fu_3091_p3(38 downto 16);
                tmp_23_reg_3580 <= grp_fu_3101_p3(38 downto 16);
                tmp_24_reg_3590 <= grp_fu_3111_p3(38 downto 16);
                tmp_25_reg_3600 <= grp_fu_3121_p3(38 downto 16);
                tmp_26_reg_3610 <= grp_fu_3131_p3(38 downto 16);
                tmp_27_reg_3620 <= grp_fu_3141_p3(38 downto 16);
                tmp_28_reg_3630 <= grp_fu_3151_p3(38 downto 16);
                tmp_reg_3480 <= grp_fu_3001_p3(38 downto 16);
                tmp_s_reg_3490 <= grp_fu_3011_p3(38 downto 16);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter0, icmp_ln272_fu_322_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln272_fu_322_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln272_fu_322_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    OC_V_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, OC_V_loc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OC_V_loc_blk_n <= OC_V_loc_empty_n;
        else 
            OC_V_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OC_V_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n)
    begin
        if ((not(((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OC_V_loc_read <= ap_const_logic_1;
        else 
            OC_V_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln272_fu_316_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_283) + unsigned(ap_const_lv44_1));
    add_ln297_16_fu_1450_p2 <= std_logic_vector(unsigned(tmp_s_reg_3490) + unsigned(sext_ln691_33_fu_1442_p1));
    add_ln297_17_fu_1493_p2 <= std_logic_vector(unsigned(tmp_15_reg_3500) + unsigned(sext_ln691_34_fu_1485_p1));
    add_ln297_18_fu_1536_p2 <= std_logic_vector(unsigned(tmp_16_reg_3510) + unsigned(sext_ln691_35_fu_1528_p1));
    add_ln297_19_fu_1579_p2 <= std_logic_vector(unsigned(tmp_17_reg_3520) + unsigned(sext_ln691_36_fu_1571_p1));
    add_ln297_20_fu_1622_p2 <= std_logic_vector(unsigned(tmp_18_reg_3530) + unsigned(sext_ln691_37_fu_1614_p1));
    add_ln297_21_fu_1665_p2 <= std_logic_vector(unsigned(tmp_19_reg_3540) + unsigned(sext_ln691_38_fu_1657_p1));
    add_ln297_22_fu_1708_p2 <= std_logic_vector(unsigned(tmp_20_reg_3550) + unsigned(sext_ln691_39_fu_1700_p1));
    add_ln297_23_fu_1751_p2 <= std_logic_vector(unsigned(tmp_21_reg_3560) + unsigned(sext_ln691_40_fu_1743_p1));
    add_ln297_24_fu_1794_p2 <= std_logic_vector(unsigned(tmp_22_reg_3570) + unsigned(sext_ln691_41_fu_1786_p1));
    add_ln297_25_fu_1837_p2 <= std_logic_vector(unsigned(tmp_23_reg_3580) + unsigned(sext_ln691_42_fu_1829_p1));
    add_ln297_26_fu_1880_p2 <= std_logic_vector(unsigned(tmp_24_reg_3590) + unsigned(sext_ln691_43_fu_1872_p1));
    add_ln297_27_fu_1923_p2 <= std_logic_vector(unsigned(tmp_25_reg_3600) + unsigned(sext_ln691_44_fu_1915_p1));
    add_ln297_28_fu_1966_p2 <= std_logic_vector(unsigned(tmp_26_reg_3610) + unsigned(sext_ln691_45_fu_1958_p1));
    add_ln297_29_fu_2009_p2 <= std_logic_vector(unsigned(tmp_27_reg_3620) + unsigned(sext_ln691_46_fu_2001_p1));
    add_ln297_30_fu_2052_p2 <= std_logic_vector(unsigned(tmp_28_reg_3630) + unsigned(sext_ln691_47_fu_2044_p1));
    add_ln297_fu_1407_p2 <= std_logic_vector(unsigned(tmp_reg_3480) + unsigned(sext_ln691_32_fu_1399_p1));
    add_ln691_32_fu_1402_p2 <= std_logic_vector(unsigned(p_Result_3_i_i_reg_3475) + unsigned(sext_ln691_fu_1396_p1));
    add_ln691_34_fu_1445_p2 <= std_logic_vector(unsigned(p_Result_3_1_i_i_reg_3485) + unsigned(sext_ln691_16_fu_1439_p1));
    add_ln691_36_fu_1488_p2 <= std_logic_vector(unsigned(p_Result_3_2_i_i_reg_3495) + unsigned(sext_ln691_17_fu_1482_p1));
    add_ln691_38_fu_1531_p2 <= std_logic_vector(unsigned(p_Result_3_3_i_i_reg_3505) + unsigned(sext_ln691_18_fu_1525_p1));
    add_ln691_40_fu_1574_p2 <= std_logic_vector(unsigned(p_Result_3_4_i_i_reg_3515) + unsigned(sext_ln691_19_fu_1568_p1));
    add_ln691_42_fu_1617_p2 <= std_logic_vector(unsigned(p_Result_3_5_i_i_reg_3525) + unsigned(sext_ln691_20_fu_1611_p1));
    add_ln691_44_fu_1660_p2 <= std_logic_vector(unsigned(p_Result_3_6_i_i_reg_3535) + unsigned(sext_ln691_21_fu_1654_p1));
    add_ln691_46_fu_1703_p2 <= std_logic_vector(unsigned(p_Result_3_7_i_i_reg_3545) + unsigned(sext_ln691_22_fu_1697_p1));
    add_ln691_48_fu_1746_p2 <= std_logic_vector(unsigned(p_Result_3_8_i_i_reg_3555) + unsigned(sext_ln691_23_fu_1740_p1));
    add_ln691_50_fu_1789_p2 <= std_logic_vector(unsigned(p_Result_3_9_i_i_reg_3565) + unsigned(sext_ln691_24_fu_1783_p1));
    add_ln691_52_fu_1832_p2 <= std_logic_vector(unsigned(p_Result_3_i_i_183_reg_3575) + unsigned(sext_ln691_25_fu_1826_p1));
    add_ln691_54_fu_1875_p2 <= std_logic_vector(unsigned(p_Result_3_10_i_i_reg_3585) + unsigned(sext_ln691_26_fu_1869_p1));
    add_ln691_56_fu_1918_p2 <= std_logic_vector(unsigned(p_Result_3_11_i_i_reg_3595) + unsigned(sext_ln691_27_fu_1912_p1));
    add_ln691_58_fu_1961_p2 <= std_logic_vector(unsigned(p_Result_3_12_i_i_reg_3605) + unsigned(sext_ln691_28_fu_1955_p1));
    add_ln691_60_fu_2004_p2 <= std_logic_vector(unsigned(p_Result_3_13_i_i_reg_3615) + unsigned(sext_ln691_29_fu_1998_p1));
    add_ln691_62_fu_2047_p2 <= std_logic_vector(unsigned(p_Result_3_14_i_i_reg_3625) + unsigned(sext_ln691_30_fu_2041_p1));
    add_ln692_16_fu_2111_p2 <= std_logic_vector(unsigned(select_ln263_16_reg_3641) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_17_fu_2138_p2 <= std_logic_vector(unsigned(select_ln263_17_reg_3647) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_18_fu_2165_p2 <= std_logic_vector(unsigned(select_ln263_18_reg_3653) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_19_fu_2192_p2 <= std_logic_vector(unsigned(select_ln263_19_reg_3659) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_20_fu_2219_p2 <= std_logic_vector(unsigned(select_ln263_20_reg_3665) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_21_fu_2246_p2 <= std_logic_vector(unsigned(select_ln263_21_reg_3671) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_22_fu_2273_p2 <= std_logic_vector(unsigned(select_ln263_22_reg_3677) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_23_fu_2300_p2 <= std_logic_vector(unsigned(select_ln263_23_reg_3683) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_24_fu_2327_p2 <= std_logic_vector(unsigned(select_ln263_24_reg_3689) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_25_fu_2354_p2 <= std_logic_vector(unsigned(select_ln263_25_reg_3695) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_26_fu_2381_p2 <= std_logic_vector(unsigned(select_ln263_26_reg_3701) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_27_fu_2408_p2 <= std_logic_vector(unsigned(select_ln263_27_reg_3707) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_28_fu_2435_p2 <= std_logic_vector(unsigned(select_ln263_28_reg_3713) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_29_fu_2462_p2 <= std_logic_vector(unsigned(select_ln263_29_reg_3719) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_30_fu_2489_p2 <= std_logic_vector(unsigned(select_ln263_30_reg_3725) + unsigned(ap_const_lv24_FFFF80));
    add_ln692_fu_2084_p2 <= std_logic_vector(unsigned(select_ln263_reg_3635) + unsigned(ap_const_lv24_FFFF80));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(s_conv3_empty_n, f3_full_n, s_scale_1_empty_n, s_bias_1_empty_n, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_enable_reg_pp0_iter7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0) and (f3_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((s_conv3_empty_n = ap_const_logic_0) or ((skip_reg_3161 = ap_const_lv1_0) and (s_bias_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_0) and (s_scale_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_1) and (f3_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(s_conv3_empty_n, f3_full_n, s_scale_1_empty_n, s_bias_1_empty_n, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_enable_reg_pp0_iter7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0) and (f3_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((s_conv3_empty_n = ap_const_logic_0) or ((skip_reg_3161 = ap_const_lv1_0) and (s_bias_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_0) and (s_scale_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_1) and (f3_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(s_conv3_empty_n, f3_full_n, s_scale_1_empty_n, s_bias_1_empty_n, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_enable_reg_pp0_iter7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0) and (f3_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((s_conv3_empty_n = ap_const_logic_0) or ((skip_reg_3161 = ap_const_lv1_0) and (s_bias_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_0) and (s_scale_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_1) and (f3_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n)
    begin
                ap_block_state1 <= ((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter7_assign_proc : process(f3_full_n, skip_reg_3161)
    begin
                ap_block_state14_pp0_stage0_iter7 <= ((skip_reg_3161 = ap_const_lv1_0) and (f3_full_n = ap_const_logic_0));
    end process;

        ap_block_state7_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter1_assign_proc : process(s_conv3_empty_n, f3_full_n, s_scale_1_empty_n, s_bias_1_empty_n, skip_reg_3161)
    begin
                ap_block_state8_pp0_stage0_iter1 <= ((s_conv3_empty_n = ap_const_logic_0) or ((skip_reg_3161 = ap_const_lv1_0) and (s_bias_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_0) and (s_scale_1_empty_n = ap_const_logic_0)) or ((skip_reg_3161 = ap_const_lv1_1) and (f3_full_n = ap_const_logic_0)));
    end process;

        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2456_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, skip_reg_3161)
    begin
                ap_condition_2456 <= ((skip_reg_3161 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state7_assign_proc : process(icmp_ln272_fu_322_p2)
    begin
        if ((icmp_ln272_fu_322_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    f3_blk_n_assign_proc : process(f3_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, skip_reg_3161, ap_enable_reg_pp0_iter7)
    begin
        if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((skip_reg_3161 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            f3_blk_n <= f3_full_n;
        else 
            f3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    f3_din_assign_proc : process(skip_reg_3161, ap_enable_reg_pp0_iter7, p_Result_i_i_fu_1071_p17, ap_block_pp0_stage0_01001, p_Result_4_i_i_fu_2964_p17, ap_condition_2456)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0))) then 
                f3_din <= p_Result_4_i_i_fu_2964_p17;
            elsif ((ap_const_boolean_1 = ap_condition_2456)) then 
                f3_din <= p_Result_i_i_fu_1071_p17;
            else 
                f3_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            f3_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    f3_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((skip_reg_3161 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            f3_write <= ap_const_logic_1;
        else 
            f3_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_3001_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3001_ce <= ap_const_logic_1;
        else 
            grp_fu_3001_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3001_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3011_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3011_ce <= ap_const_logic_1;
        else 
            grp_fu_3011_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3011_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3021_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3021_ce <= ap_const_logic_1;
        else 
            grp_fu_3021_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3021_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3031_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3031_ce <= ap_const_logic_1;
        else 
            grp_fu_3031_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3031_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3041_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3041_ce <= ap_const_logic_1;
        else 
            grp_fu_3041_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3041_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3051_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3051_ce <= ap_const_logic_1;
        else 
            grp_fu_3051_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3051_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3061_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3061_ce <= ap_const_logic_1;
        else 
            grp_fu_3061_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3061_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3071_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3071_ce <= ap_const_logic_1;
        else 
            grp_fu_3071_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3071_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3081_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3081_ce <= ap_const_logic_1;
        else 
            grp_fu_3081_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3081_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3091_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3091_ce <= ap_const_logic_1;
        else 
            grp_fu_3091_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3091_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3101_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3101_ce <= ap_const_logic_1;
        else 
            grp_fu_3101_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3101_p2 <= ap_const_lv40_8000(17 - 1 downto 0);
    grp_fu_310_p0 <= grp_fu_310_p00(32 - 1 downto 0);
    grp_fu_310_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rep_reg_3185),44));
    grp_fu_310_p1 <= grp_fu_310_p10(12 - 1 downto 0);
    grp_fu_310_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_cast_reg_3190),44));

    grp_fu_3111_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3111_ce <= ap_const_logic_1;
        else 
            grp_fu_3111_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3111_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3121_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3121_ce <= ap_const_logic_1;
        else 
            grp_fu_3121_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3121_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3131_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3131_ce <= ap_const_logic_1;
        else 
            grp_fu_3131_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3131_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3141_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3141_ce <= ap_const_logic_1;
        else 
            grp_fu_3141_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3141_p2 <= ap_const_lv40_8000(17 - 1 downto 0);

    grp_fu_3151_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3151_ce <= ap_const_logic_1;
        else 
            grp_fu_3151_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3151_p2 <= ap_const_lv40_8000(17 - 1 downto 0);
    icmp_ln272_fu_322_p2 <= "1" when (indvar_flatten_reg_283 = bound_reg_3205) else "0";
    icmp_ln878_16_fu_2132_p2 <= "1" when (signed(add_ln692_16_fu_2111_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_17_fu_2159_p2 <= "1" when (signed(add_ln692_17_fu_2138_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_18_fu_2186_p2 <= "1" when (signed(add_ln692_18_fu_2165_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_19_fu_2213_p2 <= "1" when (signed(add_ln692_19_fu_2192_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_20_fu_2240_p2 <= "1" when (signed(add_ln692_20_fu_2219_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_21_fu_2267_p2 <= "1" when (signed(add_ln692_21_fu_2246_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_22_fu_2294_p2 <= "1" when (signed(add_ln692_22_fu_2273_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_23_fu_2321_p2 <= "1" when (signed(add_ln692_23_fu_2300_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_24_fu_2348_p2 <= "1" when (signed(add_ln692_24_fu_2327_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_25_fu_2375_p2 <= "1" when (signed(add_ln692_25_fu_2354_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_26_fu_2402_p2 <= "1" when (signed(add_ln692_26_fu_2381_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_27_fu_2429_p2 <= "1" when (signed(add_ln692_27_fu_2408_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_28_fu_2456_p2 <= "1" when (signed(add_ln692_28_fu_2435_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_29_fu_2483_p2 <= "1" when (signed(add_ln692_29_fu_2462_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_30_fu_2510_p2 <= "1" when (signed(add_ln692_30_fu_2489_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln878_fu_2105_p2 <= "1" when (signed(add_ln692_fu_2084_p2) < signed(ap_const_lv24_FFFF80)) else "0";
    icmp_ln886_16_fu_2126_p2 <= "1" when (signed(tmp_50_fu_2116_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_17_fu_2153_p2 <= "1" when (signed(tmp_52_fu_2143_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_18_fu_2180_p2 <= "1" when (signed(tmp_54_fu_2170_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_19_fu_2207_p2 <= "1" when (signed(tmp_56_fu_2197_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_20_fu_2234_p2 <= "1" when (signed(tmp_58_fu_2224_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_21_fu_2261_p2 <= "1" when (signed(tmp_60_fu_2251_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_22_fu_2288_p2 <= "1" when (signed(tmp_62_fu_2278_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_23_fu_2315_p2 <= "1" when (signed(tmp_64_fu_2305_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_24_fu_2342_p2 <= "1" when (signed(tmp_66_fu_2332_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_25_fu_2369_p2 <= "1" when (signed(tmp_68_fu_2359_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_26_fu_2396_p2 <= "1" when (signed(tmp_70_fu_2386_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_27_fu_2423_p2 <= "1" when (signed(tmp_72_fu_2413_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_28_fu_2450_p2 <= "1" when (signed(tmp_74_fu_2440_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_29_fu_2477_p2 <= "1" when (signed(tmp_76_fu_2467_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_30_fu_2504_p2 <= "1" when (signed(tmp_78_fu_2494_p4) > signed(ap_const_lv17_0)) else "0";
    icmp_ln886_fu_2099_p2 <= "1" when (signed(tmp_48_fu_2089_p4) > signed(ap_const_lv17_0)) else "0";

    mul_ln93_1_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mul_ln93_1_loc_blk_n <= mul_ln93_1_loc_empty_n;
        else 
            mul_ln93_1_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mul_ln93_1_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n)
    begin
        if ((not(((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mul_ln93_1_loc_read <= ap_const_logic_1;
        else 
            mul_ln93_1_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln69_16_fu_2560_p2 <= (icmp_ln886_16_reg_3742 or icmp_ln878_16_reg_3748);
    or_ln69_17_fu_2588_p2 <= (icmp_ln886_17_reg_3753 or icmp_ln878_17_reg_3759);
    or_ln69_18_fu_2616_p2 <= (icmp_ln886_18_reg_3764 or icmp_ln878_18_reg_3770);
    or_ln69_19_fu_2644_p2 <= (icmp_ln886_19_reg_3775 or icmp_ln878_19_reg_3781);
    or_ln69_20_fu_2672_p2 <= (icmp_ln886_20_reg_3786 or icmp_ln878_20_reg_3792);
    or_ln69_21_fu_2700_p2 <= (icmp_ln886_21_reg_3797 or icmp_ln878_21_reg_3803);
    or_ln69_22_fu_2728_p2 <= (icmp_ln886_22_reg_3808 or icmp_ln878_22_reg_3814);
    or_ln69_23_fu_2756_p2 <= (icmp_ln886_23_reg_3819 or icmp_ln878_23_reg_3825);
    or_ln69_24_fu_2784_p2 <= (icmp_ln886_24_reg_3830 or icmp_ln878_24_reg_3836);
    or_ln69_25_fu_2812_p2 <= (icmp_ln886_25_reg_3841 or icmp_ln878_25_reg_3847);
    or_ln69_26_fu_2840_p2 <= (icmp_ln886_26_reg_3852 or icmp_ln878_26_reg_3858);
    or_ln69_27_fu_2868_p2 <= (icmp_ln886_27_reg_3863 or icmp_ln878_27_reg_3869);
    or_ln69_28_fu_2896_p2 <= (icmp_ln886_28_reg_3874 or icmp_ln878_28_reg_3880);
    or_ln69_29_fu_2924_p2 <= (icmp_ln886_29_reg_3885 or icmp_ln878_29_reg_3891);
    or_ln69_30_fu_2952_p2 <= (icmp_ln886_30_reg_3896 or icmp_ln878_30_reg_3902);
    or_ln69_fu_2532_p2 <= (icmp_ln886_reg_3731 or icmp_ln878_reg_3737);
    p_Result_1_10_i_i_fu_777_p4 <= s_scale_1_dout(191 downto 176);
    p_Result_1_11_i_i_fu_805_p4 <= s_scale_1_dout(207 downto 192);
    p_Result_1_12_i_i_fu_833_p4 <= s_scale_1_dout(223 downto 208);
    p_Result_1_13_i_i_fu_861_p4 <= s_scale_1_dout(239 downto 224);
    p_Result_1_14_i_i_fu_889_p4 <= s_scale_1_dout(255 downto 240);
    p_Result_1_1_i_i_fu_497_p4 <= s_scale_1_dout(31 downto 16);
    p_Result_1_2_i_i_fu_525_p4 <= s_scale_1_dout(47 downto 32);
    p_Result_1_3_i_i_fu_553_p4 <= s_scale_1_dout(63 downto 48);
    p_Result_1_4_i_i_fu_581_p4 <= s_scale_1_dout(79 downto 64);
    p_Result_1_5_i_i_fu_609_p4 <= s_scale_1_dout(95 downto 80);
    p_Result_1_6_i_i_fu_637_p4 <= s_scale_1_dout(111 downto 96);
    p_Result_1_7_i_i_fu_665_p4 <= s_scale_1_dout(127 downto 112);
    p_Result_1_8_i_i_fu_693_p4 <= s_scale_1_dout(143 downto 128);
    p_Result_1_9_i_i_fu_721_p4 <= s_scale_1_dout(159 downto 144);
    p_Result_1_i_i_fu_749_p4 <= s_scale_1_dout(175 downto 160);
    p_Result_4_i_i_fu_2964_p17 <= (((((((((((((((select_ln69_62_fu_2956_p3 & select_ln69_60_fu_2928_p3) & select_ln69_58_fu_2900_p3) & select_ln69_56_fu_2872_p3) & select_ln69_54_fu_2844_p3) & select_ln69_52_fu_2816_p3) & select_ln69_50_fu_2788_p3) & select_ln69_48_fu_2760_p3) & select_ln69_46_fu_2732_p3) & select_ln69_44_fu_2704_p3) & select_ln69_42_fu_2676_p3) & select_ln69_40_fu_2648_p3) & select_ln69_38_fu_2620_p3) & select_ln69_36_fu_2592_p3) & select_ln69_34_fu_2564_p3) & select_ln69_32_fu_2536_p3);
    p_Result_i_i_fu_1071_p17 <= (((((((((((((((trunc_ln69_28_fu_1061_p4 & trunc_ln69_27_fu_1051_p4) & trunc_ln69_26_fu_1041_p4) & trunc_ln69_25_fu_1031_p4) & trunc_ln69_24_fu_1021_p4) & trunc_ln69_23_fu_1011_p4) & trunc_ln69_22_fu_1001_p4) & trunc_ln69_21_fu_991_p4) & trunc_ln69_20_fu_981_p4) & trunc_ln69_19_fu_971_p4) & trunc_ln69_18_fu_961_p4) & trunc_ln69_17_fu_951_p4) & trunc_ln69_16_fu_941_p4) & trunc_ln69_15_fu_931_p4) & trunc_ln69_s_fu_921_p4) & trunc_ln69_fu_917_p1);

    relu3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, relu3_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            relu3_blk_n <= relu3_empty_n;
        else 
            relu3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    relu3_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n)
    begin
        if ((not(((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            relu3_read <= ap_const_logic_1;
        else 
            relu3_read <= ap_const_logic_0;
        end if; 
    end process;


    s_bias_1_blk_n_assign_proc : process(s_bias_1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, skip_reg_3161)
    begin
        if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_bias_1_blk_n <= s_bias_1_empty_n;
        else 
            s_bias_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_bias_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_block_pp0_stage0_11001)
    begin
        if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_bias_1_read <= ap_const_logic_1;
        else 
            s_bias_1_read <= ap_const_logic_0;
        end if; 
    end process;


    s_conv3_blk_n_assign_proc : process(s_conv3_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_conv3_blk_n <= s_conv3_empty_n;
        else 
            s_conv3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_conv3_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_conv3_read <= ap_const_logic_1;
        else 
            s_conv3_read <= ap_const_logic_0;
        end if; 
    end process;


    s_scale_1_blk_n_assign_proc : process(s_scale_1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, skip_reg_3161)
    begin
        if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_scale_1_blk_n <= s_scale_1_empty_n;
        else 
            s_scale_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_scale_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, skip_reg_3161, ap_block_pp0_stage0_11001)
    begin
        if (((skip_reg_3161 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_scale_1_read <= ap_const_logic_1;
        else 
            s_scale_1_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln263_16_fu_1475_p3 <= 
        zext_ln299_16_fu_1471_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_34_fu_1445_p2;
    select_ln263_17_fu_1518_p3 <= 
        zext_ln299_17_fu_1514_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_36_fu_1488_p2;
    select_ln263_18_fu_1561_p3 <= 
        zext_ln299_18_fu_1557_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_38_fu_1531_p2;
    select_ln263_19_fu_1604_p3 <= 
        zext_ln299_19_fu_1600_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_40_fu_1574_p2;
    select_ln263_20_fu_1647_p3 <= 
        zext_ln299_20_fu_1643_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_42_fu_1617_p2;
    select_ln263_21_fu_1690_p3 <= 
        zext_ln299_21_fu_1686_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_44_fu_1660_p2;
    select_ln263_22_fu_1733_p3 <= 
        zext_ln299_22_fu_1729_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_46_fu_1703_p2;
    select_ln263_23_fu_1776_p3 <= 
        zext_ln299_23_fu_1772_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_48_fu_1746_p2;
    select_ln263_24_fu_1819_p3 <= 
        zext_ln299_24_fu_1815_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_50_fu_1789_p2;
    select_ln263_25_fu_1862_p3 <= 
        zext_ln299_25_fu_1858_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_52_fu_1832_p2;
    select_ln263_26_fu_1905_p3 <= 
        zext_ln299_26_fu_1901_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_54_fu_1875_p2;
    select_ln263_27_fu_1948_p3 <= 
        zext_ln299_27_fu_1944_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_56_fu_1918_p2;
    select_ln263_28_fu_1991_p3 <= 
        zext_ln299_28_fu_1987_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_58_fu_1961_p2;
    select_ln263_29_fu_2034_p3 <= 
        zext_ln299_29_fu_2030_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_60_fu_2004_p2;
    select_ln263_30_fu_2077_p3 <= 
        zext_ln299_30_fu_2073_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_62_fu_2047_p2;
    select_ln263_fu_1432_p3 <= 
        zext_ln299_fu_1428_p1 when (relu_reg_3165(0) = '1') else 
        add_ln691_32_fu_1402_p2;
    select_ln298_16_fu_1463_p3 <= 
        ap_const_lv23_0 when (tmp_49_fu_1455_p3(0) = '1') else 
        add_ln297_16_fu_1450_p2;
    select_ln298_17_fu_1506_p3 <= 
        ap_const_lv23_0 when (tmp_51_fu_1498_p3(0) = '1') else 
        add_ln297_17_fu_1493_p2;
    select_ln298_18_fu_1549_p3 <= 
        ap_const_lv23_0 when (tmp_53_fu_1541_p3(0) = '1') else 
        add_ln297_18_fu_1536_p2;
    select_ln298_19_fu_1592_p3 <= 
        ap_const_lv23_0 when (tmp_55_fu_1584_p3(0) = '1') else 
        add_ln297_19_fu_1579_p2;
    select_ln298_20_fu_1635_p3 <= 
        ap_const_lv23_0 when (tmp_57_fu_1627_p3(0) = '1') else 
        add_ln297_20_fu_1622_p2;
    select_ln298_21_fu_1678_p3 <= 
        ap_const_lv23_0 when (tmp_59_fu_1670_p3(0) = '1') else 
        add_ln297_21_fu_1665_p2;
    select_ln298_22_fu_1721_p3 <= 
        ap_const_lv23_0 when (tmp_61_fu_1713_p3(0) = '1') else 
        add_ln297_22_fu_1708_p2;
    select_ln298_23_fu_1764_p3 <= 
        ap_const_lv23_0 when (tmp_63_fu_1756_p3(0) = '1') else 
        add_ln297_23_fu_1751_p2;
    select_ln298_24_fu_1807_p3 <= 
        ap_const_lv23_0 when (tmp_65_fu_1799_p3(0) = '1') else 
        add_ln297_24_fu_1794_p2;
    select_ln298_25_fu_1850_p3 <= 
        ap_const_lv23_0 when (tmp_67_fu_1842_p3(0) = '1') else 
        add_ln297_25_fu_1837_p2;
    select_ln298_26_fu_1893_p3 <= 
        ap_const_lv23_0 when (tmp_69_fu_1885_p3(0) = '1') else 
        add_ln297_26_fu_1880_p2;
    select_ln298_27_fu_1936_p3 <= 
        ap_const_lv23_0 when (tmp_71_fu_1928_p3(0) = '1') else 
        add_ln297_27_fu_1923_p2;
    select_ln298_28_fu_1979_p3 <= 
        ap_const_lv23_0 when (tmp_73_fu_1971_p3(0) = '1') else 
        add_ln297_28_fu_1966_p2;
    select_ln298_29_fu_2022_p3 <= 
        ap_const_lv23_0 when (tmp_75_fu_2014_p3(0) = '1') else 
        add_ln297_29_fu_2009_p2;
    select_ln298_30_fu_2065_p3 <= 
        ap_const_lv23_0 when (tmp_77_fu_2057_p3(0) = '1') else 
        add_ln297_30_fu_2052_p2;
    select_ln298_fu_1420_p3 <= 
        ap_const_lv23_0 when (tmp_47_fu_1412_p3(0) = '1') else 
        add_ln297_fu_1407_p2;
    select_ln69_32_fu_2536_p3 <= 
        select_ln69_fu_2525_p3 when (or_ln69_fu_2532_p2(0) = '1') else 
        xor_ln69_fu_2519_p2;
    select_ln69_33_fu_2553_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_16_reg_3742(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_34_fu_2564_p3 <= 
        select_ln69_33_fu_2553_p3 when (or_ln69_16_fu_2560_p2(0) = '1') else 
        xor_ln69_16_fu_2547_p2;
    select_ln69_35_fu_2581_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_17_reg_3753(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_36_fu_2592_p3 <= 
        select_ln69_35_fu_2581_p3 when (or_ln69_17_fu_2588_p2(0) = '1') else 
        xor_ln69_17_fu_2575_p2;
    select_ln69_37_fu_2609_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_18_reg_3764(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_38_fu_2620_p3 <= 
        select_ln69_37_fu_2609_p3 when (or_ln69_18_fu_2616_p2(0) = '1') else 
        xor_ln69_18_fu_2603_p2;
    select_ln69_39_fu_2637_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_19_reg_3775(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_40_fu_2648_p3 <= 
        select_ln69_39_fu_2637_p3 when (or_ln69_19_fu_2644_p2(0) = '1') else 
        xor_ln69_19_fu_2631_p2;
    select_ln69_41_fu_2665_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_20_reg_3786(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_42_fu_2676_p3 <= 
        select_ln69_41_fu_2665_p3 when (or_ln69_20_fu_2672_p2(0) = '1') else 
        xor_ln69_20_fu_2659_p2;
    select_ln69_43_fu_2693_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_21_reg_3797(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_44_fu_2704_p3 <= 
        select_ln69_43_fu_2693_p3 when (or_ln69_21_fu_2700_p2(0) = '1') else 
        xor_ln69_21_fu_2687_p2;
    select_ln69_45_fu_2721_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_22_reg_3808(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_46_fu_2732_p3 <= 
        select_ln69_45_fu_2721_p3 when (or_ln69_22_fu_2728_p2(0) = '1') else 
        xor_ln69_22_fu_2715_p2;
    select_ln69_47_fu_2749_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_23_reg_3819(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_48_fu_2760_p3 <= 
        select_ln69_47_fu_2749_p3 when (or_ln69_23_fu_2756_p2(0) = '1') else 
        xor_ln69_23_fu_2743_p2;
    select_ln69_49_fu_2777_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_24_reg_3830(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_50_fu_2788_p3 <= 
        select_ln69_49_fu_2777_p3 when (or_ln69_24_fu_2784_p2(0) = '1') else 
        xor_ln69_24_fu_2771_p2;
    select_ln69_51_fu_2805_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_25_reg_3841(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_52_fu_2816_p3 <= 
        select_ln69_51_fu_2805_p3 when (or_ln69_25_fu_2812_p2(0) = '1') else 
        xor_ln69_25_fu_2799_p2;
    select_ln69_53_fu_2833_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_26_reg_3852(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_54_fu_2844_p3 <= 
        select_ln69_53_fu_2833_p3 when (or_ln69_26_fu_2840_p2(0) = '1') else 
        xor_ln69_26_fu_2827_p2;
    select_ln69_55_fu_2861_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_27_reg_3863(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_56_fu_2872_p3 <= 
        select_ln69_55_fu_2861_p3 when (or_ln69_27_fu_2868_p2(0) = '1') else 
        xor_ln69_27_fu_2855_p2;
    select_ln69_57_fu_2889_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_28_reg_3874(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_58_fu_2900_p3 <= 
        select_ln69_57_fu_2889_p3 when (or_ln69_28_fu_2896_p2(0) = '1') else 
        xor_ln69_28_fu_2883_p2;
    select_ln69_59_fu_2917_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_29_reg_3885(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_60_fu_2928_p3 <= 
        select_ln69_59_fu_2917_p3 when (or_ln69_29_fu_2924_p2(0) = '1') else 
        xor_ln69_29_fu_2911_p2;
    select_ln69_61_fu_2945_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_30_reg_3896(0) = '1') else 
        ap_const_lv8_80;
    select_ln69_62_fu_2956_p3 <= 
        select_ln69_61_fu_2945_p3 when (or_ln69_30_fu_2952_p2(0) = '1') else 
        xor_ln69_30_fu_2939_p2;
    select_ln69_fu_2525_p3 <= 
        ap_const_lv8_7F when (icmp_ln886_reg_3731(0) = '1') else 
        ap_const_lv8_80;
        sext_ln691_16_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_1_i_i_reg_3235_pp0_iter4_reg),24));

        sext_ln691_17_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_2_i_i_reg_3251_pp0_iter4_reg),24));

        sext_ln691_18_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_3_i_i_reg_3267_pp0_iter4_reg),24));

        sext_ln691_19_fu_1568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_4_i_i_reg_3283_pp0_iter4_reg),24));

        sext_ln691_20_fu_1611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_5_i_i_reg_3299_pp0_iter4_reg),24));

        sext_ln691_21_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_6_i_i_reg_3315_pp0_iter4_reg),24));

        sext_ln691_22_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_7_i_i_reg_3331_pp0_iter4_reg),24));

        sext_ln691_23_fu_1740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_8_i_i_reg_3347_pp0_iter4_reg),24));

        sext_ln691_24_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_9_i_i_reg_3363_pp0_iter4_reg),24));

        sext_ln691_25_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i_i_reg_3379_pp0_iter4_reg),24));

        sext_ln691_26_fu_1869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_10_i_i_reg_3395_pp0_iter4_reg),24));

        sext_ln691_27_fu_1912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_11_i_i_reg_3411_pp0_iter4_reg),24));

        sext_ln691_28_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_12_i_i_reg_3427_pp0_iter4_reg),24));

        sext_ln691_29_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_13_i_i_reg_3443_pp0_iter4_reg),24));

        sext_ln691_30_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_14_i_i_reg_3459_pp0_iter4_reg),24));

        sext_ln691_32_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln674_2_reg_3219_pp0_iter4_reg),23));

        sext_ln691_33_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_1_i_i_reg_3235_pp0_iter4_reg),23));

        sext_ln691_34_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_2_i_i_reg_3251_pp0_iter4_reg),23));

        sext_ln691_35_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_3_i_i_reg_3267_pp0_iter4_reg),23));

        sext_ln691_36_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_4_i_i_reg_3283_pp0_iter4_reg),23));

        sext_ln691_37_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_5_i_i_reg_3299_pp0_iter4_reg),23));

        sext_ln691_38_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_6_i_i_reg_3315_pp0_iter4_reg),23));

        sext_ln691_39_fu_1700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_7_i_i_reg_3331_pp0_iter4_reg),23));

        sext_ln691_40_fu_1743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_8_i_i_reg_3347_pp0_iter4_reg),23));

        sext_ln691_41_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_9_i_i_reg_3363_pp0_iter4_reg),23));

        sext_ln691_42_fu_1829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i_i_reg_3379_pp0_iter4_reg),23));

        sext_ln691_43_fu_1872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_10_i_i_reg_3395_pp0_iter4_reg),23));

        sext_ln691_44_fu_1915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_11_i_i_reg_3411_pp0_iter4_reg),23));

        sext_ln691_45_fu_1958_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_12_i_i_reg_3427_pp0_iter4_reg),23));

        sext_ln691_46_fu_2001_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_13_i_i_reg_3443_pp0_iter4_reg),23));

        sext_ln691_47_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_14_i_i_reg_3459_pp0_iter4_reg),23));

        sext_ln691_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln674_2_reg_3219_pp0_iter4_reg),24));


    skip3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, skip3_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            skip3_blk_n <= skip3_empty_n;
        else 
            skip3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    skip3_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, mul_ln93_1_loc_empty_n, OC_V_loc_empty_n, skip3_empty_n, relu3_empty_n)
    begin
        if ((not(((relu3_empty_n = ap_const_logic_0) or (skip3_empty_n = ap_const_logic_0) or (mul_ln93_1_loc_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OC_V_loc_empty_n) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            skip3_read <= ap_const_logic_1;
        else 
            skip3_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_47_fu_1412_p3 <= add_ln691_32_fu_1402_p2(23 downto 23);
    tmp_48_fu_2089_p4 <= add_ln692_fu_2084_p2(23 downto 7);
    tmp_49_fu_1455_p3 <= add_ln691_34_fu_1445_p2(23 downto 23);
    tmp_50_fu_2116_p4 <= add_ln692_16_fu_2111_p2(23 downto 7);
    tmp_51_fu_1498_p3 <= add_ln691_36_fu_1488_p2(23 downto 23);
    tmp_52_fu_2143_p4 <= add_ln692_17_fu_2138_p2(23 downto 7);
    tmp_53_fu_1541_p3 <= add_ln691_38_fu_1531_p2(23 downto 23);
    tmp_54_fu_2170_p4 <= add_ln692_18_fu_2165_p2(23 downto 7);
    tmp_55_fu_1584_p3 <= add_ln691_40_fu_1574_p2(23 downto 23);
    tmp_56_fu_2197_p4 <= add_ln692_19_fu_2192_p2(23 downto 7);
    tmp_57_fu_1627_p3 <= add_ln691_42_fu_1617_p2(23 downto 23);
    tmp_58_fu_2224_p4 <= add_ln692_20_fu_2219_p2(23 downto 7);
    tmp_59_fu_1670_p3 <= add_ln691_44_fu_1660_p2(23 downto 23);
    tmp_60_fu_2251_p4 <= add_ln692_21_fu_2246_p2(23 downto 7);
    tmp_61_fu_1713_p3 <= add_ln691_46_fu_1703_p2(23 downto 23);
    tmp_62_fu_2278_p4 <= add_ln692_22_fu_2273_p2(23 downto 7);
    tmp_63_fu_1756_p3 <= add_ln691_48_fu_1746_p2(23 downto 23);
    tmp_64_fu_2305_p4 <= add_ln692_23_fu_2300_p2(23 downto 7);
    tmp_65_fu_1799_p3 <= add_ln691_50_fu_1789_p2(23 downto 23);
    tmp_66_fu_2332_p4 <= add_ln692_24_fu_2327_p2(23 downto 7);
    tmp_67_fu_1842_p3 <= add_ln691_52_fu_1832_p2(23 downto 23);
    tmp_68_fu_2359_p4 <= add_ln692_25_fu_2354_p2(23 downto 7);
    tmp_69_fu_1885_p3 <= add_ln691_54_fu_1875_p2(23 downto 23);
    tmp_70_fu_2386_p4 <= add_ln692_26_fu_2381_p2(23 downto 7);
    tmp_71_fu_1928_p3 <= add_ln691_56_fu_1918_p2(23 downto 23);
    tmp_72_fu_2413_p4 <= add_ln692_27_fu_2408_p2(23 downto 7);
    tmp_73_fu_1971_p3 <= add_ln691_58_fu_1961_p2(23 downto 23);
    tmp_74_fu_2440_p4 <= add_ln692_28_fu_2435_p2(23 downto 7);
    tmp_75_fu_2014_p3 <= add_ln691_60_fu_2004_p2(23 downto 23);
    tmp_76_fu_2467_p4 <= add_ln692_29_fu_2462_p2(23 downto 7);
    tmp_77_fu_2057_p3 <= add_ln691_62_fu_2047_p2(23 downto 23);
    tmp_78_fu_2494_p4 <= add_ln692_30_fu_2489_p2(23 downto 7);
    tmp_data_V_0_fu_327_p1 <= s_conv3_dout(24 - 1 downto 0);
    tmp_data_V_10_fu_421_p4 <= s_conv3_dout(343 downto 320);
    tmp_data_V_11_fu_431_p4 <= s_conv3_dout(375 downto 352);
    tmp_data_V_12_fu_441_p4 <= s_conv3_dout(407 downto 384);
    tmp_data_V_13_fu_451_p4 <= s_conv3_dout(439 downto 416);
    tmp_data_V_14_fu_461_p4 <= s_conv3_dout(471 downto 448);
    tmp_data_V_15_fu_471_p4 <= s_conv3_dout(503 downto 480);
    tmp_data_V_1_fu_331_p4 <= s_conv3_dout(55 downto 32);
    tmp_data_V_2_fu_341_p4 <= s_conv3_dout(87 downto 64);
    tmp_data_V_3_fu_351_p4 <= s_conv3_dout(119 downto 96);
    tmp_data_V_4_fu_361_p4 <= s_conv3_dout(151 downto 128);
    tmp_data_V_5_fu_371_p4 <= s_conv3_dout(183 downto 160);
    tmp_data_V_6_fu_381_p4 <= s_conv3_dout(215 downto 192);
    tmp_data_V_7_fu_391_p4 <= s_conv3_dout(247 downto 224);
    tmp_data_V_8_fu_401_p4 <= s_conv3_dout(279 downto 256);
    tmp_data_V_9_fu_411_p4 <= s_conv3_dout(311 downto 288);
    trunc_ln674_2_fu_485_p1 <= s_bias_1_dout(16 - 1 downto 0);
    trunc_ln674_fu_481_p1 <= s_scale_1_dout(16 - 1 downto 0);
    trunc_ln692_16_fu_2544_p1 <= select_ln263_16_reg_3641_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_17_fu_2572_p1 <= select_ln263_17_reg_3647_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_18_fu_2600_p1 <= select_ln263_18_reg_3653_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_19_fu_2628_p1 <= select_ln263_19_reg_3659_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_20_fu_2656_p1 <= select_ln263_20_reg_3665_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_21_fu_2684_p1 <= select_ln263_21_reg_3671_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_22_fu_2712_p1 <= select_ln263_22_reg_3677_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_23_fu_2740_p1 <= select_ln263_23_reg_3683_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_24_fu_2768_p1 <= select_ln263_24_reg_3689_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_25_fu_2796_p1 <= select_ln263_25_reg_3695_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_26_fu_2824_p1 <= select_ln263_26_reg_3701_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_27_fu_2852_p1 <= select_ln263_27_reg_3707_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_28_fu_2880_p1 <= select_ln263_28_reg_3713_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_29_fu_2908_p1 <= select_ln263_29_reg_3719_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_30_fu_2936_p1 <= select_ln263_30_reg_3725_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln692_fu_2516_p1 <= select_ln263_reg_3635_pp0_iter6_reg(8 - 1 downto 0);
    trunc_ln69_15_fu_931_p4 <= s_conv3_dout(71 downto 64);
    trunc_ln69_16_fu_941_p4 <= s_conv3_dout(103 downto 96);
    trunc_ln69_17_fu_951_p4 <= s_conv3_dout(135 downto 128);
    trunc_ln69_18_fu_961_p4 <= s_conv3_dout(167 downto 160);
    trunc_ln69_19_fu_971_p4 <= s_conv3_dout(199 downto 192);
    trunc_ln69_20_fu_981_p4 <= s_conv3_dout(231 downto 224);
    trunc_ln69_21_fu_991_p4 <= s_conv3_dout(263 downto 256);
    trunc_ln69_22_fu_1001_p4 <= s_conv3_dout(295 downto 288);
    trunc_ln69_23_fu_1011_p4 <= s_conv3_dout(327 downto 320);
    trunc_ln69_24_fu_1021_p4 <= s_conv3_dout(359 downto 352);
    trunc_ln69_25_fu_1031_p4 <= s_conv3_dout(391 downto 384);
    trunc_ln69_26_fu_1041_p4 <= s_conv3_dout(423 downto 416);
    trunc_ln69_27_fu_1051_p4 <= s_conv3_dout(455 downto 448);
    trunc_ln69_28_fu_1061_p4 <= s_conv3_dout(487 downto 480);
    trunc_ln69_fu_917_p1 <= s_conv3_dout(8 - 1 downto 0);
    trunc_ln69_s_fu_921_p4 <= s_conv3_dout(39 downto 32);
    xor_ln69_16_fu_2547_p2 <= (trunc_ln692_16_fu_2544_p1 xor ap_const_lv8_80);
    xor_ln69_17_fu_2575_p2 <= (trunc_ln692_17_fu_2572_p1 xor ap_const_lv8_80);
    xor_ln69_18_fu_2603_p2 <= (trunc_ln692_18_fu_2600_p1 xor ap_const_lv8_80);
    xor_ln69_19_fu_2631_p2 <= (trunc_ln692_19_fu_2628_p1 xor ap_const_lv8_80);
    xor_ln69_20_fu_2659_p2 <= (trunc_ln692_20_fu_2656_p1 xor ap_const_lv8_80);
    xor_ln69_21_fu_2687_p2 <= (trunc_ln692_21_fu_2684_p1 xor ap_const_lv8_80);
    xor_ln69_22_fu_2715_p2 <= (trunc_ln692_22_fu_2712_p1 xor ap_const_lv8_80);
    xor_ln69_23_fu_2743_p2 <= (trunc_ln692_23_fu_2740_p1 xor ap_const_lv8_80);
    xor_ln69_24_fu_2771_p2 <= (trunc_ln692_24_fu_2768_p1 xor ap_const_lv8_80);
    xor_ln69_25_fu_2799_p2 <= (trunc_ln692_25_fu_2796_p1 xor ap_const_lv8_80);
    xor_ln69_26_fu_2827_p2 <= (trunc_ln692_26_fu_2824_p1 xor ap_const_lv8_80);
    xor_ln69_27_fu_2855_p2 <= (trunc_ln692_27_fu_2852_p1 xor ap_const_lv8_80);
    xor_ln69_28_fu_2883_p2 <= (trunc_ln692_28_fu_2880_p1 xor ap_const_lv8_80);
    xor_ln69_29_fu_2911_p2 <= (trunc_ln692_29_fu_2908_p1 xor ap_const_lv8_80);
    xor_ln69_30_fu_2939_p2 <= (trunc_ln692_30_fu_2936_p1 xor ap_const_lv8_80);
    xor_ln69_fu_2519_p2 <= (trunc_ln692_fu_2516_p1 xor ap_const_lv8_80);
    zext_ln299_16_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_16_fu_1463_p3),24));
    zext_ln299_17_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_17_fu_1506_p3),24));
    zext_ln299_18_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_18_fu_1549_p3),24));
    zext_ln299_19_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_19_fu_1592_p3),24));
    zext_ln299_20_fu_1643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_20_fu_1635_p3),24));
    zext_ln299_21_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_21_fu_1678_p3),24));
    zext_ln299_22_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_22_fu_1721_p3),24));
    zext_ln299_23_fu_1772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_23_fu_1764_p3),24));
    zext_ln299_24_fu_1815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_24_fu_1807_p3),24));
    zext_ln299_25_fu_1858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_25_fu_1850_p3),24));
    zext_ln299_26_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_26_fu_1893_p3),24));
    zext_ln299_27_fu_1944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_27_fu_1936_p3),24));
    zext_ln299_28_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_28_fu_1979_p3),24));
    zext_ln299_29_fu_2030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_29_fu_2022_p3),24));
    zext_ln299_30_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_30_fu_2065_p3),24));
    zext_ln299_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln298_fu_1420_p3),24));
end behav;
