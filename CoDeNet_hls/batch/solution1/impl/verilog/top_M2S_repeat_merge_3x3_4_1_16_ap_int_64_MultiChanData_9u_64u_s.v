// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        k3s_din,
        k3s_full_n,
        k3s_write,
        k3_buffer_V_0_address0,
        k3_buffer_V_0_ce0,
        k3_buffer_V_0_q0,
        k3_buffer_V_0_address1,
        k3_buffer_V_0_ce1,
        k3_buffer_V_0_q1,
        k3_buffer_V_1_address0,
        k3_buffer_V_1_ce0,
        k3_buffer_V_1_q0,
        k3_buffer_V_1_address1,
        k3_buffer_V_1_ce1,
        k3_buffer_V_1_q1,
        k3_buffer_V_2_address0,
        k3_buffer_V_2_ce0,
        k3_buffer_V_2_q0,
        k3_buffer_V_2_address1,
        k3_buffer_V_2_ce1,
        k3_buffer_V_2_q1,
        k3_buffer_V_3_address0,
        k3_buffer_V_3_ce0,
        k3_buffer_V_3_q0,
        k3_buffer_V_3_address1,
        k3_buffer_V_3_ce1,
        k3_buffer_V_3_q1,
        k3_buffer_V_4_address0,
        k3_buffer_V_4_ce0,
        k3_buffer_V_4_q0,
        k3_buffer_V_4_address1,
        k3_buffer_V_4_ce1,
        k3_buffer_V_4_q1,
        k3_buffer_V_5_address0,
        k3_buffer_V_5_ce0,
        k3_buffer_V_5_q0,
        k3_buffer_V_5_address1,
        k3_buffer_V_5_ce1,
        k3_buffer_V_5_q1,
        k3_buffer_V_6_address0,
        k3_buffer_V_6_ce0,
        k3_buffer_V_6_q0,
        k3_buffer_V_6_address1,
        k3_buffer_V_6_ce1,
        k3_buffer_V_6_q1,
        k3_buffer_V_7_address0,
        k3_buffer_V_7_ce0,
        k3_buffer_V_7_q0,
        k3_buffer_V_7_address1,
        k3_buffer_V_7_ce1,
        k3_buffer_V_7_q1,
        k3_buffer_V_8_address0,
        k3_buffer_V_8_ce0,
        k3_buffer_V_8_q0,
        k3_buffer_V_8_address1,
        k3_buffer_V_8_ce1,
        k3_buffer_V_8_q1,
        mul_ln93_1_loc_dout,
        mul_ln93_1_loc_empty_n,
        mul_ln93_1_loc_read,
        ret_V_cast_loc_dout,
        ret_V_cast_loc_empty_n,
        ret_V_cast_loc_read,
        skip3_dout,
        skip3_empty_n,
        skip3_read
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_pp0_stage0 = 12'd64;
parameter    ap_ST_fsm_pp0_stage1 = 12'd128;
parameter    ap_ST_fsm_pp0_stage2 = 12'd256;
parameter    ap_ST_fsm_pp0_stage3 = 12'd512;
parameter    ap_ST_fsm_pp0_stage4 = 12'd1024;
parameter    ap_ST_fsm_state30 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [575:0] k3s_din;
input   k3s_full_n;
output   k3s_write;
output  [5:0] k3_buffer_V_0_address0;
output   k3_buffer_V_0_ce0;
input  [63:0] k3_buffer_V_0_q0;
output  [5:0] k3_buffer_V_0_address1;
output   k3_buffer_V_0_ce1;
input  [63:0] k3_buffer_V_0_q1;
output  [5:0] k3_buffer_V_1_address0;
output   k3_buffer_V_1_ce0;
input  [63:0] k3_buffer_V_1_q0;
output  [5:0] k3_buffer_V_1_address1;
output   k3_buffer_V_1_ce1;
input  [63:0] k3_buffer_V_1_q1;
output  [5:0] k3_buffer_V_2_address0;
output   k3_buffer_V_2_ce0;
input  [63:0] k3_buffer_V_2_q0;
output  [5:0] k3_buffer_V_2_address1;
output   k3_buffer_V_2_ce1;
input  [63:0] k3_buffer_V_2_q1;
output  [5:0] k3_buffer_V_3_address0;
output   k3_buffer_V_3_ce0;
input  [63:0] k3_buffer_V_3_q0;
output  [5:0] k3_buffer_V_3_address1;
output   k3_buffer_V_3_ce1;
input  [63:0] k3_buffer_V_3_q1;
output  [5:0] k3_buffer_V_4_address0;
output   k3_buffer_V_4_ce0;
input  [63:0] k3_buffer_V_4_q0;
output  [5:0] k3_buffer_V_4_address1;
output   k3_buffer_V_4_ce1;
input  [63:0] k3_buffer_V_4_q1;
output  [5:0] k3_buffer_V_5_address0;
output   k3_buffer_V_5_ce0;
input  [63:0] k3_buffer_V_5_q0;
output  [5:0] k3_buffer_V_5_address1;
output   k3_buffer_V_5_ce1;
input  [63:0] k3_buffer_V_5_q1;
output  [5:0] k3_buffer_V_6_address0;
output   k3_buffer_V_6_ce0;
input  [63:0] k3_buffer_V_6_q0;
output  [5:0] k3_buffer_V_6_address1;
output   k3_buffer_V_6_ce1;
input  [63:0] k3_buffer_V_6_q1;
output  [5:0] k3_buffer_V_7_address0;
output   k3_buffer_V_7_ce0;
input  [63:0] k3_buffer_V_7_q0;
output  [5:0] k3_buffer_V_7_address1;
output   k3_buffer_V_7_ce1;
input  [63:0] k3_buffer_V_7_q1;
output  [5:0] k3_buffer_V_8_address0;
output   k3_buffer_V_8_ce0;
input  [63:0] k3_buffer_V_8_q0;
output  [5:0] k3_buffer_V_8_address1;
output   k3_buffer_V_8_ce1;
input  [63:0] k3_buffer_V_8_q1;
input  [31:0] mul_ln93_1_loc_dout;
input   mul_ln93_1_loc_empty_n;
output   mul_ln93_1_loc_read;
input  [11:0] ret_V_cast_loc_dout;
input   ret_V_cast_loc_empty_n;
output   ret_V_cast_loc_read;
input  [0:0] skip3_dout;
input   skip3_empty_n;
output   skip3_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg k3s_write;
reg[5:0] k3_buffer_V_0_address0;
reg k3_buffer_V_0_ce0;
reg[5:0] k3_buffer_V_0_address1;
reg k3_buffer_V_0_ce1;
reg[5:0] k3_buffer_V_1_address0;
reg k3_buffer_V_1_ce0;
reg[5:0] k3_buffer_V_1_address1;
reg k3_buffer_V_1_ce1;
reg[5:0] k3_buffer_V_2_address0;
reg k3_buffer_V_2_ce0;
reg[5:0] k3_buffer_V_2_address1;
reg k3_buffer_V_2_ce1;
reg[5:0] k3_buffer_V_3_address0;
reg k3_buffer_V_3_ce0;
reg[5:0] k3_buffer_V_3_address1;
reg k3_buffer_V_3_ce1;
reg[5:0] k3_buffer_V_4_address0;
reg k3_buffer_V_4_ce0;
reg[5:0] k3_buffer_V_4_address1;
reg k3_buffer_V_4_ce1;
reg[5:0] k3_buffer_V_5_address0;
reg k3_buffer_V_5_ce0;
reg[5:0] k3_buffer_V_5_address1;
reg k3_buffer_V_5_ce1;
reg[5:0] k3_buffer_V_6_address0;
reg k3_buffer_V_6_ce0;
reg[5:0] k3_buffer_V_6_address1;
reg k3_buffer_V_6_ce1;
reg[5:0] k3_buffer_V_7_address0;
reg k3_buffer_V_7_ce0;
reg[5:0] k3_buffer_V_7_address1;
reg k3_buffer_V_7_ce1;
reg[5:0] k3_buffer_V_8_address0;
reg k3_buffer_V_8_ce0;
reg[5:0] k3_buffer_V_8_address1;
reg k3_buffer_V_8_ce1;
reg mul_ln93_1_loc_read;
reg ret_V_cast_loc_read;
reg skip3_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    k3s_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage2;
reg   [0:0] skip3_4_reg_1443;
reg    mul_ln93_1_loc_blk_n;
reg    ret_V_cast_loc_blk_n;
reg    skip3_blk_n;
reg   [43:0] indvar_flatten_reg_860;
reg   [11:0] i_reg_871;
reg   [31:0] batchD_reg_1447;
reg   [11:0] OCIC_reg_1452;
wire    ap_CS_fsm_state2;
wire   [43:0] grp_fu_888_p2;
reg   [43:0] bound_reg_1468;
wire    ap_CS_fsm_state6;
wire   [43:0] add_ln129_fu_894_p2;
reg   [43:0] add_ln129_reg_1473;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state27_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln129_fu_900_p2;
reg   [0:0] icmp_ln129_reg_1478;
wire   [11:0] select_ln129_fu_910_p3;
reg   [11:0] select_ln129_reg_1482;
wire   [15:0] empty_fu_932_p2;
reg   [15:0] empty_reg_1489;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state8_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state23_pp0_stage1_iter3;
wire    ap_block_state28_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] empty_reg_1489_pp0_iter1_reg;
reg   [15:0] empty_reg_1489_pp0_iter2_reg;
wire   [11:0] add_ln130_fu_943_p2;
reg   [11:0] add_ln130_reg_1503;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state11_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state26_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state10_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state25_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire   [15:0] add_ln134_fu_1005_p2;
reg   [15:0] add_ln134_reg_1543;
wire   [15:0] add_ln134_1_fu_1010_p2;
reg   [15:0] add_ln134_1_reg_1548;
wire    ap_block_state9_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state24_pp0_stage2_iter3;
reg    ap_block_state29_pp0_stage2_iter4;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] k3_buffer_V_3_load_3_reg_1653;
reg    ap_enable_reg_pp0_iter3;
reg   [63:0] k3_buffer_V_4_load_3_reg_1658;
reg   [63:0] k3_buffer_V_5_load_3_reg_1663;
reg   [63:0] k3_buffer_V_6_load_3_reg_1668;
reg   [63:0] k3_buffer_V_7_load_3_reg_1673;
reg   [63:0] k3_buffer_V_8_load_3_reg_1678;
reg   [63:0] k3_buffer_V_0_load_3_reg_1683;
reg   [63:0] k3_buffer_V_1_load_3_reg_1688;
reg   [63:0] k3_buffer_V_2_load_3_reg_1693;
reg   [63:0] k3_buffer_V_4_load_4_reg_1698;
reg   [63:0] k3_buffer_V_5_load_4_reg_1703;
reg   [63:0] k3_buffer_V_6_load_4_reg_1708;
reg   [63:0] k3_buffer_V_7_load_4_reg_1713;
reg   [63:0] k3_buffer_V_8_load_4_reg_1718;
reg   [63:0] k3_buffer_V_0_load_4_reg_1723;
reg   [63:0] k3_buffer_V_1_load_4_reg_1728;
reg   [63:0] k3_buffer_V_2_load_4_reg_1733;
reg   [63:0] k3_buffer_V_3_load_4_reg_1738;
reg   [63:0] k3_buffer_V_5_load_5_reg_1833;
reg   [63:0] k3_buffer_V_6_load_5_reg_1838;
reg   [63:0] k3_buffer_V_7_load_5_reg_1843;
reg   [63:0] k3_buffer_V_8_load_5_reg_1848;
reg   [63:0] k3_buffer_V_0_load_5_reg_1853;
reg   [63:0] k3_buffer_V_1_load_5_reg_1858;
reg   [63:0] k3_buffer_V_2_load_5_reg_1863;
reg   [63:0] k3_buffer_V_3_load_5_reg_1868;
reg   [63:0] k3_buffer_V_4_load_5_reg_1873;
reg   [63:0] k3_buffer_V_6_load_6_reg_1878;
reg   [63:0] k3_buffer_V_7_load_6_reg_1883;
reg   [63:0] k3_buffer_V_8_load_6_reg_1888;
reg   [63:0] k3_buffer_V_0_load_6_reg_1893;
reg   [63:0] k3_buffer_V_1_load_6_reg_1898;
reg   [63:0] k3_buffer_V_2_load_6_reg_1903;
reg   [63:0] k3_buffer_V_3_load_6_reg_1908;
reg   [63:0] k3_buffer_V_4_load_6_reg_1913;
reg   [63:0] k3_buffer_V_5_load_6_reg_1918;
reg   [63:0] k3_buffer_V_7_load_7_reg_2058;
reg   [63:0] k3_buffer_V_8_load_7_reg_2063;
reg   [63:0] k3_buffer_V_0_load_7_reg_2068;
reg   [63:0] k3_buffer_V_1_load_7_reg_2073;
reg   [63:0] k3_buffer_V_2_load_7_reg_2078;
reg   [63:0] k3_buffer_V_3_load_7_reg_2083;
reg   [63:0] k3_buffer_V_4_load_7_reg_2088;
reg   [63:0] k3_buffer_V_5_load_7_reg_2093;
reg   [63:0] k3_buffer_V_6_load_7_reg_2098;
reg   [63:0] k3_buffer_V_8_load_8_reg_2103;
reg   [63:0] k3_buffer_V_0_load_8_reg_2108;
reg   [63:0] k3_buffer_V_1_load_8_reg_2113;
reg   [63:0] k3_buffer_V_2_load_8_reg_2118;
reg   [63:0] k3_buffer_V_3_load_8_reg_2123;
reg   [63:0] k3_buffer_V_4_load_8_reg_2128;
reg   [63:0] k3_buffer_V_5_load_8_reg_2133;
reg   [63:0] k3_buffer_V_6_load_8_reg_2138;
reg   [63:0] k3_buffer_V_7_load_8_reg_2143;
reg   [63:0] k3_buffer_V_0_load_reg_2148;
reg   [63:0] k3_buffer_V_1_load_reg_2153;
reg   [63:0] k3_buffer_V_2_load_reg_2158;
reg   [63:0] k3_buffer_V_3_load_reg_2163;
reg   [63:0] k3_buffer_V_4_load_reg_2168;
reg   [63:0] k3_buffer_V_5_load_reg_2173;
reg   [63:0] k3_buffer_V_6_load_reg_2178;
reg   [63:0] k3_buffer_V_7_load_reg_2183;
reg   [63:0] k3_buffer_V_8_load_reg_2188;
wire   [15:0] grp_fu_938_p2;
reg   [15:0] urem_ln134_reg_2283;
reg   [63:0] k3_buffer_V_1_load_1_reg_2288;
reg   [63:0] k3_buffer_V_2_load_1_reg_2293;
reg   [63:0] k3_buffer_V_3_load_1_reg_2298;
reg   [63:0] k3_buffer_V_4_load_1_reg_2303;
reg   [63:0] k3_buffer_V_5_load_1_reg_2308;
reg   [63:0] k3_buffer_V_6_load_1_reg_2313;
reg   [63:0] k3_buffer_V_7_load_1_reg_2318;
reg   [63:0] k3_buffer_V_8_load_1_reg_2323;
reg   [63:0] k3_buffer_V_0_load_1_reg_2328;
reg   [63:0] k3_buffer_V_2_load_2_reg_2333;
reg   [63:0] k3_buffer_V_3_load_2_reg_2338;
reg   [63:0] k3_buffer_V_4_load_2_reg_2343;
reg   [63:0] k3_buffer_V_5_load_2_reg_2348;
reg   [63:0] k3_buffer_V_6_load_2_reg_2353;
reg   [63:0] k3_buffer_V_7_load_2_reg_2358;
reg   [63:0] k3_buffer_V_8_load_2_reg_2363;
reg   [63:0] k3_buffer_V_0_load_2_reg_2368;
reg   [63:0] k3_buffer_V_1_load_2_reg_2373;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [43:0] ap_phi_mux_indvar_flatten_phi_fu_864_p4;
wire    ap_block_pp0_stage0;
reg   [11:0] ap_phi_mux_i_phi_fu_875_p4;
wire   [63:0] zext_ln134_4_fu_1024_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln134_5_fu_1046_p1;
wire   [63:0] zext_ln134_6_fu_1074_p1;
wire   [63:0] zext_ln134_7_fu_1096_p1;
wire   [63:0] zext_ln134_8_fu_1118_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln134_9_fu_1140_p1;
wire   [63:0] zext_ln134_1_fu_1162_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln134_2_fu_1184_p1;
wire   [63:0] zext_ln134_3_fu_1206_p1;
reg    ap_block_state1;
reg    ap_block_pp0_stage2_01001;
wire   [31:0] grp_fu_888_p0;
wire   [11:0] grp_fu_888_p1;
wire   [0:0] icmp_ln130_fu_905_p2;
wire   [14:0] p_shl_i_i_fu_921_p3;
wire   [15:0] p_shl_cast3_i_i_fu_928_p1;
wire   [15:0] zext_ln130_fu_918_p1;
wire   [4:0] grp_fu_938_p1;
wire   [15:0] add_ln134_2_fu_948_p2;
wire   [15:0] add_ln134_3_fu_957_p2;
wire   [15:0] add_ln134_4_fu_966_p2;
wire   [15:0] add_ln134_5_fu_975_p2;
wire   [15:0] add_ln134_6_fu_984_p2;
wire   [15:0] add_ln134_7_fu_993_p2;
wire   [32:0] grp_fu_1380_p2;
wire   [12:0] tmp_92_fu_1015_p4;
wire   [32:0] grp_fu_1387_p2;
wire   [12:0] tmp_93_fu_1037_p4;
wire   [32:0] grp_fu_1394_p2;
wire   [12:0] tmp_94_fu_1065_p4;
wire   [32:0] grp_fu_1401_p2;
wire   [12:0] tmp_95_fu_1087_p4;
wire   [32:0] grp_fu_1408_p2;
wire   [12:0] tmp_96_fu_1109_p4;
wire   [32:0] grp_fu_1415_p2;
wire   [12:0] tmp_97_fu_1131_p4;
wire   [32:0] grp_fu_1422_p2;
wire   [12:0] tmp_89_fu_1153_p4;
wire   [32:0] grp_fu_1429_p2;
wire   [12:0] tmp_90_fu_1175_p4;
wire   [32:0] grp_fu_1436_p2;
wire   [12:0] tmp_91_fu_1197_p4;
wire   [63:0] zext_ln134_fu_1219_p1;
wire   [63:0] tmp_53_fu_1342_p11;
wire   [63:0] tmp_52_fu_1327_p11;
wire   [63:0] tmp_51_fu_1312_p11;
wire   [63:0] tmp_50_fu_1297_p11;
wire   [63:0] tmp_49_fu_1282_p11;
wire   [63:0] tmp_48_fu_1267_p11;
wire   [63:0] tmp_47_fu_1252_p11;
wire   [63:0] tmp_s_fu_1237_p11;
wire   [63:0] tmp_fu_1222_p11;
wire   [15:0] grp_fu_1380_p0;
wire   [17:0] grp_fu_1380_p1;
wire   [15:0] grp_fu_1387_p0;
wire   [17:0] grp_fu_1387_p1;
wire   [15:0] grp_fu_1394_p0;
wire   [17:0] grp_fu_1394_p1;
wire   [15:0] grp_fu_1401_p0;
wire   [17:0] grp_fu_1401_p1;
wire   [15:0] grp_fu_1408_p0;
wire   [17:0] grp_fu_1408_p1;
wire   [15:0] grp_fu_1415_p0;
wire   [17:0] grp_fu_1415_p1;
wire   [15:0] grp_fu_1422_p0;
wire   [17:0] grp_fu_1422_p1;
wire   [15:0] grp_fu_1429_p0;
wire   [17:0] grp_fu_1429_p1;
wire   [15:0] grp_fu_1436_p0;
wire   [17:0] grp_fu_1436_p1;
reg    grp_fu_938_ce;
reg    grp_fu_1380_ce;
reg    grp_fu_1387_ce;
reg    grp_fu_1394_ce;
reg    grp_fu_1401_ce;
reg    grp_fu_1408_ce;
reg    grp_fu_1415_ce;
reg    grp_fu_1422_ce;
reg    grp_fu_1429_ce;
reg    grp_fu_1436_ce;
wire    ap_CS_fsm_state30;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [32:0] grp_fu_1380_p00;
wire   [32:0] grp_fu_1387_p00;
wire   [32:0] grp_fu_1394_p00;
wire   [32:0] grp_fu_1401_p00;
wire   [32:0] grp_fu_1408_p00;
wire   [32:0] grp_fu_1415_p00;
wire   [32:0] grp_fu_1422_p00;
wire   [32:0] grp_fu_1429_p00;
wire   [32:0] grp_fu_1436_p00;
wire   [43:0] grp_fu_888_p00;
wire   [43:0] grp_fu_888_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

top_mul_32ns_12ns_44_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 44 ))
mul_32ns_12ns_44_5_1_U635(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_888_p0),
    .din1(grp_fu_888_p1),
    .ce(1'b1),
    .dout(grp_fu_888_p2)
);

top_urem_16ns_5ns_16_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
urem_16ns_5ns_16_20_1_U636(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_reg_1489),
    .din1(grp_fu_938_p1),
    .ce(grp_fu_938_ce),
    .dout(grp_fu_938_p2)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U637(
    .din0(k3_buffer_V_0_load_reg_2148),
    .din1(k3_buffer_V_1_load_reg_2153),
    .din2(k3_buffer_V_2_load_reg_2158),
    .din3(k3_buffer_V_3_load_reg_2163),
    .din4(k3_buffer_V_4_load_reg_2168),
    .din5(k3_buffer_V_5_load_reg_2173),
    .din6(k3_buffer_V_6_load_reg_2178),
    .din7(k3_buffer_V_7_load_reg_2183),
    .din8(k3_buffer_V_8_load_reg_2188),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_fu_1222_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U638(
    .din0(k3_buffer_V_1_load_1_reg_2288),
    .din1(k3_buffer_V_2_load_1_reg_2293),
    .din2(k3_buffer_V_3_load_1_reg_2298),
    .din3(k3_buffer_V_4_load_1_reg_2303),
    .din4(k3_buffer_V_5_load_1_reg_2308),
    .din5(k3_buffer_V_6_load_1_reg_2313),
    .din6(k3_buffer_V_7_load_1_reg_2318),
    .din7(k3_buffer_V_8_load_1_reg_2323),
    .din8(k3_buffer_V_0_load_1_reg_2328),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_s_fu_1237_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U639(
    .din0(k3_buffer_V_2_load_2_reg_2333),
    .din1(k3_buffer_V_3_load_2_reg_2338),
    .din2(k3_buffer_V_4_load_2_reg_2343),
    .din3(k3_buffer_V_5_load_2_reg_2348),
    .din4(k3_buffer_V_6_load_2_reg_2353),
    .din5(k3_buffer_V_7_load_2_reg_2358),
    .din6(k3_buffer_V_8_load_2_reg_2363),
    .din7(k3_buffer_V_0_load_2_reg_2368),
    .din8(k3_buffer_V_1_load_2_reg_2373),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_47_fu_1252_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U640(
    .din0(k3_buffer_V_3_load_3_reg_1653),
    .din1(k3_buffer_V_4_load_3_reg_1658),
    .din2(k3_buffer_V_5_load_3_reg_1663),
    .din3(k3_buffer_V_6_load_3_reg_1668),
    .din4(k3_buffer_V_7_load_3_reg_1673),
    .din5(k3_buffer_V_8_load_3_reg_1678),
    .din6(k3_buffer_V_0_load_3_reg_1683),
    .din7(k3_buffer_V_1_load_3_reg_1688),
    .din8(k3_buffer_V_2_load_3_reg_1693),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_48_fu_1267_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U641(
    .din0(k3_buffer_V_4_load_4_reg_1698),
    .din1(k3_buffer_V_5_load_4_reg_1703),
    .din2(k3_buffer_V_6_load_4_reg_1708),
    .din3(k3_buffer_V_7_load_4_reg_1713),
    .din4(k3_buffer_V_8_load_4_reg_1718),
    .din5(k3_buffer_V_0_load_4_reg_1723),
    .din6(k3_buffer_V_1_load_4_reg_1728),
    .din7(k3_buffer_V_2_load_4_reg_1733),
    .din8(k3_buffer_V_3_load_4_reg_1738),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_49_fu_1282_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U642(
    .din0(k3_buffer_V_5_load_5_reg_1833),
    .din1(k3_buffer_V_6_load_5_reg_1838),
    .din2(k3_buffer_V_7_load_5_reg_1843),
    .din3(k3_buffer_V_8_load_5_reg_1848),
    .din4(k3_buffer_V_0_load_5_reg_1853),
    .din5(k3_buffer_V_1_load_5_reg_1858),
    .din6(k3_buffer_V_2_load_5_reg_1863),
    .din7(k3_buffer_V_3_load_5_reg_1868),
    .din8(k3_buffer_V_4_load_5_reg_1873),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_50_fu_1297_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U643(
    .din0(k3_buffer_V_6_load_6_reg_1878),
    .din1(k3_buffer_V_7_load_6_reg_1883),
    .din2(k3_buffer_V_8_load_6_reg_1888),
    .din3(k3_buffer_V_0_load_6_reg_1893),
    .din4(k3_buffer_V_1_load_6_reg_1898),
    .din5(k3_buffer_V_2_load_6_reg_1903),
    .din6(k3_buffer_V_3_load_6_reg_1908),
    .din7(k3_buffer_V_4_load_6_reg_1913),
    .din8(k3_buffer_V_5_load_6_reg_1918),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_51_fu_1312_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U644(
    .din0(k3_buffer_V_7_load_7_reg_2058),
    .din1(k3_buffer_V_8_load_7_reg_2063),
    .din2(k3_buffer_V_0_load_7_reg_2068),
    .din3(k3_buffer_V_1_load_7_reg_2073),
    .din4(k3_buffer_V_2_load_7_reg_2078),
    .din5(k3_buffer_V_3_load_7_reg_2083),
    .din6(k3_buffer_V_4_load_7_reg_2088),
    .din7(k3_buffer_V_5_load_7_reg_2093),
    .din8(k3_buffer_V_6_load_7_reg_2098),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_52_fu_1327_p11)
);

top_mux_964_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mux_964_64_1_1_U645(
    .din0(k3_buffer_V_8_load_8_reg_2103),
    .din1(k3_buffer_V_0_load_8_reg_2108),
    .din2(k3_buffer_V_1_load_8_reg_2113),
    .din3(k3_buffer_V_2_load_8_reg_2118),
    .din4(k3_buffer_V_3_load_8_reg_2123),
    .din5(k3_buffer_V_4_load_8_reg_2128),
    .din6(k3_buffer_V_5_load_8_reg_2133),
    .din7(k3_buffer_V_6_load_8_reg_2138),
    .din8(k3_buffer_V_7_load_8_reg_2143),
    .din9(zext_ln134_fu_1219_p1),
    .dout(tmp_53_fu_1342_p11)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U646(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1380_p0),
    .din1(grp_fu_1380_p1),
    .ce(grp_fu_1380_ce),
    .dout(grp_fu_1380_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U647(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1387_p0),
    .din1(grp_fu_1387_p1),
    .ce(grp_fu_1387_ce),
    .dout(grp_fu_1387_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U648(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1394_p0),
    .din1(grp_fu_1394_p1),
    .ce(grp_fu_1394_ce),
    .dout(grp_fu_1394_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U649(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1401_p0),
    .din1(grp_fu_1401_p1),
    .ce(grp_fu_1401_ce),
    .dout(grp_fu_1401_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U650(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1408_p0),
    .din1(grp_fu_1408_p1),
    .ce(grp_fu_1408_ce),
    .dout(grp_fu_1408_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U651(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1415_p0),
    .din1(grp_fu_1415_p1),
    .ce(grp_fu_1415_ce),
    .dout(grp_fu_1415_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U652(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1422_p0),
    .din1(grp_fu_1422_p1),
    .ce(grp_fu_1422_ce),
    .dout(grp_fu_1422_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U653(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1429_p0),
    .din1(grp_fu_1429_p1),
    .ce(grp_fu_1429_ce),
    .dout(grp_fu_1429_p2)
);

top_mul_mul_16ns_18ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 33 ))
mul_mul_16ns_18ns_33_4_1_U654(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1436_p0),
    .din1(grp_fu_1436_p1),
    .ce(grp_fu_1436_ce),
    .dout(grp_fu_1436_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln129_reg_1478 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_871 <= add_ln130_reg_1503;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_871 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln129_reg_1478 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_860 <= add_ln129_reg_1473;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_860 <= 44'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        OCIC_reg_1452 <= ret_V_cast_loc_dout;
        batchD_reg_1447 <= mul_ln93_1_loc_dout;
        skip3_4_reg_1443 <= skip3_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_reg_1473 <= add_ln129_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1478 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln130_reg_1503 <= add_ln130_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln134_1_reg_1548 <= add_ln134_1_fu_1010_p2;
        add_ln134_reg_1543 <= add_ln134_fu_1005_p2;
        urem_ln134_reg_2283 <= grp_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_1468 <= grp_fu_888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1478 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_reg_1489 <= empty_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_reg_1489_pp0_iter1_reg <= empty_reg_1489;
        empty_reg_1489_pp0_iter2_reg <= empty_reg_1489_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln129_reg_1478 <= icmp_ln129_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_0_load_1_reg_2328 <= k3_buffer_V_0_q1;
        k3_buffer_V_0_load_2_reg_2368 <= k3_buffer_V_0_q0;
        k3_buffer_V_1_load_1_reg_2288 <= k3_buffer_V_1_q1;
        k3_buffer_V_1_load_2_reg_2373 <= k3_buffer_V_1_q0;
        k3_buffer_V_2_load_1_reg_2293 <= k3_buffer_V_2_q1;
        k3_buffer_V_2_load_2_reg_2333 <= k3_buffer_V_2_q0;
        k3_buffer_V_3_load_1_reg_2298 <= k3_buffer_V_3_q1;
        k3_buffer_V_3_load_2_reg_2338 <= k3_buffer_V_3_q0;
        k3_buffer_V_4_load_1_reg_2303 <= k3_buffer_V_4_q1;
        k3_buffer_V_4_load_2_reg_2343 <= k3_buffer_V_4_q0;
        k3_buffer_V_5_load_1_reg_2308 <= k3_buffer_V_5_q1;
        k3_buffer_V_5_load_2_reg_2348 <= k3_buffer_V_5_q0;
        k3_buffer_V_6_load_1_reg_2313 <= k3_buffer_V_6_q1;
        k3_buffer_V_6_load_2_reg_2353 <= k3_buffer_V_6_q0;
        k3_buffer_V_7_load_1_reg_2318 <= k3_buffer_V_7_q1;
        k3_buffer_V_7_load_2_reg_2358 <= k3_buffer_V_7_q0;
        k3_buffer_V_8_load_1_reg_2323 <= k3_buffer_V_8_q1;
        k3_buffer_V_8_load_2_reg_2363 <= k3_buffer_V_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        k3_buffer_V_0_load_3_reg_1683 <= k3_buffer_V_0_q1;
        k3_buffer_V_0_load_4_reg_1723 <= k3_buffer_V_0_q0;
        k3_buffer_V_1_load_3_reg_1688 <= k3_buffer_V_1_q1;
        k3_buffer_V_1_load_4_reg_1728 <= k3_buffer_V_1_q0;
        k3_buffer_V_2_load_3_reg_1693 <= k3_buffer_V_2_q1;
        k3_buffer_V_2_load_4_reg_1733 <= k3_buffer_V_2_q0;
        k3_buffer_V_3_load_3_reg_1653 <= k3_buffer_V_3_q1;
        k3_buffer_V_3_load_4_reg_1738 <= k3_buffer_V_3_q0;
        k3_buffer_V_4_load_3_reg_1658 <= k3_buffer_V_4_q1;
        k3_buffer_V_4_load_4_reg_1698 <= k3_buffer_V_4_q0;
        k3_buffer_V_5_load_3_reg_1663 <= k3_buffer_V_5_q1;
        k3_buffer_V_5_load_4_reg_1703 <= k3_buffer_V_5_q0;
        k3_buffer_V_6_load_3_reg_1668 <= k3_buffer_V_6_q1;
        k3_buffer_V_6_load_4_reg_1708 <= k3_buffer_V_6_q0;
        k3_buffer_V_7_load_3_reg_1673 <= k3_buffer_V_7_q1;
        k3_buffer_V_7_load_4_reg_1713 <= k3_buffer_V_7_q0;
        k3_buffer_V_8_load_3_reg_1678 <= k3_buffer_V_8_q1;
        k3_buffer_V_8_load_4_reg_1718 <= k3_buffer_V_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        k3_buffer_V_0_load_5_reg_1853 <= k3_buffer_V_0_q1;
        k3_buffer_V_0_load_6_reg_1893 <= k3_buffer_V_0_q0;
        k3_buffer_V_1_load_5_reg_1858 <= k3_buffer_V_1_q1;
        k3_buffer_V_1_load_6_reg_1898 <= k3_buffer_V_1_q0;
        k3_buffer_V_2_load_5_reg_1863 <= k3_buffer_V_2_q1;
        k3_buffer_V_2_load_6_reg_1903 <= k3_buffer_V_2_q0;
        k3_buffer_V_3_load_5_reg_1868 <= k3_buffer_V_3_q1;
        k3_buffer_V_3_load_6_reg_1908 <= k3_buffer_V_3_q0;
        k3_buffer_V_4_load_5_reg_1873 <= k3_buffer_V_4_q1;
        k3_buffer_V_4_load_6_reg_1913 <= k3_buffer_V_4_q0;
        k3_buffer_V_5_load_5_reg_1833 <= k3_buffer_V_5_q1;
        k3_buffer_V_5_load_6_reg_1918 <= k3_buffer_V_5_q0;
        k3_buffer_V_6_load_5_reg_1838 <= k3_buffer_V_6_q1;
        k3_buffer_V_6_load_6_reg_1878 <= k3_buffer_V_6_q0;
        k3_buffer_V_7_load_5_reg_1843 <= k3_buffer_V_7_q1;
        k3_buffer_V_7_load_6_reg_1883 <= k3_buffer_V_7_q0;
        k3_buffer_V_8_load_5_reg_1848 <= k3_buffer_V_8_q1;
        k3_buffer_V_8_load_6_reg_1888 <= k3_buffer_V_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        k3_buffer_V_0_load_7_reg_2068 <= k3_buffer_V_0_q1;
        k3_buffer_V_0_load_8_reg_2108 <= k3_buffer_V_0_q0;
        k3_buffer_V_1_load_7_reg_2073 <= k3_buffer_V_1_q1;
        k3_buffer_V_1_load_8_reg_2113 <= k3_buffer_V_1_q0;
        k3_buffer_V_2_load_7_reg_2078 <= k3_buffer_V_2_q1;
        k3_buffer_V_2_load_8_reg_2118 <= k3_buffer_V_2_q0;
        k3_buffer_V_3_load_7_reg_2083 <= k3_buffer_V_3_q1;
        k3_buffer_V_3_load_8_reg_2123 <= k3_buffer_V_3_q0;
        k3_buffer_V_4_load_7_reg_2088 <= k3_buffer_V_4_q1;
        k3_buffer_V_4_load_8_reg_2128 <= k3_buffer_V_4_q0;
        k3_buffer_V_5_load_7_reg_2093 <= k3_buffer_V_5_q1;
        k3_buffer_V_5_load_8_reg_2133 <= k3_buffer_V_5_q0;
        k3_buffer_V_6_load_7_reg_2098 <= k3_buffer_V_6_q1;
        k3_buffer_V_6_load_8_reg_2138 <= k3_buffer_V_6_q0;
        k3_buffer_V_7_load_7_reg_2058 <= k3_buffer_V_7_q1;
        k3_buffer_V_7_load_8_reg_2143 <= k3_buffer_V_7_q0;
        k3_buffer_V_8_load_7_reg_2063 <= k3_buffer_V_8_q1;
        k3_buffer_V_8_load_8_reg_2103 <= k3_buffer_V_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_0_load_reg_2148 <= k3_buffer_V_0_q0;
        k3_buffer_V_1_load_reg_2153 <= k3_buffer_V_1_q0;
        k3_buffer_V_2_load_reg_2158 <= k3_buffer_V_2_q0;
        k3_buffer_V_3_load_reg_2163 <= k3_buffer_V_3_q0;
        k3_buffer_V_4_load_reg_2168 <= k3_buffer_V_4_q0;
        k3_buffer_V_5_load_reg_2173 <= k3_buffer_V_5_q0;
        k3_buffer_V_6_load_reg_2178 <= k3_buffer_V_6_q0;
        k3_buffer_V_7_load_reg_2183 <= k3_buffer_V_7_q0;
        k3_buffer_V_8_load_reg_2188 <= k3_buffer_V_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln129_reg_1482 <= select_ln129_fu_910_p3;
    end
end

always @ (*) begin
    if ((icmp_ln129_fu_900_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln129_reg_1478 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_875_p4 = add_ln130_reg_1503;
    end else begin
        ap_phi_mux_i_phi_fu_875_p4 = i_reg_871;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln129_reg_1478 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_864_p4 = add_ln129_reg_1473;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_864_p4 = indvar_flatten_reg_860;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1380_ce = 1'b1;
    end else begin
        grp_fu_1380_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1387_ce = 1'b1;
    end else begin
        grp_fu_1387_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1394_ce = 1'b1;
    end else begin
        grp_fu_1394_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1401_ce = 1'b1;
    end else begin
        grp_fu_1401_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1408_ce = 1'b1;
    end else begin
        grp_fu_1408_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1415_ce = 1'b1;
    end else begin
        grp_fu_1415_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1422_ce = 1'b1;
    end else begin
        grp_fu_1422_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1429_ce = 1'b1;
    end else begin
        grp_fu_1429_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1436_ce = 1'b1;
    end else begin
        grp_fu_1436_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_938_ce = 1'b1;
    end else begin
        grp_fu_938_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_0_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_0_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_0_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_0_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_0_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_0_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_0_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_0_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_0_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_0_ce0 = 1'b1;
    end else begin
        k3_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_0_ce1 = 1'b1;
    end else begin
        k3_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_1_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_1_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_1_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_1_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_1_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_1_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_1_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_1_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_1_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_1_ce0 = 1'b1;
    end else begin
        k3_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_1_ce1 = 1'b1;
    end else begin
        k3_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_2_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_2_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_2_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_2_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_2_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_2_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_2_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_2_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_2_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_2_ce0 = 1'b1;
    end else begin
        k3_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_2_ce1 = 1'b1;
    end else begin
        k3_buffer_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_3_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_3_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_3_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_3_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_3_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_3_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_3_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_3_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_3_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_3_ce0 = 1'b1;
    end else begin
        k3_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_3_ce1 = 1'b1;
    end else begin
        k3_buffer_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_4_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_4_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_4_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_4_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_4_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_4_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_4_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_4_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_4_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_4_ce0 = 1'b1;
    end else begin
        k3_buffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_4_ce1 = 1'b1;
    end else begin
        k3_buffer_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_5_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_5_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_5_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_5_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_5_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_5_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_5_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_5_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_5_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_5_ce0 = 1'b1;
    end else begin
        k3_buffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_5_ce1 = 1'b1;
    end else begin
        k3_buffer_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_6_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_6_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_6_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_6_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_6_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_6_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_6_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_6_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_6_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_6_ce0 = 1'b1;
    end else begin
        k3_buffer_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_6_ce1 = 1'b1;
    end else begin
        k3_buffer_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_7_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_7_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_7_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_7_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_7_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_7_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_7_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_7_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_7_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_7_ce0 = 1'b1;
    end else begin
        k3_buffer_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_7_ce1 = 1'b1;
    end else begin
        k3_buffer_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_8_address0 = zext_ln134_3_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        k3_buffer_V_8_address0 = zext_ln134_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_8_address0 = zext_ln134_9_fu_1140_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_8_address0 = zext_ln134_7_fu_1096_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_8_address0 = zext_ln134_5_fu_1046_p1;
    end else begin
        k3_buffer_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3_buffer_V_8_address1 = zext_ln134_2_fu_1184_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        k3_buffer_V_8_address1 = zext_ln134_8_fu_1118_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        k3_buffer_V_8_address1 = zext_ln134_6_fu_1074_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        k3_buffer_V_8_address1 = zext_ln134_4_fu_1024_p1;
    end else begin
        k3_buffer_V_8_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_8_ce0 = 1'b1;
    end else begin
        k3_buffer_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        k3_buffer_V_8_ce1 = 1'b1;
    end else begin
        k3_buffer_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3s_blk_n = k3s_full_n;
    end else begin
        k3s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (skip3_4_reg_1443 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        k3s_write = 1'b1;
    end else begin
        k3s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln93_1_loc_blk_n = mul_ln93_1_loc_empty_n;
    end else begin
        mul_ln93_1_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (skip3_empty_n == 1'b0) | (ret_V_cast_loc_empty_n == 1'b0) | (mul_ln93_1_loc_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln93_1_loc_read = 1'b1;
    end else begin
        mul_ln93_1_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ret_V_cast_loc_blk_n = ret_V_cast_loc_empty_n;
    end else begin
        ret_V_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (skip3_empty_n == 1'b0) | (ret_V_cast_loc_empty_n == 1'b0) | (mul_ln93_1_loc_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ret_V_cast_loc_read = 1'b1;
    end else begin
        ret_V_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        skip3_blk_n = skip3_empty_n;
    end else begin
        skip3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (skip3_empty_n == 1'b0) | (ret_V_cast_loc_empty_n == 1'b0) | (mul_ln93_1_loc_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        skip3_read = 1'b1;
    end else begin
        skip3_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0) | (skip3_empty_n == 1'b0) | (ret_V_cast_loc_empty_n == 1'b0) | (mul_ln93_1_loc_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln129_fu_900_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln129_fu_900_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln129_fu_894_p2 = (ap_phi_mux_indvar_flatten_phi_fu_864_p4 + 44'd1);

assign add_ln130_fu_943_p2 = (select_ln129_reg_1482 + 12'd1);

assign add_ln134_1_fu_1010_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd2);

assign add_ln134_2_fu_948_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd3);

assign add_ln134_3_fu_957_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd4);

assign add_ln134_4_fu_966_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd5);

assign add_ln134_5_fu_975_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd6);

assign add_ln134_6_fu_984_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd7);

assign add_ln134_7_fu_993_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd8);

assign add_ln134_fu_1005_p2 = (empty_reg_1489_pp0_iter2_reg + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((k3s_full_n == 1'b0) & (skip3_4_reg_1443 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((k3s_full_n == 1'b0) & (skip3_4_reg_1443 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((k3s_full_n == 1'b0) & (skip3_4_reg_1443 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0) | (skip3_empty_n == 1'b0) | (ret_V_cast_loc_empty_n == 1'b0) | (mul_ln93_1_loc_empty_n == 1'b0));
end

assign ap_block_state10_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage2_iter4 = ((k3s_full_n == 1'b0) & (skip3_4_reg_1443 == 1'd0));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign empty_fu_932_p2 = (p_shl_cast3_i_i_fu_928_p1 + zext_ln130_fu_918_p1);

assign grp_fu_1380_p0 = grp_fu_1380_p00;

assign grp_fu_1380_p00 = add_ln134_2_fu_948_p2;

assign grp_fu_1380_p1 = 33'd116509;

assign grp_fu_1387_p0 = grp_fu_1387_p00;

assign grp_fu_1387_p00 = add_ln134_3_fu_957_p2;

assign grp_fu_1387_p1 = 33'd116509;

assign grp_fu_1394_p0 = grp_fu_1394_p00;

assign grp_fu_1394_p00 = add_ln134_4_fu_966_p2;

assign grp_fu_1394_p1 = 33'd116509;

assign grp_fu_1401_p0 = grp_fu_1401_p00;

assign grp_fu_1401_p00 = add_ln134_5_fu_975_p2;

assign grp_fu_1401_p1 = 33'd116509;

assign grp_fu_1408_p0 = grp_fu_1408_p00;

assign grp_fu_1408_p00 = add_ln134_6_fu_984_p2;

assign grp_fu_1408_p1 = 33'd116509;

assign grp_fu_1415_p0 = grp_fu_1415_p00;

assign grp_fu_1415_p00 = add_ln134_7_fu_993_p2;

assign grp_fu_1415_p1 = 33'd116509;

assign grp_fu_1422_p0 = grp_fu_1422_p00;

assign grp_fu_1422_p00 = empty_reg_1489_pp0_iter2_reg;

assign grp_fu_1422_p1 = 33'd116509;

assign grp_fu_1429_p0 = grp_fu_1429_p00;

assign grp_fu_1429_p00 = add_ln134_reg_1543;

assign grp_fu_1429_p1 = 33'd116509;

assign grp_fu_1436_p0 = grp_fu_1436_p00;

assign grp_fu_1436_p00 = add_ln134_1_reg_1548;

assign grp_fu_1436_p1 = 33'd116509;

assign grp_fu_888_p0 = grp_fu_888_p00;

assign grp_fu_888_p00 = batchD_reg_1447;

assign grp_fu_888_p1 = grp_fu_888_p10;

assign grp_fu_888_p10 = OCIC_reg_1452;

assign grp_fu_938_p1 = 16'd9;

assign icmp_ln129_fu_900_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_864_p4 == bound_reg_1468) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_905_p2 = ((ap_phi_mux_i_phi_fu_875_p4 == OCIC_reg_1452) ? 1'b1 : 1'b0);

assign k3s_din = {{{{{{{{{tmp_53_fu_1342_p11}, {tmp_52_fu_1327_p11}}, {tmp_51_fu_1312_p11}}, {tmp_50_fu_1297_p11}}, {tmp_49_fu_1282_p11}}, {tmp_48_fu_1267_p11}}, {tmp_47_fu_1252_p11}}, {tmp_s_fu_1237_p11}}, {tmp_fu_1222_p11}};

assign p_shl_cast3_i_i_fu_928_p1 = p_shl_i_i_fu_921_p3;

assign p_shl_i_i_fu_921_p3 = {{select_ln129_reg_1482}, {3'd0}};

assign select_ln129_fu_910_p3 = ((icmp_ln130_fu_905_p2[0:0] == 1'b1) ? 12'd0 : ap_phi_mux_i_phi_fu_875_p4);

assign start_out = real_start;

assign tmp_89_fu_1153_p4 = {{grp_fu_1422_p2[32:20]}};

assign tmp_90_fu_1175_p4 = {{grp_fu_1429_p2[32:20]}};

assign tmp_91_fu_1197_p4 = {{grp_fu_1436_p2[32:20]}};

assign tmp_92_fu_1015_p4 = {{grp_fu_1380_p2[32:20]}};

assign tmp_93_fu_1037_p4 = {{grp_fu_1387_p2[32:20]}};

assign tmp_94_fu_1065_p4 = {{grp_fu_1394_p2[32:20]}};

assign tmp_95_fu_1087_p4 = {{grp_fu_1401_p2[32:20]}};

assign tmp_96_fu_1109_p4 = {{grp_fu_1408_p2[32:20]}};

assign tmp_97_fu_1131_p4 = {{grp_fu_1415_p2[32:20]}};

assign zext_ln130_fu_918_p1 = select_ln129_reg_1482;

assign zext_ln134_1_fu_1162_p1 = tmp_89_fu_1153_p4;

assign zext_ln134_2_fu_1184_p1 = tmp_90_fu_1175_p4;

assign zext_ln134_3_fu_1206_p1 = tmp_91_fu_1197_p4;

assign zext_ln134_4_fu_1024_p1 = tmp_92_fu_1015_p4;

assign zext_ln134_5_fu_1046_p1 = tmp_93_fu_1037_p4;

assign zext_ln134_6_fu_1074_p1 = tmp_94_fu_1065_p4;

assign zext_ln134_7_fu_1096_p1 = tmp_95_fu_1087_p4;

assign zext_ln134_8_fu_1118_p1 = tmp_96_fu_1109_p4;

assign zext_ln134_9_fu_1140_p1 = tmp_97_fu_1131_p4;

assign zext_ln134_fu_1219_p1 = urem_ln134_reg_2283;

endmodule //top_M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_s
