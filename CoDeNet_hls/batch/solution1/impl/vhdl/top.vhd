-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM4_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM4_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM5_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM5_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM4_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM5_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM5_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM5_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem4_AWREADY : IN STD_LOGIC;
    m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem4_WVALID : OUT STD_LOGIC;
    m_axi_gmem4_WREADY : IN STD_LOGIC;
    m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem4_WLAST : OUT STD_LOGIC;
    m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_WUSER_WIDTH-1 downto 0);
    m_axi_gmem4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem4_ARREADY : IN STD_LOGIC;
    m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RVALID : IN STD_LOGIC;
    m_axi_gmem4_RREADY : OUT STD_LOGIC;
    m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_RLAST : IN STD_LOGIC;
    m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_RUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BVALID : IN STD_LOGIC;
    m_axi_gmem4_BREADY : OUT STD_LOGIC;
    m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_BUSER_WIDTH-1 downto 0);
    m_axi_gmem5_AWVALID : OUT STD_LOGIC;
    m_axi_gmem5_AWREADY : IN STD_LOGIC;
    m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem5_WVALID : OUT STD_LOGIC;
    m_axi_gmem5_WREADY : IN STD_LOGIC;
    m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH-1 downto 0);
    m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem5_WLAST : OUT STD_LOGIC;
    m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_WUSER_WIDTH-1 downto 0);
    m_axi_gmem5_ARVALID : OUT STD_LOGIC;
    m_axi_gmem5_ARREADY : IN STD_LOGIC;
    m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem5_RVALID : IN STD_LOGIC;
    m_axi_gmem5_RREADY : OUT STD_LOGIC;
    m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH-1 downto 0);
    m_axi_gmem5_RLAST : IN STD_LOGIC;
    m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_RUSER_WIDTH-1 downto 0);
    m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BVALID : IN STD_LOGIC;
    m_axi_gmem5_BREADY : OUT STD_LOGIC;
    m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=648,HLS_SYN_DSP=0,HLS_SYN_FF=50233,HLS_SYN_LUT=49095,HLS_VERSION=2020_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 40;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv128_lc_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal fmap : STD_LOGIC_VECTOR (63 downto 0);
    signal out_r : STD_LOGIC_VECTOR (63 downto 0);
    signal k0_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k0_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal quant : STD_LOGIC_VECTOR (63 downto 0);
    signal offsets : STD_LOGIC_VECTOR (63 downto 0);
    signal D : STD_LOGIC_VECTOR (31 downto 0);
    signal IC : STD_LOGIC_VECTOR (31 downto 0);
    signal OC : STD_LOGIC_VECTOR (31 downto 0);
    signal batch : STD_LOGIC_VECTOR (31 downto 0);
    signal STRIDE_2 : STD_LOGIC;
    signal skip3 : STD_LOGIC;
    signal skip1 : STD_LOGIC;
    signal deform : STD_LOGIC;
    signal relu1 : STD_LOGIC;
    signal relu3 : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_AWREADY : STD_LOGIC;
    signal gmem3_WREADY : STD_LOGIC;
    signal gmem3_ARREADY : STD_LOGIC;
    signal gmem3_RVALID : STD_LOGIC;
    signal gmem3_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem3_RLAST : STD_LOGIC;
    signal gmem3_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BVALID : STD_LOGIC;
    signal gmem3_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_AWREADY : STD_LOGIC;
    signal gmem4_WREADY : STD_LOGIC;
    signal gmem4_ARREADY : STD_LOGIC;
    signal gmem4_RVALID : STD_LOGIC;
    signal gmem4_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem4_RLAST : STD_LOGIC;
    signal gmem4_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BVALID : STD_LOGIC;
    signal gmem4_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_AWREADY : STD_LOGIC;
    signal gmem5_WREADY : STD_LOGIC;
    signal gmem5_ARREADY : STD_LOGIC;
    signal gmem5_RVALID : STD_LOGIC;
    signal gmem5_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem5_RLAST : STD_LOGIC;
    signal gmem5_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem5_BVALID : STD_LOGIC;
    signal gmem5_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem5_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal k1_buffer_V_0_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_0_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_1_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_1_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_2_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_2_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_3_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_3_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_4_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_4_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_5_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_5_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_6_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_6_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_7_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_7_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_8_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_8_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_9_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_9_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_10_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_10_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_11_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_11_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_12_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_12_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_13_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_13_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_14_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_14_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_15_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k1_buffer_V_15_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_0_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_0_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_0_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_0_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_1_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_1_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_1_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_1_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_2_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_2_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_2_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_2_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_3_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_3_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_3_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_3_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_4_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_4_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_4_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_4_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_5_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_5_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_5_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_5_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_6_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_6_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_6_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_6_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_7_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_7_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_7_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_7_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_8_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_8_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_8_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_8_t_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal scale_buffer3_V_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_0_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_0_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_1_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_1_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_2_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_2_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_3_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_3_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_4_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_4_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_5_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_5_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_6_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_6_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_7_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_7_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_0_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_0_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_1_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_1_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_2_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_2_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_3_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_3_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_4_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_4_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_5_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_5_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_6_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_6_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_7_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_7_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_0_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_0_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_1_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_1_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_2_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_2_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_3_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_3_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_4_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_4_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_5_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_5_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_6_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_6_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_7_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_7_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_0_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_0_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_1_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_1_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_2_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_2_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_3_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_3_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_4_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_4_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_5_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_5_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_6_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_6_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_7_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_7_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal top_entry39_U0_ap_start : STD_LOGIC;
    signal top_entry39_U0_start_full_n : STD_LOGIC;
    signal top_entry39_U0_ap_done : STD_LOGIC;
    signal top_entry39_U0_ap_continue : STD_LOGIC;
    signal top_entry39_U0_ap_idle : STD_LOGIC;
    signal top_entry39_U0_ap_ready : STD_LOGIC;
    signal top_entry39_U0_start_out : STD_LOGIC;
    signal top_entry39_U0_start_write : STD_LOGIC;
    signal top_entry39_U0_STRIDE_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3 : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip1 : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_deform : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_relu1 : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_relu3 : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_fmap_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_fmap_out_write : STD_LOGIC;
    signal top_entry39_U0_out_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_out_out_write : STD_LOGIC;
    signal top_entry39_U0_k0_1_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_k0_1_out_write : STD_LOGIC;
    signal top_entry39_U0_k0_3_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_k0_3_out_write : STD_LOGIC;
    signal top_entry39_U0_quant_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_quant_out_write : STD_LOGIC;
    signal top_entry39_U0_offsets_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal top_entry39_U0_offsets_out_write : STD_LOGIC;
    signal top_entry39_U0_D_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_D_out_write : STD_LOGIC;
    signal top_entry39_U0_D_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_D_out1_write : STD_LOGIC;
    signal top_entry39_U0_D_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_D_out2_write : STD_LOGIC;
    signal top_entry39_U0_IC_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_IC_out_write : STD_LOGIC;
    signal top_entry39_U0_IC_out3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_IC_out3_write : STD_LOGIC;
    signal top_entry39_U0_OC_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_OC_out_write : STD_LOGIC;
    signal top_entry39_U0_OC_out4_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_OC_out4_write : STD_LOGIC;
    signal top_entry39_U0_OC_out5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_OC_out5_write : STD_LOGIC;
    signal top_entry39_U0_batch_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_batch_out_write : STD_LOGIC;
    signal top_entry39_U0_batch_out6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_batch_out6_write : STD_LOGIC;
    signal top_entry39_U0_batch_out7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_batch_out7_write : STD_LOGIC;
    signal top_entry39_U0_batch_out8_din : STD_LOGIC_VECTOR (31 downto 0);
    signal top_entry39_U0_batch_out8_write : STD_LOGIC;
    signal top_entry39_U0_STRIDE_2_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_STRIDE_2_out_write : STD_LOGIC;
    signal top_entry39_U0_STRIDE_2_out9_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_STRIDE_2_out9_write : STD_LOGIC;
    signal top_entry39_U0_STRIDE_2_out10_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_STRIDE_2_out10_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out11_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out11_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out12_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out12_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out13_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out13_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out14_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out14_write : STD_LOGIC;
    signal top_entry39_U0_skip3_out15_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip3_out15_write : STD_LOGIC;
    signal top_entry39_U0_skip1_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip1_out_write : STD_LOGIC;
    signal top_entry39_U0_skip1_out16_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_skip1_out16_write : STD_LOGIC;
    signal top_entry39_U0_deform_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_deform_out_write : STD_LOGIC;
    signal top_entry39_U0_deform_out17_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_deform_out17_write : STD_LOGIC;
    signal top_entry39_U0_relu1_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_relu1_out_write : STD_LOGIC;
    signal top_entry39_U0_relu3_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal top_entry39_U0_relu3_out_write : STD_LOGIC;
    signal Block_split77_proc_U0_ap_start : STD_LOGIC;
    signal Block_split77_proc_U0_ap_done : STD_LOGIC;
    signal Block_split77_proc_U0_ap_continue : STD_LOGIC;
    signal Block_split77_proc_U0_ap_idle : STD_LOGIC;
    signal Block_split77_proc_U0_ap_ready : STD_LOGIC;
    signal Block_split77_proc_U0_D_read : STD_LOGIC;
    signal Block_split77_proc_U0_STRIDE_2_read : STD_LOGIC;
    signal Block_split77_proc_U0_CONV_D_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split77_proc_U0_CONV_D_out_out_write : STD_LOGIC;
    signal Block_split77_proc_U0_CONV_D_out_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split77_proc_U0_CONV_D_out_out1_write : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_ap_start : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_ap_done : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_ap_continue : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_ap_idle : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWVALID : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WVALID : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WLAST : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARVALID : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_RREADY : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_BREADY : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_din : STD_LOGIC_VECTOR (7 downto 0);
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_write : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_offsets_read : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_batch_read : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_CONV_D_loc_read : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_deform_read : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_skip3_read : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_start : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_done : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_continue : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_idle : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_ready : STD_LOGIC;
    signal Block_split7793_proc_U0_D_read : STD_LOGIC;
    signal Block_split7793_proc_U0_IC_read : STD_LOGIC;
    signal Block_split7793_proc_U0_batch_read : STD_LOGIC;
    signal Block_split7793_proc_U0_ap_return : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_channel_done_select_ln160_loc_channel : STD_LOGIC;
    signal select_ln160_loc_channel_full_n : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_start : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_done : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_continue : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_idle : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_start_out : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_start_write : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WVALID : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WLAST : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_RREADY : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_BREADY : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_din : STD_LOGIC_VECTOR (127 downto 0);
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_write : STD_LOGIC;
    signal M2S_16_8_8_ap_int_128_ap_int_128_U0_fmap_read : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_ap_start : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_ap_done : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_ap_continue : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_ap_idle : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_ap_ready : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWVALID : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WVALID : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WLAST : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARVALID : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_RREADY : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_m_axi_gmem4_BREADY : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_mem_read : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale1_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale1_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale11_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale11_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale11_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale12_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale12_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale12_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale13_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale13_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale13_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale14_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale14_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale14_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale15_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale15_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale15_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale16_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale16_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale16_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale16_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale17_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale17_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale17_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale17_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias1_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias1_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias18_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias18_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias18_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias18_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias19_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias19_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias19_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias19_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias110_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias110_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias110_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias110_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias111_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias111_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias111_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias111_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias112_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias112_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias112_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias112_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias113_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias113_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias113_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias113_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias114_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias114_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias114_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias114_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale3_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale3_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale315_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale315_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale315_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale315_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale316_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale316_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale316_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale316_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale317_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale317_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale317_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale317_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale318_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale318_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale318_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale318_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale319_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale319_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale319_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale319_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale320_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale320_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale320_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale320_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale321_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_scale321_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale321_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale321_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias3_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias3_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias322_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias322_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias322_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias322_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias323_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias323_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias323_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias323_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias324_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias324_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias324_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias324_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias325_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias325_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias325_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias325_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias326_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias326_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias326_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias326_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias327_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias327_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias327_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias327_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias328_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal PackReadBuffer_ap_int_16_U0_bias328_ce0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias328_we0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias328_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal PackReadBuffer_ap_int_16_U0_OC_read : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_skip3_read : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_skip1_read : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_skip1_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_skip1_out_write : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_skip1_out1_din : STD_LOGIC_VECTOR (0 downto 0);
    signal PackReadBuffer_ap_int_16_U0_skip1_out1_write : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_7 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias328_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_7 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_6 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias327_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_6 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_5 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias326_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_5 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_4 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias325_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_4 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_3 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias324_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_3 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_2 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias323_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_2 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_1 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias322_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_1 : STD_LOGIC;
    signal ap_channel_done_bias_buffer3_V_0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer3_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer3_V_0 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_7 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale321_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_7 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_6 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale320_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_6 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_5 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale319_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_5 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_4 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale318_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_4 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_3 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale317_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_3 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_2 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale316_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_2 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_1 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale315_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_1 : STD_LOGIC;
    signal ap_channel_done_scale_buffer3_V_0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer3_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer3_V_0 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_7 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias114_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_7 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_6 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias113_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_6 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_5 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias112_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_5 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_4 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias111_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_4 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_3 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias110_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_3 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_2 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_2 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_1 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_1 : STD_LOGIC;
    signal ap_channel_done_bias_buffer1_V_0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_bias1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_bias_buffer1_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_bias_buffer1_V_0 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_7 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_7 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_6 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_6 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_5 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_5 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_4 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_4 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_3 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_3 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_2 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_2 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_1 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_1 : STD_LOGIC;
    signal ap_channel_done_scale_buffer1_V_0 : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_scale1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_scale_buffer1_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_scale_buffer1_V_0 : STD_LOGIC;
    signal Block_split7796_proc_U0_ap_start : STD_LOGIC;
    signal Block_split7796_proc_U0_ap_done : STD_LOGIC;
    signal Block_split7796_proc_U0_ap_continue : STD_LOGIC;
    signal Block_split7796_proc_U0_ap_idle : STD_LOGIC;
    signal Block_split7796_proc_U0_ap_ready : STD_LOGIC;
    signal Block_split7796_proc_U0_start_out : STD_LOGIC;
    signal Block_split7796_proc_U0_start_write : STD_LOGIC;
    signal Block_split7796_proc_U0_D_read : STD_LOGIC;
    signal Block_split7796_proc_U0_IC_read : STD_LOGIC;
    signal Block_split7796_proc_U0_OC_read : STD_LOGIC;
    signal Block_split7796_proc_U0_batch_read : STD_LOGIC;
    signal Block_split7796_proc_U0_batch_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_batch_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_batch_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_batch_out1_write : STD_LOGIC;
    signal Block_split7796_proc_U0_D_V_out_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_split7796_proc_U0_D_V_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_D_V_out_out2_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_split7796_proc_U0_D_V_out_out2_write : STD_LOGIC;
    signal Block_split7796_proc_U0_IC_V_out_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_split7796_proc_U0_IC_V_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_OC_V_out_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_split7796_proc_U0_OC_V_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_OC_V_out_out3_din : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_split7796_proc_U0_OC_V_out_out3_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_1_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_ret_V_1_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_1_out_out4_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_ret_V_1_out_out4_write : STD_LOGIC;
    signal Block_split7796_proc_U0_mul_ln31_1_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_mul_ln31_1_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_mul_ln31_1_out_out5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_mul_ln31_1_out_out5_write : STD_LOGIC;
    signal Block_split7796_proc_U0_mul_ln31_1_out_out6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_split7796_proc_U0_mul_ln31_1_out_out6_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_cast_out_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_split7796_proc_U0_ret_V_cast_out_out_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_cast_out_out7_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_split7796_proc_U0_ret_V_cast_out_out7_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_cast_out_out8_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_split7796_proc_U0_ret_V_cast_out_out8_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_cast_out_out9_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_split7796_proc_U0_ret_V_cast_out_out9_write : STD_LOGIC;
    signal Block_split7796_proc_U0_ret_V_cast_out_out10_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_split7796_proc_U0_ret_V_cast_out_out10_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_din : STD_LOGIC_VECTOR (255 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_mul_ln31_1_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ret_V_cast_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_skip1_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_din : STD_LOGIC_VECTOR (255 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_mul_ln31_1_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ret_V_cast_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_skip1_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_ret_V_1_loc_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_k0_1_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_15 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_15 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_14 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_14 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_13 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_13 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_12 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_12 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_11 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_11 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_10 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_10 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_9 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_9 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_8 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_8 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_7 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_7 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_6 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_6 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_5 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_5 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_4 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_4 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_3 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_3 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_2 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_2 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_1 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_1 : STD_LOGIC;
    signal ap_channel_done_k1_buffer_V_0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k1_buffer_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k1_buffer_V_0 : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_start : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_done : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_continue : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_idle : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_ready : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ret_V_1_loc_read : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_channel_done_lshr_ln44_cast_loc_channel : STD_LOGIC;
    signal lshr_ln44_cast_loc_channel_full_n : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_write : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_read : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_read : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_write : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_write : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_start : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_done : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_continue : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_idle : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_ready : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_fin_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_din : STD_LOGIC_VECTOR (511 downto 0);
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_write : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_k1_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_IC_V_loc_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_read : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_write : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_write : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_start : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_done : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_continue : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_idle : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_ready : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_s_conv1_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_s_scale_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_s_bias_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_mul_ln31_1_loc_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_skip1_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_relu1_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_OC_V_loc_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_k0_3_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WLAST : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_RREADY : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_BREADY : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_8 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_8 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_7 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_7 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_6 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_6 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_5 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_5 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_4 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_4 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_3 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_3 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_2 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_2 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_1 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_1 : STD_LOGIC;
    signal ap_channel_done_k3_buffer_V_0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_k3_buffer_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_k3_buffer_V_0 : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_start : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_done : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_continue : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_idle : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_ready : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_D_V_loc_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_STRIDE_2_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_batch_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_write : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_write : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_write : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_din : STD_LOGIC_VECTOR (255 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_mul_ln93_1_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ret_V_cast_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_skip3_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_din : STD_LOGIC_VECTOR (255 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce1 : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_mul_ln93_1_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ret_V_cast_loc_read : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_skip3_read : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_start : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_done : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_continue : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_idle : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_start_out : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_start_write : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_din : STD_LOGIC_VECTOR (575 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_write : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce0 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce1 : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_mul_ln93_1_loc_read : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ret_V_cast_loc_read : STD_LOGIC;
    signal M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_skip3_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_start : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_done : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_continue : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_idle : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_ready : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_f1_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_offset_s_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_din : STD_LOGIC_VECTOR (1151 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_write : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_deform_read : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_write : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_write : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_write : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_write : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_write : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_ap_start : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_ap_done : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_ap_continue : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_ap_idle : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_ap_ready : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_in_layer_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_din : STD_LOGIC_VECTOR (511 downto 0);
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_write : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_k3s_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_D_V_loc_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_batch_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_STRIDE_2_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_read : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_write : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_ap_start : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_ap_done : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_ap_continue : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_ap_idle : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_ap_ready : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_s_conv3_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_f3_din : STD_LOGIC_VECTOR (127 downto 0);
    signal quantize_mul_shift_24_8_16_16_16_16_U0_f3_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_s_scale_1_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_s_bias_1_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_mul_ln93_1_loc_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_OC_V_loc_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_skip3_read : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_relu3_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_start : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_done : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_continue : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_idle : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_ready : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_batch_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_OC_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_CONV_D_loc_read : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_din : STD_LOGIC_VECTOR (28 downto 0);
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_write : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_start : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_done : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_continue : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_idle : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_ready : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_s_mem_read : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_out_r_read : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_select_ln169_loc_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal scale_buffer1_V_0_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_0_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_0_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_0_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_1_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_1_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_1_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_1_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_2_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_2_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_2_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_2_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_3_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_3_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_3_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_3_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_4_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_4_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_4_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_4_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_5_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_5_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_5_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_5_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_6_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_6_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_6_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_6_t_we1 : STD_LOGIC;
    signal scale_buffer1_V_7_i_full_n : STD_LOGIC;
    signal scale_buffer1_V_7_t_empty_n : STD_LOGIC;
    signal scale_buffer1_V_7_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer1_V_7_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_0_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_0_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_0_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_0_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_1_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_1_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_1_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_1_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_2_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_2_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_2_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_2_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_3_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_3_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_3_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_3_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_4_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_4_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_4_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_4_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_5_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_5_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_5_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_5_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_6_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_6_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_6_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_6_t_we1 : STD_LOGIC;
    signal bias_buffer1_V_7_i_full_n : STD_LOGIC;
    signal bias_buffer1_V_7_t_empty_n : STD_LOGIC;
    signal bias_buffer1_V_7_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer1_V_7_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_0_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_0_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_0_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_0_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_1_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_1_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_1_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_1_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_2_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_2_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_2_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_2_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_3_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_3_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_3_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_3_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_4_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_4_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_4_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_4_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_5_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_5_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_5_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_5_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_6_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_6_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_6_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_6_t_we1 : STD_LOGIC;
    signal scale_buffer3_V_7_i_full_n : STD_LOGIC;
    signal scale_buffer3_V_7_t_empty_n : STD_LOGIC;
    signal scale_buffer3_V_7_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scale_buffer3_V_7_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_0_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_0_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_0_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_0_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_1_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_1_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_1_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_1_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_2_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_2_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_2_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_2_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_3_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_3_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_3_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_3_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_4_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_4_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_4_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_4_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_5_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_5_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_5_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_5_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_6_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_6_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_6_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_6_t_we1 : STD_LOGIC;
    signal bias_buffer3_V_7_i_full_n : STD_LOGIC;
    signal bias_buffer3_V_7_t_empty_n : STD_LOGIC;
    signal bias_buffer3_V_7_t_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_buffer3_V_7_t_we1 : STD_LOGIC;
    signal k1_buffer_V_0_i_full_n : STD_LOGIC;
    signal k1_buffer_V_0_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_1_i_full_n : STD_LOGIC;
    signal k1_buffer_V_1_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_2_i_full_n : STD_LOGIC;
    signal k1_buffer_V_2_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_3_i_full_n : STD_LOGIC;
    signal k1_buffer_V_3_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_4_i_full_n : STD_LOGIC;
    signal k1_buffer_V_4_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_5_i_full_n : STD_LOGIC;
    signal k1_buffer_V_5_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_6_i_full_n : STD_LOGIC;
    signal k1_buffer_V_6_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_7_i_full_n : STD_LOGIC;
    signal k1_buffer_V_7_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_8_i_full_n : STD_LOGIC;
    signal k1_buffer_V_8_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_9_i_full_n : STD_LOGIC;
    signal k1_buffer_V_9_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_10_i_full_n : STD_LOGIC;
    signal k1_buffer_V_10_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_11_i_full_n : STD_LOGIC;
    signal k1_buffer_V_11_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_12_i_full_n : STD_LOGIC;
    signal k1_buffer_V_12_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_13_i_full_n : STD_LOGIC;
    signal k1_buffer_V_13_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_14_i_full_n : STD_LOGIC;
    signal k1_buffer_V_14_t_empty_n : STD_LOGIC;
    signal k1_buffer_V_15_i_full_n : STD_LOGIC;
    signal k1_buffer_V_15_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_0_i_full_n : STD_LOGIC;
    signal k3_buffer_V_0_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_0_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_0_t_we1 : STD_LOGIC;
    signal k3_buffer_V_1_i_full_n : STD_LOGIC;
    signal k3_buffer_V_1_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_1_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_1_t_we1 : STD_LOGIC;
    signal k3_buffer_V_2_i_full_n : STD_LOGIC;
    signal k3_buffer_V_2_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_2_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_2_t_we1 : STD_LOGIC;
    signal k3_buffer_V_3_i_full_n : STD_LOGIC;
    signal k3_buffer_V_3_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_3_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_3_t_we1 : STD_LOGIC;
    signal k3_buffer_V_4_i_full_n : STD_LOGIC;
    signal k3_buffer_V_4_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_4_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_4_t_we1 : STD_LOGIC;
    signal k3_buffer_V_5_i_full_n : STD_LOGIC;
    signal k3_buffer_V_5_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_5_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_5_t_we1 : STD_LOGIC;
    signal k3_buffer_V_6_i_full_n : STD_LOGIC;
    signal k3_buffer_V_6_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_6_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_6_t_we1 : STD_LOGIC;
    signal k3_buffer_V_7_i_full_n : STD_LOGIC;
    signal k3_buffer_V_7_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_7_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_7_t_we1 : STD_LOGIC;
    signal k3_buffer_V_8_i_full_n : STD_LOGIC;
    signal k3_buffer_V_8_t_empty_n : STD_LOGIC;
    signal k3_buffer_V_8_t_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k3_buffer_V_8_t_we1 : STD_LOGIC;
    signal fmap_c_full_n : STD_LOGIC;
    signal fmap_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fmap_c_empty_n : STD_LOGIC;
    signal out_c_full_n : STD_LOGIC;
    signal out_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal out_c_empty_n : STD_LOGIC;
    signal k0_1_c_full_n : STD_LOGIC;
    signal k0_1_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal k0_1_c_empty_n : STD_LOGIC;
    signal k0_3_c_full_n : STD_LOGIC;
    signal k0_3_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal k0_3_c_empty_n : STD_LOGIC;
    signal quant_c_full_n : STD_LOGIC;
    signal quant_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal quant_c_empty_n : STD_LOGIC;
    signal offsets_c_full_n : STD_LOGIC;
    signal offsets_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal offsets_c_empty_n : STD_LOGIC;
    signal D_c_full_n : STD_LOGIC;
    signal D_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal D_c_empty_n : STD_LOGIC;
    signal D_c123_full_n : STD_LOGIC;
    signal D_c123_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal D_c123_empty_n : STD_LOGIC;
    signal D_c124_full_n : STD_LOGIC;
    signal D_c124_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal D_c124_empty_n : STD_LOGIC;
    signal IC_c_full_n : STD_LOGIC;
    signal IC_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal IC_c_empty_n : STD_LOGIC;
    signal IC_c125_full_n : STD_LOGIC;
    signal IC_c125_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal IC_c125_empty_n : STD_LOGIC;
    signal OC_c_full_n : STD_LOGIC;
    signal OC_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal OC_c_empty_n : STD_LOGIC;
    signal OC_c126_full_n : STD_LOGIC;
    signal OC_c126_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal OC_c126_empty_n : STD_LOGIC;
    signal OC_c127_full_n : STD_LOGIC;
    signal OC_c127_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal OC_c127_empty_n : STD_LOGIC;
    signal batch_c_full_n : STD_LOGIC;
    signal batch_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c_empty_n : STD_LOGIC;
    signal batch_c128_full_n : STD_LOGIC;
    signal batch_c128_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c128_empty_n : STD_LOGIC;
    signal batch_c129_full_n : STD_LOGIC;
    signal batch_c129_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c129_empty_n : STD_LOGIC;
    signal batch_c130_full_n : STD_LOGIC;
    signal batch_c130_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c130_empty_n : STD_LOGIC;
    signal STRIDE_2_c_full_n : STD_LOGIC;
    signal STRIDE_2_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal STRIDE_2_c_empty_n : STD_LOGIC;
    signal STRIDE_2_c131_full_n : STD_LOGIC;
    signal STRIDE_2_c131_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal STRIDE_2_c131_empty_n : STD_LOGIC;
    signal STRIDE_2_c132_full_n : STD_LOGIC;
    signal STRIDE_2_c132_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal STRIDE_2_c132_empty_n : STD_LOGIC;
    signal skip3_c_full_n : STD_LOGIC;
    signal skip3_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c_empty_n : STD_LOGIC;
    signal skip3_c133_full_n : STD_LOGIC;
    signal skip3_c133_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c133_empty_n : STD_LOGIC;
    signal skip3_c134_full_n : STD_LOGIC;
    signal skip3_c134_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c134_empty_n : STD_LOGIC;
    signal skip3_c135_full_n : STD_LOGIC;
    signal skip3_c135_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c135_empty_n : STD_LOGIC;
    signal skip3_c136_full_n : STD_LOGIC;
    signal skip3_c136_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c136_empty_n : STD_LOGIC;
    signal skip3_c137_full_n : STD_LOGIC;
    signal skip3_c137_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c137_empty_n : STD_LOGIC;
    signal skip1_c_full_n : STD_LOGIC;
    signal skip1_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c_empty_n : STD_LOGIC;
    signal skip1_c138_full_n : STD_LOGIC;
    signal skip1_c138_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c138_empty_n : STD_LOGIC;
    signal deform_c_full_n : STD_LOGIC;
    signal deform_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal deform_c_empty_n : STD_LOGIC;
    signal deform_c139_full_n : STD_LOGIC;
    signal deform_c139_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal deform_c139_empty_n : STD_LOGIC;
    signal relu1_c_full_n : STD_LOGIC;
    signal relu1_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal relu1_c_empty_n : STD_LOGIC;
    signal relu3_c_full_n : STD_LOGIC;
    signal relu3_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal relu3_c_empty_n : STD_LOGIC;
    signal CONV_D_loc_c_full_n : STD_LOGIC;
    signal CONV_D_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal CONV_D_loc_c_empty_n : STD_LOGIC;
    signal CONV_D_loc_c140_full_n : STD_LOGIC;
    signal CONV_D_loc_c140_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal CONV_D_loc_c140_empty_n : STD_LOGIC;
    signal offset_s_full_n : STD_LOGIC;
    signal offset_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal offset_s_empty_n : STD_LOGIC;
    signal select_ln160_loc_channel_dout : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln160_loc_channel_empty_n : STD_LOGIC;
    signal fin_full_n : STD_LOGIC;
    signal fin_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal fin_empty_n : STD_LOGIC;
    signal skip1_c141_full_n : STD_LOGIC;
    signal skip1_c141_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c141_empty_n : STD_LOGIC;
    signal skip1_c142_full_n : STD_LOGIC;
    signal skip1_c142_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c142_empty_n : STD_LOGIC;
    signal batch_c143_full_n : STD_LOGIC;
    signal batch_c143_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c143_empty_n : STD_LOGIC;
    signal batch_c144_full_n : STD_LOGIC;
    signal batch_c144_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c144_empty_n : STD_LOGIC;
    signal D_V_loc_c_full_n : STD_LOGIC;
    signal D_V_loc_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal D_V_loc_c_empty_n : STD_LOGIC;
    signal D_V_loc_c145_full_n : STD_LOGIC;
    signal D_V_loc_c145_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal D_V_loc_c145_empty_n : STD_LOGIC;
    signal IC_V_loc_c_full_n : STD_LOGIC;
    signal IC_V_loc_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal IC_V_loc_c_empty_n : STD_LOGIC;
    signal OC_V_loc_c_full_n : STD_LOGIC;
    signal OC_V_loc_c_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c_empty_n : STD_LOGIC;
    signal OC_V_loc_c146_full_n : STD_LOGIC;
    signal OC_V_loc_c146_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c146_empty_n : STD_LOGIC;
    signal ret_V_1_loc_c_full_n : STD_LOGIC;
    signal ret_V_1_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_loc_c_empty_n : STD_LOGIC;
    signal ret_V_1_loc_c147_full_n : STD_LOGIC;
    signal ret_V_1_loc_c147_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_loc_c147_empty_n : STD_LOGIC;
    signal mul_ln31_1_loc_c_full_n : STD_LOGIC;
    signal mul_ln31_1_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln31_1_loc_c_empty_n : STD_LOGIC;
    signal mul_ln31_1_loc_c148_full_n : STD_LOGIC;
    signal mul_ln31_1_loc_c148_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln31_1_loc_c148_empty_n : STD_LOGIC;
    signal mul_ln31_1_loc_c149_full_n : STD_LOGIC;
    signal mul_ln31_1_loc_c149_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln31_1_loc_c149_empty_n : STD_LOGIC;
    signal ret_V_cast_loc_c_full_n : STD_LOGIC;
    signal ret_V_cast_loc_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_cast_loc_c_empty_n : STD_LOGIC;
    signal ret_V_cast_loc_c150_full_n : STD_LOGIC;
    signal ret_V_cast_loc_c150_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_cast_loc_c150_empty_n : STD_LOGIC;
    signal ret_V_cast_loc_c151_full_n : STD_LOGIC;
    signal ret_V_cast_loc_c151_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_cast_loc_c151_empty_n : STD_LOGIC;
    signal ret_V_cast_loc_c152_full_n : STD_LOGIC;
    signal ret_V_cast_loc_c152_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_cast_loc_c152_empty_n : STD_LOGIC;
    signal ret_V_cast_loc_c153_full_n : STD_LOGIC;
    signal ret_V_cast_loc_c153_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_cast_loc_c153_empty_n : STD_LOGIC;
    signal s_scale_full_n : STD_LOGIC;
    signal s_scale_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal s_scale_empty_n : STD_LOGIC;
    signal s_bias_full_n : STD_LOGIC;
    signal s_bias_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal s_bias_empty_n : STD_LOGIC;
    signal lshr_ln44_cast_loc_channel_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln44_cast_loc_channel_empty_n : STD_LOGIC;
    signal k1_full_n : STD_LOGIC;
    signal k1_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal k1_empty_n : STD_LOGIC;
    signal mul_ln31_1_loc_c154_full_n : STD_LOGIC;
    signal mul_ln31_1_loc_c154_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln31_1_loc_c154_empty_n : STD_LOGIC;
    signal skip1_c155_full_n : STD_LOGIC;
    signal skip1_c155_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c155_empty_n : STD_LOGIC;
    signal s_conv1_full_n : STD_LOGIC;
    signal s_conv1_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal s_conv1_empty_n : STD_LOGIC;
    signal mul_ln31_1_loc_c156_full_n : STD_LOGIC;
    signal mul_ln31_1_loc_c156_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln31_1_loc_c156_empty_n : STD_LOGIC;
    signal OC_V_loc_c157_full_n : STD_LOGIC;
    signal OC_V_loc_c157_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c157_empty_n : STD_LOGIC;
    signal skip1_c158_full_n : STD_LOGIC;
    signal skip1_c158_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip1_c158_empty_n : STD_LOGIC;
    signal f1_full_n : STD_LOGIC;
    signal f1_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal f1_empty_n : STD_LOGIC;
    signal OC_V_loc_c159_full_n : STD_LOGIC;
    signal OC_V_loc_c159_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c159_empty_n : STD_LOGIC;
    signal mul_ln93_1_loc_c_full_n : STD_LOGIC;
    signal mul_ln93_1_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln93_1_loc_c_empty_n : STD_LOGIC;
    signal mul_ln93_1_loc_c160_full_n : STD_LOGIC;
    signal mul_ln93_1_loc_c160_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln93_1_loc_c160_empty_n : STD_LOGIC;
    signal mul_ln93_1_loc_c161_full_n : STD_LOGIC;
    signal mul_ln93_1_loc_c161_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln93_1_loc_c161_empty_n : STD_LOGIC;
    signal mul_ln93_1_loc_c162_full_n : STD_LOGIC;
    signal mul_ln93_1_loc_c162_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln93_1_loc_c162_empty_n : STD_LOGIC;
    signal s_scale_1_full_n : STD_LOGIC;
    signal s_scale_1_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal s_scale_1_empty_n : STD_LOGIC;
    signal s_bias_1_full_n : STD_LOGIC;
    signal s_bias_1_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal s_bias_1_empty_n : STD_LOGIC;
    signal k3s_full_n : STD_LOGIC;
    signal k3s_dout : STD_LOGIC_VECTOR (575 downto 0);
    signal k3s_empty_n : STD_LOGIC;
    signal in_layer_full_n : STD_LOGIC;
    signal in_layer_dout : STD_LOGIC_VECTOR (1151 downto 0);
    signal in_layer_empty_n : STD_LOGIC;
    signal D_V_loc_c163_full_n : STD_LOGIC;
    signal D_V_loc_c163_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal D_V_loc_c163_empty_n : STD_LOGIC;
    signal OC_V_loc_c164_full_n : STD_LOGIC;
    signal OC_V_loc_c164_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c164_empty_n : STD_LOGIC;
    signal batch_c165_full_n : STD_LOGIC;
    signal batch_c165_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal batch_c165_empty_n : STD_LOGIC;
    signal STRIDE_2_c166_full_n : STD_LOGIC;
    signal STRIDE_2_c166_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal STRIDE_2_c166_empty_n : STD_LOGIC;
    signal skip3_c167_full_n : STD_LOGIC;
    signal skip3_c167_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c167_empty_n : STD_LOGIC;
    signal s_conv3_full_n : STD_LOGIC;
    signal s_conv3_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal s_conv3_empty_n : STD_LOGIC;
    signal OC_V_loc_c168_full_n : STD_LOGIC;
    signal OC_V_loc_c168_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal OC_V_loc_c168_empty_n : STD_LOGIC;
    signal skip3_c169_full_n : STD_LOGIC;
    signal skip3_c169_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal skip3_c169_empty_n : STD_LOGIC;
    signal f3_full_n : STD_LOGIC;
    signal f3_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal f3_empty_n : STD_LOGIC;
    signal select_ln169_loc_c_full_n : STD_LOGIC;
    signal select_ln169_loc_c_dout : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln169_loc_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_top_entry39_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_top_entry39_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_PackReadBuffer_ap_int_16_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready : STD_LOGIC;
    signal start_for_Block_split77_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split77_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_split77_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split77_proc_U0_empty_n : STD_LOGIC;
    signal start_for_Block_split7793_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split7793_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_split7793_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split7793_proc_U0_empty_n : STD_LOGIC;
    signal start_for_Block_split7796_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split7796_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_split7796_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_split7796_proc_U0_empty_n : STD_LOGIC;
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_full_n : STD_LOGIC;
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_empty_n : STD_LOGIC;
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_empty_n : STD_LOGIC;
    signal start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_full_n : STD_LOGIC;
    signal start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_empty_n : STD_LOGIC;
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_U0_full_n : STD_LOGIC;
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_quantize_mul_shift_24_8_16_16_16_16_U0_empty_n : STD_LOGIC;
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_empty_n : STD_LOGIC;
    signal start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_full_n : STD_LOGIC;
    signal start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_empty_n : STD_LOGIC;
    signal Block_split77_proc_U0_start_full_n : STD_LOGIC;
    signal Block_split77_proc_U0_start_write : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_start_full_n : STD_LOGIC;
    signal M2S_addr_ap_uint_8_ap_uint_8_U0_start_write : STD_LOGIC;
    signal Block_split7793_proc_U0_start_full_n : STD_LOGIC;
    signal Block_split7793_proc_U0_start_write : STD_LOGIC;
    signal start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_full_n : STD_LOGIC;
    signal start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_empty_n : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_start_full_n : STD_LOGIC;
    signal PackReadBuffer_ap_int_16_U0_start_write : STD_LOGIC;
    signal start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_empty_n : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_start_full_n : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_start_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_start_full_n : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_start_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_VITIS_LOOP_38_1_proc_U0_start_write : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_start_full_n : STD_LOGIC;
    signal Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_start_write : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_start_full_n : STD_LOGIC;
    signal M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_start_write : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_start_full_n : STD_LOGIC;
    signal conv1x1_v4_512_512_1024_16_16_24_8_4_U0_start_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_start_full_n : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_23_U0_start_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_VITIS_LOOP_88_1_proc_U0_start_write : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_start_full_n : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_start_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_start_full_n : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_start_write : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_start_full_n : STD_LOGIC;
    signal M2S_repeat_16_16_ap_int_16_ap_int_256_U0_start_write : STD_LOGIC;
    signal start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_full_n : STD_LOGIC;
    signal start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_empty_n : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_start_full_n : STD_LOGIC;
    signal conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_start_write : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_start_full_n : STD_LOGIC;
    signal dw_deform_M_512_1024_16_24_8_4_1_U0_start_write : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_start_full_n : STD_LOGIC;
    signal quantize_mul_shift_24_8_16_16_16_16_U0_start_write : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_start_full_n : STD_LOGIC;
    signal Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_start_write : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_start_full_n : STD_LOGIC;
    signal S2M_16_8_8_ap_int_128_ap_int_128_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_top_entry39 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        fmap : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r : IN STD_LOGIC_VECTOR (63 downto 0);
        k0_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k0_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        quant : IN STD_LOGIC_VECTOR (63 downto 0);
        offsets : IN STD_LOGIC_VECTOR (63 downto 0);
        D : IN STD_LOGIC_VECTOR (31 downto 0);
        IC : IN STD_LOGIC_VECTOR (31 downto 0);
        OC : IN STD_LOGIC_VECTOR (31 downto 0);
        batch : IN STD_LOGIC_VECTOR (31 downto 0);
        STRIDE_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3 : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1 : IN STD_LOGIC_VECTOR (0 downto 0);
        deform : IN STD_LOGIC_VECTOR (0 downto 0);
        relu1 : IN STD_LOGIC_VECTOR (0 downto 0);
        relu3 : IN STD_LOGIC_VECTOR (0 downto 0);
        fmap_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fmap_out_full_n : IN STD_LOGIC;
        fmap_out_write : OUT STD_LOGIC;
        out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_out_full_n : IN STD_LOGIC;
        out_out_write : OUT STD_LOGIC;
        k0_1_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_1_out_full_n : IN STD_LOGIC;
        k0_1_out_write : OUT STD_LOGIC;
        k0_3_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_3_out_full_n : IN STD_LOGIC;
        k0_3_out_write : OUT STD_LOGIC;
        quant_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        quant_out_full_n : IN STD_LOGIC;
        quant_out_write : OUT STD_LOGIC;
        offsets_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        offsets_out_full_n : IN STD_LOGIC;
        offsets_out_write : OUT STD_LOGIC;
        D_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        D_out_full_n : IN STD_LOGIC;
        D_out_write : OUT STD_LOGIC;
        D_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        D_out1_full_n : IN STD_LOGIC;
        D_out1_write : OUT STD_LOGIC;
        D_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        D_out2_full_n : IN STD_LOGIC;
        D_out2_write : OUT STD_LOGIC;
        IC_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        IC_out_full_n : IN STD_LOGIC;
        IC_out_write : OUT STD_LOGIC;
        IC_out3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        IC_out3_full_n : IN STD_LOGIC;
        IC_out3_write : OUT STD_LOGIC;
        OC_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        OC_out_full_n : IN STD_LOGIC;
        OC_out_write : OUT STD_LOGIC;
        OC_out4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        OC_out4_full_n : IN STD_LOGIC;
        OC_out4_write : OUT STD_LOGIC;
        OC_out5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        OC_out5_full_n : IN STD_LOGIC;
        OC_out5_write : OUT STD_LOGIC;
        batch_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out_full_n : IN STD_LOGIC;
        batch_out_write : OUT STD_LOGIC;
        batch_out6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out6_full_n : IN STD_LOGIC;
        batch_out6_write : OUT STD_LOGIC;
        batch_out7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out7_full_n : IN STD_LOGIC;
        batch_out7_write : OUT STD_LOGIC;
        batch_out8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out8_full_n : IN STD_LOGIC;
        batch_out8_write : OUT STD_LOGIC;
        STRIDE_2_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_out_full_n : IN STD_LOGIC;
        STRIDE_2_out_write : OUT STD_LOGIC;
        STRIDE_2_out9_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_out9_full_n : IN STD_LOGIC;
        STRIDE_2_out9_write : OUT STD_LOGIC;
        STRIDE_2_out10_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_out10_full_n : IN STD_LOGIC;
        STRIDE_2_out10_write : OUT STD_LOGIC;
        skip3_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out_full_n : IN STD_LOGIC;
        skip3_out_write : OUT STD_LOGIC;
        skip3_out11_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out11_full_n : IN STD_LOGIC;
        skip3_out11_write : OUT STD_LOGIC;
        skip3_out12_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out12_full_n : IN STD_LOGIC;
        skip3_out12_write : OUT STD_LOGIC;
        skip3_out13_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out13_full_n : IN STD_LOGIC;
        skip3_out13_write : OUT STD_LOGIC;
        skip3_out14_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out14_full_n : IN STD_LOGIC;
        skip3_out14_write : OUT STD_LOGIC;
        skip3_out15_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out15_full_n : IN STD_LOGIC;
        skip3_out15_write : OUT STD_LOGIC;
        skip1_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out_full_n : IN STD_LOGIC;
        skip1_out_write : OUT STD_LOGIC;
        skip1_out16_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out16_full_n : IN STD_LOGIC;
        skip1_out16_write : OUT STD_LOGIC;
        deform_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        deform_out_full_n : IN STD_LOGIC;
        deform_out_write : OUT STD_LOGIC;
        deform_out17_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        deform_out17_full_n : IN STD_LOGIC;
        deform_out17_write : OUT STD_LOGIC;
        relu1_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        relu1_out_full_n : IN STD_LOGIC;
        relu1_out_write : OUT STD_LOGIC;
        relu3_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        relu3_out_full_n : IN STD_LOGIC;
        relu3_out_write : OUT STD_LOGIC );
    end component;


    component top_Block_split77_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        D_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        D_empty_n : IN STD_LOGIC;
        D_read : OUT STD_LOGIC;
        STRIDE_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_empty_n : IN STD_LOGIC;
        STRIDE_2_read : OUT STD_LOGIC;
        CONV_D_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        CONV_D_out_out_full_n : IN STD_LOGIC;
        CONV_D_out_out_write : OUT STD_LOGIC;
        CONV_D_out_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        CONV_D_out_out1_full_n : IN STD_LOGIC;
        CONV_D_out_out1_write : OUT STD_LOGIC );
    end component;


    component top_M2S_addr_ap_uint_8_ap_uint_8_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem5_AWVALID : OUT STD_LOGIC;
        m_axi_gmem5_AWREADY : IN STD_LOGIC;
        m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WVALID : OUT STD_LOGIC;
        m_axi_gmem5_WREADY : IN STD_LOGIC;
        m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WLAST : OUT STD_LOGIC;
        m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARVALID : OUT STD_LOGIC;
        m_axi_gmem5_ARREADY : IN STD_LOGIC;
        m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RVALID : IN STD_LOGIC;
        m_axi_gmem5_RREADY : OUT STD_LOGIC;
        m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem5_RLAST : IN STD_LOGIC;
        m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BVALID : IN STD_LOGIC;
        m_axi_gmem5_BREADY : OUT STD_LOGIC;
        m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_mem_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_mem_full_n : IN STD_LOGIC;
        s_mem_write : OUT STD_LOGIC;
        offsets_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        offsets_empty_n : IN STD_LOGIC;
        offsets_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        CONV_D_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        CONV_D_loc_empty_n : IN STD_LOGIC;
        CONV_D_loc_read : OUT STD_LOGIC;
        deform_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        deform_empty_n : IN STD_LOGIC;
        deform_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC );
    end component;


    component top_Block_split7793_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        D_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        D_empty_n : IN STD_LOGIC;
        D_read : OUT STD_LOGIC;
        IC_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        IC_empty_n : IN STD_LOGIC;
        IC_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component top_M2S_16_8_8_ap_int_128_ap_int_128_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_mem_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        s_mem_full_n : IN STD_LOGIC;
        s_mem_write : OUT STD_LOGIC;
        fmap_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fmap_empty_n : IN STD_LOGIC;
        fmap_read : OUT STD_LOGIC;
        REP : IN STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component top_PackReadBuffer_ap_int_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem4_AWVALID : OUT STD_LOGIC;
        m_axi_gmem4_AWREADY : IN STD_LOGIC;
        m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WVALID : OUT STD_LOGIC;
        m_axi_gmem4_WREADY : IN STD_LOGIC;
        m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_WLAST : OUT STD_LOGIC;
        m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARVALID : OUT STD_LOGIC;
        m_axi_gmem4_ARREADY : IN STD_LOGIC;
        m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RVALID : IN STD_LOGIC;
        m_axi_gmem4_RREADY : OUT STD_LOGIC;
        m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem4_RLAST : IN STD_LOGIC;
        m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BVALID : IN STD_LOGIC;
        m_axi_gmem4_BREADY : OUT STD_LOGIC;
        m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        mem_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        mem_empty_n : IN STD_LOGIC;
        mem_read : OUT STD_LOGIC;
        scale1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale1_ce0 : OUT STD_LOGIC;
        scale1_we0 : OUT STD_LOGIC;
        scale1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale11_ce0 : OUT STD_LOGIC;
        scale11_we0 : OUT STD_LOGIC;
        scale11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale12_ce0 : OUT STD_LOGIC;
        scale12_we0 : OUT STD_LOGIC;
        scale12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale13_ce0 : OUT STD_LOGIC;
        scale13_we0 : OUT STD_LOGIC;
        scale13_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale14_ce0 : OUT STD_LOGIC;
        scale14_we0 : OUT STD_LOGIC;
        scale14_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale15_ce0 : OUT STD_LOGIC;
        scale15_we0 : OUT STD_LOGIC;
        scale15_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale16_ce0 : OUT STD_LOGIC;
        scale16_we0 : OUT STD_LOGIC;
        scale16_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale17_ce0 : OUT STD_LOGIC;
        scale17_we0 : OUT STD_LOGIC;
        scale17_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias1_ce0 : OUT STD_LOGIC;
        bias1_we0 : OUT STD_LOGIC;
        bias1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias18_ce0 : OUT STD_LOGIC;
        bias18_we0 : OUT STD_LOGIC;
        bias18_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias19_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias19_ce0 : OUT STD_LOGIC;
        bias19_we0 : OUT STD_LOGIC;
        bias19_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias110_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias110_ce0 : OUT STD_LOGIC;
        bias110_we0 : OUT STD_LOGIC;
        bias110_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias111_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias111_ce0 : OUT STD_LOGIC;
        bias111_we0 : OUT STD_LOGIC;
        bias111_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias112_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias112_ce0 : OUT STD_LOGIC;
        bias112_we0 : OUT STD_LOGIC;
        bias112_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias113_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias113_ce0 : OUT STD_LOGIC;
        bias113_we0 : OUT STD_LOGIC;
        bias113_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias114_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias114_ce0 : OUT STD_LOGIC;
        bias114_we0 : OUT STD_LOGIC;
        bias114_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale3_ce0 : OUT STD_LOGIC;
        scale3_we0 : OUT STD_LOGIC;
        scale3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale315_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale315_ce0 : OUT STD_LOGIC;
        scale315_we0 : OUT STD_LOGIC;
        scale315_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale316_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale316_ce0 : OUT STD_LOGIC;
        scale316_we0 : OUT STD_LOGIC;
        scale316_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale317_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale317_ce0 : OUT STD_LOGIC;
        scale317_we0 : OUT STD_LOGIC;
        scale317_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale318_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale318_ce0 : OUT STD_LOGIC;
        scale318_we0 : OUT STD_LOGIC;
        scale318_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale319_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale319_ce0 : OUT STD_LOGIC;
        scale319_we0 : OUT STD_LOGIC;
        scale319_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale320_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale320_ce0 : OUT STD_LOGIC;
        scale320_we0 : OUT STD_LOGIC;
        scale320_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        scale321_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale321_ce0 : OUT STD_LOGIC;
        scale321_we0 : OUT STD_LOGIC;
        scale321_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias3_ce0 : OUT STD_LOGIC;
        bias3_we0 : OUT STD_LOGIC;
        bias3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias322_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias322_ce0 : OUT STD_LOGIC;
        bias322_we0 : OUT STD_LOGIC;
        bias322_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias323_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias323_ce0 : OUT STD_LOGIC;
        bias323_we0 : OUT STD_LOGIC;
        bias323_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias324_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias324_ce0 : OUT STD_LOGIC;
        bias324_we0 : OUT STD_LOGIC;
        bias324_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias325_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias325_ce0 : OUT STD_LOGIC;
        bias325_we0 : OUT STD_LOGIC;
        bias325_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias326_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias326_ce0 : OUT STD_LOGIC;
        bias326_we0 : OUT STD_LOGIC;
        bias326_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias327_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias327_ce0 : OUT STD_LOGIC;
        bias327_we0 : OUT STD_LOGIC;
        bias327_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias328_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias328_ce0 : OUT STD_LOGIC;
        bias328_we0 : OUT STD_LOGIC;
        bias328_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        OC_empty_n : IN STD_LOGIC;
        OC_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC;
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC;
        skip1_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out_full_n : IN STD_LOGIC;
        skip1_out_write : OUT STD_LOGIC;
        skip1_out1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out1_full_n : IN STD_LOGIC;
        skip1_out1_write : OUT STD_LOGIC );
    end component;


    component top_Block_split7796_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        D_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        D_empty_n : IN STD_LOGIC;
        D_read : OUT STD_LOGIC;
        IC_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        IC_empty_n : IN STD_LOGIC;
        IC_read : OUT STD_LOGIC;
        OC_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        OC_empty_n : IN STD_LOGIC;
        OC_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        batch_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out_full_n : IN STD_LOGIC;
        batch_out_write : OUT STD_LOGIC;
        batch_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out1_full_n : IN STD_LOGIC;
        batch_out1_write : OUT STD_LOGIC;
        D_V_out_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        D_V_out_out_full_n : IN STD_LOGIC;
        D_V_out_out_write : OUT STD_LOGIC;
        D_V_out_out2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        D_V_out_out2_full_n : IN STD_LOGIC;
        D_V_out_out2_write : OUT STD_LOGIC;
        IC_V_out_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        IC_V_out_out_full_n : IN STD_LOGIC;
        IC_V_out_out_write : OUT STD_LOGIC;
        OC_V_out_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_out_out_full_n : IN STD_LOGIC;
        OC_V_out_out_write : OUT STD_LOGIC;
        OC_V_out_out3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_out_out3_full_n : IN STD_LOGIC;
        OC_V_out_out3_write : OUT STD_LOGIC;
        ret_V_1_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ret_V_1_out_out_full_n : IN STD_LOGIC;
        ret_V_1_out_out_write : OUT STD_LOGIC;
        ret_V_1_out_out4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ret_V_1_out_out4_full_n : IN STD_LOGIC;
        ret_V_1_out_out4_write : OUT STD_LOGIC;
        mul_ln31_1_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_out_out_full_n : IN STD_LOGIC;
        mul_ln31_1_out_out_write : OUT STD_LOGIC;
        mul_ln31_1_out_out5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_out_out5_full_n : IN STD_LOGIC;
        mul_ln31_1_out_out5_write : OUT STD_LOGIC;
        mul_ln31_1_out_out6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_out_out6_full_n : IN STD_LOGIC;
        mul_ln31_1_out_out6_write : OUT STD_LOGIC;
        ret_V_cast_out_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_out_out_full_n : IN STD_LOGIC;
        ret_V_cast_out_out_write : OUT STD_LOGIC;
        ret_V_cast_out_out7_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_out_out7_full_n : IN STD_LOGIC;
        ret_V_cast_out_out7_write : OUT STD_LOGIC;
        ret_V_cast_out_out8_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_out_out8_full_n : IN STD_LOGIC;
        ret_V_cast_out_out8_write : OUT STD_LOGIC;
        ret_V_cast_out_out9_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_out_out9_full_n : IN STD_LOGIC;
        ret_V_cast_out_out9_write : OUT STD_LOGIC;
        ret_V_cast_out_out10_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_out_out10_full_n : IN STD_LOGIC;
        ret_V_cast_out_out10_write : OUT STD_LOGIC );
    end component;


    component top_M2S_repeat_16_16_ap_int_16_ap_int_256_21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_scale_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        s_scale_full_n : IN STD_LOGIC;
        s_scale_write : OUT STD_LOGIC;
        scale_buffer1_V_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_0_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_0_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_1_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_1_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_2_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_2_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_3_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_3_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_4_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_4_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_5_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_5_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_6_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_6_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_7_ce0 : OUT STD_LOGIC;
        scale_buffer1_V_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer1_V_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer1_V_7_ce1 : OUT STD_LOGIC;
        scale_buffer1_V_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        mul_ln31_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_empty_n : IN STD_LOGIC;
        mul_ln31_1_loc_read : OUT STD_LOGIC;
        ret_V_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_loc_empty_n : IN STD_LOGIC;
        ret_V_cast_loc_read : OUT STD_LOGIC;
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC );
    end component;


    component top_M2S_repeat_16_16_ap_int_16_ap_int_256_22 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_bias_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        s_bias_full_n : IN STD_LOGIC;
        s_bias_write : OUT STD_LOGIC;
        bias_buffer1_V_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_0_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_0_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_1_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_1_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_2_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_2_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_3_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_3_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_4_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_4_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_5_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_5_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_6_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_6_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_7_ce0 : OUT STD_LOGIC;
        bias_buffer1_V_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer1_V_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer1_V_7_ce1 : OUT STD_LOGIC;
        bias_buffer1_V_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        mul_ln31_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_empty_n : IN STD_LOGIC;
        mul_ln31_1_loc_read : OUT STD_LOGIC;
        ret_V_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_loc_empty_n : IN STD_LOGIC;
        ret_V_cast_loc_read : OUT STD_LOGIC;
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC );
    end component;


    component top_Loop_VITIS_LOOP_38_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ret_V_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ret_V_1_loc_empty_n : IN STD_LOGIC;
        ret_V_1_loc_read : OUT STD_LOGIC;
        k1_buffer_V_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_0_ce0 : OUT STD_LOGIC;
        k1_buffer_V_0_we0 : OUT STD_LOGIC;
        k1_buffer_V_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_1_ce0 : OUT STD_LOGIC;
        k1_buffer_V_1_we0 : OUT STD_LOGIC;
        k1_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_2_ce0 : OUT STD_LOGIC;
        k1_buffer_V_2_we0 : OUT STD_LOGIC;
        k1_buffer_V_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_3_ce0 : OUT STD_LOGIC;
        k1_buffer_V_3_we0 : OUT STD_LOGIC;
        k1_buffer_V_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_4_ce0 : OUT STD_LOGIC;
        k1_buffer_V_4_we0 : OUT STD_LOGIC;
        k1_buffer_V_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_5_ce0 : OUT STD_LOGIC;
        k1_buffer_V_5_we0 : OUT STD_LOGIC;
        k1_buffer_V_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_6_ce0 : OUT STD_LOGIC;
        k1_buffer_V_6_we0 : OUT STD_LOGIC;
        k1_buffer_V_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_7_ce0 : OUT STD_LOGIC;
        k1_buffer_V_7_we0 : OUT STD_LOGIC;
        k1_buffer_V_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_8_ce0 : OUT STD_LOGIC;
        k1_buffer_V_8_we0 : OUT STD_LOGIC;
        k1_buffer_V_8_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_9_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_9_ce0 : OUT STD_LOGIC;
        k1_buffer_V_9_we0 : OUT STD_LOGIC;
        k1_buffer_V_9_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_10_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_10_ce0 : OUT STD_LOGIC;
        k1_buffer_V_10_we0 : OUT STD_LOGIC;
        k1_buffer_V_10_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_11_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_11_ce0 : OUT STD_LOGIC;
        k1_buffer_V_11_we0 : OUT STD_LOGIC;
        k1_buffer_V_11_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_12_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_12_ce0 : OUT STD_LOGIC;
        k1_buffer_V_12_we0 : OUT STD_LOGIC;
        k1_buffer_V_12_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_13_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_13_ce0 : OUT STD_LOGIC;
        k1_buffer_V_13_we0 : OUT STD_LOGIC;
        k1_buffer_V_13_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_14_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_14_ce0 : OUT STD_LOGIC;
        k1_buffer_V_14_we0 : OUT STD_LOGIC;
        k1_buffer_V_14_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_15_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_15_ce0 : OUT STD_LOGIC;
        k1_buffer_V_15_we0 : OUT STD_LOGIC;
        k1_buffer_V_15_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        k0_1_empty_n : IN STD_LOGIC;
        k0_1_read : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ret_V_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ret_V_1_loc_empty_n : IN STD_LOGIC;
        ret_V_1_loc_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component top_M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k1_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        k1_full_n : IN STD_LOGIC;
        k1_write : OUT STD_LOGIC;
        k1_buffer_V_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_0_ce0 : OUT STD_LOGIC;
        k1_buffer_V_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_1_ce0 : OUT STD_LOGIC;
        k1_buffer_V_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_2_ce0 : OUT STD_LOGIC;
        k1_buffer_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_3_ce0 : OUT STD_LOGIC;
        k1_buffer_V_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_4_ce0 : OUT STD_LOGIC;
        k1_buffer_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_5_ce0 : OUT STD_LOGIC;
        k1_buffer_V_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_6_ce0 : OUT STD_LOGIC;
        k1_buffer_V_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_7_ce0 : OUT STD_LOGIC;
        k1_buffer_V_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_8_ce0 : OUT STD_LOGIC;
        k1_buffer_V_8_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_9_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_9_ce0 : OUT STD_LOGIC;
        k1_buffer_V_9_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_10_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_10_ce0 : OUT STD_LOGIC;
        k1_buffer_V_10_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_11_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_11_ce0 : OUT STD_LOGIC;
        k1_buffer_V_11_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_12_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_12_ce0 : OUT STD_LOGIC;
        k1_buffer_V_12_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_13_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_13_ce0 : OUT STD_LOGIC;
        k1_buffer_V_13_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_14_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_14_ce0 : OUT STD_LOGIC;
        k1_buffer_V_14_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k1_buffer_V_15_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k1_buffer_V_15_ce0 : OUT STD_LOGIC;
        k1_buffer_V_15_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln31_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_empty_n : IN STD_LOGIC;
        mul_ln31_1_loc_read : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (23 downto 0);
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC;
        mul_ln31_1_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_out_full_n : IN STD_LOGIC;
        mul_ln31_1_loc_out_write : OUT STD_LOGIC;
        skip1_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out_full_n : IN STD_LOGIC;
        skip1_out_write : OUT STD_LOGIC );
    end component;


    component top_conv1x1_v4_512_512_1024_16_16_24_8_4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fin_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        fin_empty_n : IN STD_LOGIC;
        fin_read : OUT STD_LOGIC;
        s_conv1_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        s_conv1_full_n : IN STD_LOGIC;
        s_conv1_write : OUT STD_LOGIC;
        k1_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        k1_empty_n : IN STD_LOGIC;
        k1_read : OUT STD_LOGIC;
        mul_ln31_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_empty_n : IN STD_LOGIC;
        mul_ln31_1_loc_read : OUT STD_LOGIC;
        IC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        IC_V_loc_empty_n : IN STD_LOGIC;
        IC_V_loc_read : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC;
        mul_ln31_1_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_out_full_n : IN STD_LOGIC;
        mul_ln31_1_loc_out_write : OUT STD_LOGIC;
        OC_V_loc_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_out_full_n : IN STD_LOGIC;
        OC_V_loc_out_write : OUT STD_LOGIC;
        skip1_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip1_out_full_n : IN STD_LOGIC;
        skip1_out_write : OUT STD_LOGIC );
    end component;


    component top_quantize_mul_shift_24_8_16_16_16_16_23 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_conv1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        s_conv1_empty_n : IN STD_LOGIC;
        s_conv1_read : OUT STD_LOGIC;
        f1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        f1_full_n : IN STD_LOGIC;
        f1_write : OUT STD_LOGIC;
        s_scale_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        s_scale_empty_n : IN STD_LOGIC;
        s_scale_read : OUT STD_LOGIC;
        s_bias_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        s_bias_empty_n : IN STD_LOGIC;
        s_bias_read : OUT STD_LOGIC;
        mul_ln31_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln31_1_loc_empty_n : IN STD_LOGIC;
        mul_ln31_1_loc_read : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        skip1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip1_empty_n : IN STD_LOGIC;
        skip1_read : OUT STD_LOGIC;
        relu1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        relu1_empty_n : IN STD_LOGIC;
        relu1_read : OUT STD_LOGIC;
        OC_V_loc_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_out_full_n : IN STD_LOGIC;
        OC_V_loc_out_write : OUT STD_LOGIC );
    end component;


    component top_Loop_VITIS_LOOP_88_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        k3_buffer_V_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_0_ce0 : OUT STD_LOGIC;
        k3_buffer_V_0_we0 : OUT STD_LOGIC;
        k3_buffer_V_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_1_ce0 : OUT STD_LOGIC;
        k3_buffer_V_1_we0 : OUT STD_LOGIC;
        k3_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_2_ce0 : OUT STD_LOGIC;
        k3_buffer_V_2_we0 : OUT STD_LOGIC;
        k3_buffer_V_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_3_ce0 : OUT STD_LOGIC;
        k3_buffer_V_3_we0 : OUT STD_LOGIC;
        k3_buffer_V_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_4_ce0 : OUT STD_LOGIC;
        k3_buffer_V_4_we0 : OUT STD_LOGIC;
        k3_buffer_V_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_5_ce0 : OUT STD_LOGIC;
        k3_buffer_V_5_we0 : OUT STD_LOGIC;
        k3_buffer_V_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_6_ce0 : OUT STD_LOGIC;
        k3_buffer_V_6_we0 : OUT STD_LOGIC;
        k3_buffer_V_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_7_ce0 : OUT STD_LOGIC;
        k3_buffer_V_7_we0 : OUT STD_LOGIC;
        k3_buffer_V_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_8_ce0 : OUT STD_LOGIC;
        k3_buffer_V_8_we0 : OUT STD_LOGIC;
        k3_buffer_V_8_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        k0_3_empty_n : IN STD_LOGIC;
        k0_3_read : OUT STD_LOGIC;
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        D_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        D_V_loc_empty_n : IN STD_LOGIC;
        D_V_loc_read : OUT STD_LOGIC;
        STRIDE_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_empty_n : IN STD_LOGIC;
        STRIDE_2_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        mul_ln93_1_loc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_out_full_n : IN STD_LOGIC;
        mul_ln93_1_loc_out_write : OUT STD_LOGIC;
        mul_ln93_1_loc_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_out1_full_n : IN STD_LOGIC;
        mul_ln93_1_loc_out1_write : OUT STD_LOGIC;
        mul_ln93_1_loc_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_out2_full_n : IN STD_LOGIC;
        mul_ln93_1_loc_out2_write : OUT STD_LOGIC;
        mul_ln93_1_loc_out3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_out3_full_n : IN STD_LOGIC;
        mul_ln93_1_loc_out3_write : OUT STD_LOGIC );
    end component;


    component top_M2S_repeat_16_16_ap_int_16_ap_int_256_24 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_scale_1_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        s_scale_1_full_n : IN STD_LOGIC;
        s_scale_1_write : OUT STD_LOGIC;
        scale_buffer3_V_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_0_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_0_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_1_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_1_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_2_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_2_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_3_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_3_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_4_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_4_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_5_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_5_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_6_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_6_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_7_ce0 : OUT STD_LOGIC;
        scale_buffer3_V_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        scale_buffer3_V_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        scale_buffer3_V_7_ce1 : OUT STD_LOGIC;
        scale_buffer3_V_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        mul_ln93_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_empty_n : IN STD_LOGIC;
        mul_ln93_1_loc_read : OUT STD_LOGIC;
        ret_V_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_loc_empty_n : IN STD_LOGIC;
        ret_V_cast_loc_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC );
    end component;


    component top_M2S_repeat_16_16_ap_int_16_ap_int_256_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_bias_1_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        s_bias_1_full_n : IN STD_LOGIC;
        s_bias_1_write : OUT STD_LOGIC;
        bias_buffer3_V_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_0_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_0_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_1_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_1_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_2_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_2_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_3_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_3_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_4_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_4_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_5_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_5_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_6_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_6_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_7_ce0 : OUT STD_LOGIC;
        bias_buffer3_V_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_buffer3_V_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_buffer3_V_7_ce1 : OUT STD_LOGIC;
        bias_buffer3_V_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        mul_ln93_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_empty_n : IN STD_LOGIC;
        mul_ln93_1_loc_read : OUT STD_LOGIC;
        ret_V_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_loc_empty_n : IN STD_LOGIC;
        ret_V_cast_loc_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC );
    end component;


    component top_M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        k3s_din : OUT STD_LOGIC_VECTOR (575 downto 0);
        k3s_full_n : IN STD_LOGIC;
        k3s_write : OUT STD_LOGIC;
        k3_buffer_V_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_0_ce0 : OUT STD_LOGIC;
        k3_buffer_V_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_0_ce1 : OUT STD_LOGIC;
        k3_buffer_V_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_1_ce0 : OUT STD_LOGIC;
        k3_buffer_V_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_1_ce1 : OUT STD_LOGIC;
        k3_buffer_V_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_2_ce0 : OUT STD_LOGIC;
        k3_buffer_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_2_ce1 : OUT STD_LOGIC;
        k3_buffer_V_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_3_ce0 : OUT STD_LOGIC;
        k3_buffer_V_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_3_ce1 : OUT STD_LOGIC;
        k3_buffer_V_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_4_ce0 : OUT STD_LOGIC;
        k3_buffer_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_4_ce1 : OUT STD_LOGIC;
        k3_buffer_V_4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_5_ce0 : OUT STD_LOGIC;
        k3_buffer_V_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_5_ce1 : OUT STD_LOGIC;
        k3_buffer_V_5_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_6_ce0 : OUT STD_LOGIC;
        k3_buffer_V_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_6_ce1 : OUT STD_LOGIC;
        k3_buffer_V_6_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_7_ce0 : OUT STD_LOGIC;
        k3_buffer_V_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_7_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_7_ce1 : OUT STD_LOGIC;
        k3_buffer_V_7_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_8_ce0 : OUT STD_LOGIC;
        k3_buffer_V_8_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        k3_buffer_V_8_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        k3_buffer_V_8_ce1 : OUT STD_LOGIC;
        k3_buffer_V_8_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln93_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_empty_n : IN STD_LOGIC;
        mul_ln93_1_loc_read : OUT STD_LOGIC;
        ret_V_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        ret_V_cast_loc_empty_n : IN STD_LOGIC;
        ret_V_cast_loc_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC );
    end component;


    component top_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        f1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        f1_empty_n : IN STD_LOGIC;
        f1_read : OUT STD_LOGIC;
        offset_s_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        offset_s_empty_n : IN STD_LOGIC;
        offset_s_read : OUT STD_LOGIC;
        in_layer_din : OUT STD_LOGIC_VECTOR (1151 downto 0);
        in_layer_full_n : IN STD_LOGIC;
        in_layer_write : OUT STD_LOGIC;
        D_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        D_V_loc_empty_n : IN STD_LOGIC;
        D_V_loc_read : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        STRIDE_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_empty_n : IN STD_LOGIC;
        STRIDE_2_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC;
        deform_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        deform_empty_n : IN STD_LOGIC;
        deform_read : OUT STD_LOGIC;
        D_V_loc_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        D_V_loc_out_full_n : IN STD_LOGIC;
        D_V_loc_out_write : OUT STD_LOGIC;
        OC_V_loc_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_out_full_n : IN STD_LOGIC;
        OC_V_loc_out_write : OUT STD_LOGIC;
        batch_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch_out_full_n : IN STD_LOGIC;
        batch_out_write : OUT STD_LOGIC;
        STRIDE_2_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_out_full_n : IN STD_LOGIC;
        STRIDE_2_out_write : OUT STD_LOGIC;
        skip3_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out_full_n : IN STD_LOGIC;
        skip3_out_write : OUT STD_LOGIC );
    end component;


    component top_dw_deform_M_512_1024_16_24_8_4_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_layer_dout : IN STD_LOGIC_VECTOR (1151 downto 0);
        in_layer_empty_n : IN STD_LOGIC;
        in_layer_read : OUT STD_LOGIC;
        s_conv3_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        s_conv3_full_n : IN STD_LOGIC;
        s_conv3_write : OUT STD_LOGIC;
        k3s_dout : IN STD_LOGIC_VECTOR (575 downto 0);
        k3s_empty_n : IN STD_LOGIC;
        k3s_read : OUT STD_LOGIC;
        D_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        D_V_loc_empty_n : IN STD_LOGIC;
        D_V_loc_read : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        STRIDE_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        STRIDE_2_empty_n : IN STD_LOGIC;
        STRIDE_2_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC;
        OC_V_loc_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_out_full_n : IN STD_LOGIC;
        OC_V_loc_out_write : OUT STD_LOGIC;
        skip3_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        skip3_out_full_n : IN STD_LOGIC;
        skip3_out_write : OUT STD_LOGIC );
    end component;


    component top_quantize_mul_shift_24_8_16_16_16_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_conv3_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        s_conv3_empty_n : IN STD_LOGIC;
        s_conv3_read : OUT STD_LOGIC;
        f3_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        f3_full_n : IN STD_LOGIC;
        f3_write : OUT STD_LOGIC;
        s_scale_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        s_scale_1_empty_n : IN STD_LOGIC;
        s_scale_1_read : OUT STD_LOGIC;
        s_bias_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        s_bias_1_empty_n : IN STD_LOGIC;
        s_bias_1_read : OUT STD_LOGIC;
        mul_ln93_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln93_1_loc_empty_n : IN STD_LOGIC;
        mul_ln93_1_loc_read : OUT STD_LOGIC;
        OC_V_loc_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        OC_V_loc_empty_n : IN STD_LOGIC;
        OC_V_loc_read : OUT STD_LOGIC;
        skip3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        skip3_empty_n : IN STD_LOGIC;
        skip3_read : OUT STD_LOGIC;
        relu3_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        relu3_empty_n : IN STD_LOGIC;
        relu3_read : OUT STD_LOGIC );
    end component;


    component top_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        batch_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        batch_empty_n : IN STD_LOGIC;
        batch_read : OUT STD_LOGIC;
        OC_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        OC_empty_n : IN STD_LOGIC;
        OC_read : OUT STD_LOGIC;
        CONV_D_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        CONV_D_loc_empty_n : IN STD_LOGIC;
        CONV_D_loc_read : OUT STD_LOGIC;
        select_ln169_loc_out_din : OUT STD_LOGIC_VECTOR (28 downto 0);
        select_ln169_loc_out_full_n : IN STD_LOGIC;
        select_ln169_loc_out_write : OUT STD_LOGIC );
    end component;


    component top_S2M_16_8_8_ap_int_128_ap_int_128_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_mem_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        s_mem_empty_n : IN STD_LOGIC;
        s_mem_read : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        out_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_empty_n : IN STD_LOGIC;
        out_r_read : OUT STD_LOGIC;
        select_ln169_loc_dout : IN STD_LOGIC_VECTOR (28 downto 0);
        select_ln169_loc_empty_n : IN STD_LOGIC;
        select_ln169_loc_read : OUT STD_LOGIC );
    end component;


    component top_k1_buffer_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component top_k3_buffer_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component top_scale_buffer3_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component top_fifo_w64_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w64_d10_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1_d9_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w29_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (28 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (28 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w128_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w32_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w16_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w16_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w12_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w12_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w256_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1024_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w512_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w32_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w576_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (575 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (575 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w1152_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1151 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1151 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_fifo_w29_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (28 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (28 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_split77_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_split7793_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_split7796_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIqcK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanDatrcU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_quantize_mul_shift_24_8_16_16_16_16_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIsc4 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi1tde IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_start_for_dw_deform_M_512_1024_16_24_8_4_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        fmap : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        k0_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        quant : OUT STD_LOGIC_VECTOR (63 downto 0);
        offsets : OUT STD_LOGIC_VECTOR (63 downto 0);
        D : OUT STD_LOGIC_VECTOR (31 downto 0);
        IC : OUT STD_LOGIC_VECTOR (31 downto 0);
        OC : OUT STD_LOGIC_VECTOR (31 downto 0);
        batch : OUT STD_LOGIC_VECTOR (31 downto 0);
        STRIDE_2 : OUT STD_LOGIC;
        skip3 : OUT STD_LOGIC;
        skip1 : OUT STD_LOGIC;
        deform : OUT STD_LOGIC;
        relu1 : OUT STD_LOGIC;
        relu3 : OUT STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component top_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_gmem3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_gmem4_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component top_gmem5_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    control_s_axi_U : component top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        fmap => fmap,
        out_r => out_r,
        k0_1 => k0_1,
        k0_3 => k0_3,
        quant => quant,
        offsets => offsets,
        D => D,
        IC => IC,
        OC => OC,
        batch => batch,
        STRIDE_2 => STRIDE_2,
        skip3 => skip3,
        skip1 => skip1,
        deform => deform,
        relu1 => relu1,
        relu3 => relu3,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component top_gmem0_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 128,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARADDR,
        I_ARID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARID,
        I_ARLEN => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLEN,
        I_ARSIZE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARSIZE,
        I_ARLOCK => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLOCK,
        I_ARCACHE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARCACHE,
        I_ARQOS => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARQOS,
        I_ARPROT => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARPROT,
        I_ARUSER => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARUSER,
        I_ARBURST => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARBURST,
        I_ARREGION => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARREGION,
        I_RVALID => gmem0_RVALID,
        I_RREADY => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv128_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv16_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    gmem1_m_axi_U : component top_gmem1_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 128,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem1_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWADDR,
        I_AWID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWID,
        I_AWLEN => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLEN,
        I_AWSIZE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWSIZE,
        I_AWLOCK => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLOCK,
        I_AWCACHE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWCACHE,
        I_AWQOS => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWQOS,
        I_AWPROT => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWPROT,
        I_AWUSER => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWUSER,
        I_AWBURST => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWBURST,
        I_AWREGION => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWREGION,
        I_WVALID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WDATA,
        I_WID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WID,
        I_WUSER => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WUSER,
        I_WLAST => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WLAST,
        I_WSTRB => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WSTRB,
        I_BVALID => gmem1_BVALID,
        I_BREADY => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    gmem2_m_axi_U : component top_gmem2_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARVALID,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARADDR,
        I_ARID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARID,
        I_ARLEN => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLEN,
        I_ARSIZE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARSIZE,
        I_ARLOCK => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLOCK,
        I_ARCACHE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARCACHE,
        I_ARQOS => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARQOS,
        I_ARPROT => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARPROT,
        I_ARUSER => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARUSER,
        I_ARBURST => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARBURST,
        I_ARREGION => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARREGION,
        I_RVALID => gmem2_RVALID,
        I_RREADY => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_RREADY,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem2_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => gmem2_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    gmem3_m_axi_U : component top_gmem3_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM3_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem3_AWVALID,
        AWREADY => m_axi_gmem3_AWREADY,
        AWADDR => m_axi_gmem3_AWADDR,
        AWID => m_axi_gmem3_AWID,
        AWLEN => m_axi_gmem3_AWLEN,
        AWSIZE => m_axi_gmem3_AWSIZE,
        AWBURST => m_axi_gmem3_AWBURST,
        AWLOCK => m_axi_gmem3_AWLOCK,
        AWCACHE => m_axi_gmem3_AWCACHE,
        AWPROT => m_axi_gmem3_AWPROT,
        AWQOS => m_axi_gmem3_AWQOS,
        AWREGION => m_axi_gmem3_AWREGION,
        AWUSER => m_axi_gmem3_AWUSER,
        WVALID => m_axi_gmem3_WVALID,
        WREADY => m_axi_gmem3_WREADY,
        WDATA => m_axi_gmem3_WDATA,
        WSTRB => m_axi_gmem3_WSTRB,
        WLAST => m_axi_gmem3_WLAST,
        WID => m_axi_gmem3_WID,
        WUSER => m_axi_gmem3_WUSER,
        ARVALID => m_axi_gmem3_ARVALID,
        ARREADY => m_axi_gmem3_ARREADY,
        ARADDR => m_axi_gmem3_ARADDR,
        ARID => m_axi_gmem3_ARID,
        ARLEN => m_axi_gmem3_ARLEN,
        ARSIZE => m_axi_gmem3_ARSIZE,
        ARBURST => m_axi_gmem3_ARBURST,
        ARLOCK => m_axi_gmem3_ARLOCK,
        ARCACHE => m_axi_gmem3_ARCACHE,
        ARPROT => m_axi_gmem3_ARPROT,
        ARQOS => m_axi_gmem3_ARQOS,
        ARREGION => m_axi_gmem3_ARREGION,
        ARUSER => m_axi_gmem3_ARUSER,
        RVALID => m_axi_gmem3_RVALID,
        RREADY => m_axi_gmem3_RREADY,
        RDATA => m_axi_gmem3_RDATA,
        RLAST => m_axi_gmem3_RLAST,
        RID => m_axi_gmem3_RID,
        RUSER => m_axi_gmem3_RUSER,
        RRESP => m_axi_gmem3_RRESP,
        BVALID => m_axi_gmem3_BVALID,
        BREADY => m_axi_gmem3_BREADY,
        BRESP => m_axi_gmem3_BRESP,
        BID => m_axi_gmem3_BID,
        BUSER => m_axi_gmem3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARVALID,
        I_ARREADY => gmem3_ARREADY,
        I_ARADDR => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARADDR,
        I_ARID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARID,
        I_ARLEN => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLEN,
        I_ARSIZE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARSIZE,
        I_ARLOCK => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLOCK,
        I_ARCACHE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARCACHE,
        I_ARQOS => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARQOS,
        I_ARPROT => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARPROT,
        I_ARUSER => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARUSER,
        I_ARBURST => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARBURST,
        I_ARREGION => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARREGION,
        I_RVALID => gmem3_RVALID,
        I_RREADY => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_RREADY,
        I_RDATA => gmem3_RDATA,
        I_RID => gmem3_RID,
        I_RUSER => gmem3_RUSER,
        I_RRESP => gmem3_RRESP,
        I_RLAST => gmem3_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem3_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem3_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => gmem3_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem3_BRESP,
        I_BID => gmem3_BID,
        I_BUSER => gmem3_BUSER);

    gmem4_m_axi_U : component top_gmem4_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM4_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM4_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM4_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM4_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM4_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM4_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM4_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM4_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM4_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM4_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM4_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem4_AWVALID,
        AWREADY => m_axi_gmem4_AWREADY,
        AWADDR => m_axi_gmem4_AWADDR,
        AWID => m_axi_gmem4_AWID,
        AWLEN => m_axi_gmem4_AWLEN,
        AWSIZE => m_axi_gmem4_AWSIZE,
        AWBURST => m_axi_gmem4_AWBURST,
        AWLOCK => m_axi_gmem4_AWLOCK,
        AWCACHE => m_axi_gmem4_AWCACHE,
        AWPROT => m_axi_gmem4_AWPROT,
        AWQOS => m_axi_gmem4_AWQOS,
        AWREGION => m_axi_gmem4_AWREGION,
        AWUSER => m_axi_gmem4_AWUSER,
        WVALID => m_axi_gmem4_WVALID,
        WREADY => m_axi_gmem4_WREADY,
        WDATA => m_axi_gmem4_WDATA,
        WSTRB => m_axi_gmem4_WSTRB,
        WLAST => m_axi_gmem4_WLAST,
        WID => m_axi_gmem4_WID,
        WUSER => m_axi_gmem4_WUSER,
        ARVALID => m_axi_gmem4_ARVALID,
        ARREADY => m_axi_gmem4_ARREADY,
        ARADDR => m_axi_gmem4_ARADDR,
        ARID => m_axi_gmem4_ARID,
        ARLEN => m_axi_gmem4_ARLEN,
        ARSIZE => m_axi_gmem4_ARSIZE,
        ARBURST => m_axi_gmem4_ARBURST,
        ARLOCK => m_axi_gmem4_ARLOCK,
        ARCACHE => m_axi_gmem4_ARCACHE,
        ARPROT => m_axi_gmem4_ARPROT,
        ARQOS => m_axi_gmem4_ARQOS,
        ARREGION => m_axi_gmem4_ARREGION,
        ARUSER => m_axi_gmem4_ARUSER,
        RVALID => m_axi_gmem4_RVALID,
        RREADY => m_axi_gmem4_RREADY,
        RDATA => m_axi_gmem4_RDATA,
        RLAST => m_axi_gmem4_RLAST,
        RID => m_axi_gmem4_RID,
        RUSER => m_axi_gmem4_RUSER,
        RRESP => m_axi_gmem4_RRESP,
        BVALID => m_axi_gmem4_BVALID,
        BREADY => m_axi_gmem4_BREADY,
        BRESP => m_axi_gmem4_BRESP,
        BID => m_axi_gmem4_BID,
        BUSER => m_axi_gmem4_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARVALID,
        I_ARREADY => gmem4_ARREADY,
        I_ARADDR => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARADDR,
        I_ARID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARID,
        I_ARLEN => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLEN,
        I_ARSIZE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARSIZE,
        I_ARLOCK => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLOCK,
        I_ARCACHE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARCACHE,
        I_ARQOS => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARQOS,
        I_ARPROT => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARPROT,
        I_ARUSER => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARUSER,
        I_ARBURST => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARBURST,
        I_ARREGION => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARREGION,
        I_RVALID => gmem4_RVALID,
        I_RREADY => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_RREADY,
        I_RDATA => gmem4_RDATA,
        I_RID => gmem4_RID,
        I_RUSER => gmem4_RUSER,
        I_RRESP => gmem4_RRESP,
        I_RLAST => gmem4_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem4_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem4_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => gmem4_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem4_BRESP,
        I_BID => gmem4_BID,
        I_BUSER => gmem4_BUSER);

    gmem5_m_axi_U : component top_gmem5_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM5_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM5_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM5_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM5_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM5_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM5_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM5_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM5_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM5_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM5_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM5_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem5_AWVALID,
        AWREADY => m_axi_gmem5_AWREADY,
        AWADDR => m_axi_gmem5_AWADDR,
        AWID => m_axi_gmem5_AWID,
        AWLEN => m_axi_gmem5_AWLEN,
        AWSIZE => m_axi_gmem5_AWSIZE,
        AWBURST => m_axi_gmem5_AWBURST,
        AWLOCK => m_axi_gmem5_AWLOCK,
        AWCACHE => m_axi_gmem5_AWCACHE,
        AWPROT => m_axi_gmem5_AWPROT,
        AWQOS => m_axi_gmem5_AWQOS,
        AWREGION => m_axi_gmem5_AWREGION,
        AWUSER => m_axi_gmem5_AWUSER,
        WVALID => m_axi_gmem5_WVALID,
        WREADY => m_axi_gmem5_WREADY,
        WDATA => m_axi_gmem5_WDATA,
        WSTRB => m_axi_gmem5_WSTRB,
        WLAST => m_axi_gmem5_WLAST,
        WID => m_axi_gmem5_WID,
        WUSER => m_axi_gmem5_WUSER,
        ARVALID => m_axi_gmem5_ARVALID,
        ARREADY => m_axi_gmem5_ARREADY,
        ARADDR => m_axi_gmem5_ARADDR,
        ARID => m_axi_gmem5_ARID,
        ARLEN => m_axi_gmem5_ARLEN,
        ARSIZE => m_axi_gmem5_ARSIZE,
        ARBURST => m_axi_gmem5_ARBURST,
        ARLOCK => m_axi_gmem5_ARLOCK,
        ARCACHE => m_axi_gmem5_ARCACHE,
        ARPROT => m_axi_gmem5_ARPROT,
        ARQOS => m_axi_gmem5_ARQOS,
        ARREGION => m_axi_gmem5_ARREGION,
        ARUSER => m_axi_gmem5_ARUSER,
        RVALID => m_axi_gmem5_RVALID,
        RREADY => m_axi_gmem5_RREADY,
        RDATA => m_axi_gmem5_RDATA,
        RLAST => m_axi_gmem5_RLAST,
        RID => m_axi_gmem5_RID,
        RUSER => m_axi_gmem5_RUSER,
        RRESP => m_axi_gmem5_RRESP,
        BVALID => m_axi_gmem5_BVALID,
        BREADY => m_axi_gmem5_BREADY,
        BRESP => m_axi_gmem5_BRESP,
        BID => m_axi_gmem5_BID,
        BUSER => m_axi_gmem5_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARVALID,
        I_ARREADY => gmem5_ARREADY,
        I_ARADDR => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARADDR,
        I_ARID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARID,
        I_ARLEN => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLEN,
        I_ARSIZE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARSIZE,
        I_ARLOCK => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLOCK,
        I_ARCACHE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARCACHE,
        I_ARQOS => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARQOS,
        I_ARPROT => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARPROT,
        I_ARUSER => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARUSER,
        I_ARBURST => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARBURST,
        I_ARREGION => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARREGION,
        I_RVALID => gmem5_RVALID,
        I_RREADY => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_RREADY,
        I_RDATA => gmem5_RDATA,
        I_RID => gmem5_RID,
        I_RUSER => gmem5_RUSER,
        I_RRESP => gmem5_RRESP,
        I_RLAST => gmem5_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem5_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem5_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => gmem5_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem5_BRESP,
        I_BID => gmem5_BID,
        I_BUSER => gmem5_BUSER);

    k1_buffer_V_0_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_d0,
        i_q0 => k1_buffer_V_0_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_0_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_0,
        t_empty_n => k1_buffer_V_0_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_1_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_d0,
        i_q0 => k1_buffer_V_1_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_1_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_1,
        t_empty_n => k1_buffer_V_1_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_2_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_d0,
        i_q0 => k1_buffer_V_2_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_2_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_2,
        t_empty_n => k1_buffer_V_2_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_3_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_d0,
        i_q0 => k1_buffer_V_3_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_3_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_3,
        t_empty_n => k1_buffer_V_3_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_4_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_d0,
        i_q0 => k1_buffer_V_4_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_4_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_4,
        t_empty_n => k1_buffer_V_4_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_5_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_d0,
        i_q0 => k1_buffer_V_5_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_5_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_5,
        t_empty_n => k1_buffer_V_5_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_6_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_d0,
        i_q0 => k1_buffer_V_6_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_6_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_6,
        t_empty_n => k1_buffer_V_6_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_7_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_d0,
        i_q0 => k1_buffer_V_7_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_7_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_7,
        t_empty_n => k1_buffer_V_7_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_8_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_d0,
        i_q0 => k1_buffer_V_8_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_8_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_8,
        t_empty_n => k1_buffer_V_8_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_9_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_d0,
        i_q0 => k1_buffer_V_9_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_9_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_9,
        t_empty_n => k1_buffer_V_9_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_10_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_d0,
        i_q0 => k1_buffer_V_10_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_10_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_10,
        t_empty_n => k1_buffer_V_10_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_11_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_d0,
        i_q0 => k1_buffer_V_11_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_11_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_11,
        t_empty_n => k1_buffer_V_11_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_12_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_d0,
        i_q0 => k1_buffer_V_12_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_12_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_12,
        t_empty_n => k1_buffer_V_12_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_13_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_d0,
        i_q0 => k1_buffer_V_13_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_13_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_13,
        t_empty_n => k1_buffer_V_13_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_14_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_d0,
        i_q0 => k1_buffer_V_14_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_14_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_14,
        t_empty_n => k1_buffer_V_14_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_buffer_V_15_U : component top_k1_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_address0,
        i_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_ce0,
        i_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_we0,
        i_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_d0,
        i_q0 => k1_buffer_V_15_i_q0,
        t_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_address0,
        t_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k1_buffer_V_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k1_buffer_V_15_i_full_n,
        i_write => ap_channel_done_k1_buffer_V_15,
        t_empty_n => k1_buffer_V_15_t_empty_n,
        t_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k3_buffer_V_0_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_d0,
        i_q0 => k3_buffer_V_0_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_0_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_0_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce1,
        t_q1 => k3_buffer_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_0_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_0,
        t_empty_n => k3_buffer_V_0_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_1_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_d0,
        i_q0 => k3_buffer_V_1_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_1_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_1_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce1,
        t_q1 => k3_buffer_V_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_1_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_1,
        t_empty_n => k3_buffer_V_1_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_2_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_d0,
        i_q0 => k3_buffer_V_2_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_2_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_2_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce1,
        t_q1 => k3_buffer_V_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_2_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_2,
        t_empty_n => k3_buffer_V_2_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_3_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_d0,
        i_q0 => k3_buffer_V_3_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_3_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_3_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce1,
        t_q1 => k3_buffer_V_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_3_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_3,
        t_empty_n => k3_buffer_V_3_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_4_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_d0,
        i_q0 => k3_buffer_V_4_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_4_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_4_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce1,
        t_q1 => k3_buffer_V_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_4_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_4,
        t_empty_n => k3_buffer_V_4_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_5_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_d0,
        i_q0 => k3_buffer_V_5_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_5_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_5_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce1,
        t_q1 => k3_buffer_V_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_5_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_5,
        t_empty_n => k3_buffer_V_5_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_6_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_d0,
        i_q0 => k3_buffer_V_6_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_6_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_6_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce1,
        t_q1 => k3_buffer_V_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_6_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_6,
        t_empty_n => k3_buffer_V_6_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_7_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_d0,
        i_q0 => k3_buffer_V_7_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_7_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_7_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce1,
        t_q1 => k3_buffer_V_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_7_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_7,
        t_empty_n => k3_buffer_V_7_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    k3_buffer_V_8_U : component top_k3_buffer_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_address0,
        i_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_ce0,
        i_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_we0,
        i_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_d0,
        i_q0 => k3_buffer_V_8_i_q0,
        i_address1 => ap_const_lv6_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => k3_buffer_V_8_i_q1,
        t_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address0,
        t_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => k3_buffer_V_8_t_q0,
        t_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address1,
        t_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce1,
        t_q1 => k3_buffer_V_8_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => k3_buffer_V_8_i_full_n,
        i_write => ap_channel_done_k3_buffer_V_8,
        t_empty_n => k3_buffer_V_8_t_empty_n,
        t_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready);

    scale_buffer3_V_0_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale3_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale3_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale3_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale3_d0,
        i_q0 => scale_buffer3_V_0_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_0_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_0_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce1,
        t_q1 => scale_buffer3_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_0_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_0,
        t_empty_n => scale_buffer3_V_0_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_1_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale315_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale315_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale315_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale315_d0,
        i_q0 => scale_buffer3_V_1_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_1_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_1_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce1,
        t_q1 => scale_buffer3_V_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_1_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_1,
        t_empty_n => scale_buffer3_V_1_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_2_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale316_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale316_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale316_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale316_d0,
        i_q0 => scale_buffer3_V_2_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_2_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_2_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce1,
        t_q1 => scale_buffer3_V_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_2_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_2,
        t_empty_n => scale_buffer3_V_2_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_3_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale317_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale317_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale317_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale317_d0,
        i_q0 => scale_buffer3_V_3_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_3_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_3_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce1,
        t_q1 => scale_buffer3_V_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_3_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_3,
        t_empty_n => scale_buffer3_V_3_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_4_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale318_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale318_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale318_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale318_d0,
        i_q0 => scale_buffer3_V_4_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_4_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_4_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce1,
        t_q1 => scale_buffer3_V_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_4_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_4,
        t_empty_n => scale_buffer3_V_4_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_5_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale319_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale319_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale319_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale319_d0,
        i_q0 => scale_buffer3_V_5_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_5_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_5_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce1,
        t_q1 => scale_buffer3_V_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_5_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_5,
        t_empty_n => scale_buffer3_V_5_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_6_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale320_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale320_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale320_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale320_d0,
        i_q0 => scale_buffer3_V_6_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_6_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_6_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce1,
        t_q1 => scale_buffer3_V_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_6_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_6,
        t_empty_n => scale_buffer3_V_6_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    scale_buffer3_V_7_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale321_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale321_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale321_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale321_d0,
        i_q0 => scale_buffer3_V_7_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer3_V_7_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer3_V_7_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce1,
        t_q1 => scale_buffer3_V_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer3_V_7_i_full_n,
        i_write => ap_channel_done_scale_buffer3_V_7,
        t_empty_n => scale_buffer3_V_7_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready);

    bias_buffer3_V_0_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias3_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias3_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias3_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias3_d0,
        i_q0 => bias_buffer3_V_0_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_0_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_0_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce1,
        t_q1 => bias_buffer3_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_0_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_0,
        t_empty_n => bias_buffer3_V_0_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_1_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias322_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias322_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias322_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias322_d0,
        i_q0 => bias_buffer3_V_1_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_1_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_1_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce1,
        t_q1 => bias_buffer3_V_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_1_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_1,
        t_empty_n => bias_buffer3_V_1_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_2_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias323_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias323_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias323_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias323_d0,
        i_q0 => bias_buffer3_V_2_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_2_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_2_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce1,
        t_q1 => bias_buffer3_V_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_2_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_2,
        t_empty_n => bias_buffer3_V_2_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_3_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias324_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias324_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias324_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias324_d0,
        i_q0 => bias_buffer3_V_3_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_3_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_3_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce1,
        t_q1 => bias_buffer3_V_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_3_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_3,
        t_empty_n => bias_buffer3_V_3_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_4_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias325_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias325_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias325_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias325_d0,
        i_q0 => bias_buffer3_V_4_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_4_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_4_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce1,
        t_q1 => bias_buffer3_V_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_4_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_4,
        t_empty_n => bias_buffer3_V_4_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_5_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias326_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias326_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias326_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias326_d0,
        i_q0 => bias_buffer3_V_5_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_5_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_5_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce1,
        t_q1 => bias_buffer3_V_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_5_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_5,
        t_empty_n => bias_buffer3_V_5_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_6_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias327_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias327_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias327_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias327_d0,
        i_q0 => bias_buffer3_V_6_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_6_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_6_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce1,
        t_q1 => bias_buffer3_V_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_6_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_6,
        t_empty_n => bias_buffer3_V_6_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    bias_buffer3_V_7_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias328_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias328_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias328_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias328_d0,
        i_q0 => bias_buffer3_V_7_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer3_V_7_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer3_V_7_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce1,
        t_q1 => bias_buffer3_V_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer3_V_7_i_full_n,
        i_write => ap_channel_done_bias_buffer3_V_7,
        t_empty_n => bias_buffer3_V_7_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready);

    scale_buffer1_V_0_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale1_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale1_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale1_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale1_d0,
        i_q0 => scale_buffer1_V_0_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_0_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_0_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce1,
        t_q1 => scale_buffer1_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_0_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_0,
        t_empty_n => scale_buffer1_V_0_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_1_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale11_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale11_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale11_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale11_d0,
        i_q0 => scale_buffer1_V_1_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_1_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_1_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce1,
        t_q1 => scale_buffer1_V_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_1_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_1,
        t_empty_n => scale_buffer1_V_1_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_2_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale12_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale12_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale12_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale12_d0,
        i_q0 => scale_buffer1_V_2_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_2_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_2_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce1,
        t_q1 => scale_buffer1_V_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_2_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_2,
        t_empty_n => scale_buffer1_V_2_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_3_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale13_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale13_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale13_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale13_d0,
        i_q0 => scale_buffer1_V_3_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_3_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_3_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce1,
        t_q1 => scale_buffer1_V_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_3_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_3,
        t_empty_n => scale_buffer1_V_3_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_4_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale14_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale14_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale14_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale14_d0,
        i_q0 => scale_buffer1_V_4_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_4_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_4_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce1,
        t_q1 => scale_buffer1_V_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_4_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_4,
        t_empty_n => scale_buffer1_V_4_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_5_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale15_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale15_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale15_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale15_d0,
        i_q0 => scale_buffer1_V_5_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_5_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_5_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce1,
        t_q1 => scale_buffer1_V_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_5_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_5,
        t_empty_n => scale_buffer1_V_5_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_6_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale16_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale16_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale16_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale16_d0,
        i_q0 => scale_buffer1_V_6_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_6_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_6_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce1,
        t_q1 => scale_buffer1_V_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_6_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_6,
        t_empty_n => scale_buffer1_V_6_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    scale_buffer1_V_7_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_scale17_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_scale17_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_scale17_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_scale17_d0,
        i_q0 => scale_buffer1_V_7_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => scale_buffer1_V_7_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => scale_buffer1_V_7_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce1,
        t_q1 => scale_buffer1_V_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => scale_buffer1_V_7_i_full_n,
        i_write => ap_channel_done_scale_buffer1_V_7,
        t_empty_n => scale_buffer1_V_7_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready);

    bias_buffer1_V_0_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias1_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias1_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias1_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias1_d0,
        i_q0 => bias_buffer1_V_0_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_0_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_0_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce1,
        t_q1 => bias_buffer1_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_0_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_0,
        t_empty_n => bias_buffer1_V_0_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_1_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias18_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias18_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias18_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias18_d0,
        i_q0 => bias_buffer1_V_1_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_1_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_1_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce1,
        t_q1 => bias_buffer1_V_1_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_1_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_1,
        t_empty_n => bias_buffer1_V_1_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_2_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias19_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias19_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias19_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias19_d0,
        i_q0 => bias_buffer1_V_2_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_2_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_2_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce1,
        t_q1 => bias_buffer1_V_2_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_2_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_2,
        t_empty_n => bias_buffer1_V_2_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_3_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias110_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias110_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias110_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias110_d0,
        i_q0 => bias_buffer1_V_3_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_3_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_3_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce1,
        t_q1 => bias_buffer1_V_3_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_3_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_3,
        t_empty_n => bias_buffer1_V_3_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_4_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias111_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias111_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias111_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias111_d0,
        i_q0 => bias_buffer1_V_4_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_4_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_4_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce1,
        t_q1 => bias_buffer1_V_4_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_4_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_4,
        t_empty_n => bias_buffer1_V_4_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_5_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias112_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias112_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias112_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias112_d0,
        i_q0 => bias_buffer1_V_5_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_5_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_5_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce1,
        t_q1 => bias_buffer1_V_5_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_5_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_5,
        t_empty_n => bias_buffer1_V_5_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_6_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias113_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias113_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias113_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias113_d0,
        i_q0 => bias_buffer1_V_6_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_6_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_6_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce1,
        t_q1 => bias_buffer1_V_6_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_6_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_6,
        t_empty_n => bias_buffer1_V_6_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    bias_buffer1_V_7_U : component top_scale_buffer3_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => PackReadBuffer_ap_int_16_U0_bias114_address0,
        i_ce0 => PackReadBuffer_ap_int_16_U0_bias114_ce0,
        i_we0 => PackReadBuffer_ap_int_16_U0_bias114_we0,
        i_d0 => PackReadBuffer_ap_int_16_U0_bias114_d0,
        i_q0 => bias_buffer1_V_7_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bias_buffer1_V_7_i_q1,
        t_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address0,
        t_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bias_buffer1_V_7_t_q0,
        t_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address1,
        t_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce1,
        t_q1 => bias_buffer1_V_7_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bias_buffer1_V_7_i_full_n,
        i_write => ap_channel_done_bias_buffer1_V_7,
        t_empty_n => bias_buffer1_V_7_t_empty_n,
        t_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready);

    top_entry39_U0 : component top_top_entry39
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => top_entry39_U0_ap_start,
        start_full_n => top_entry39_U0_start_full_n,
        ap_done => top_entry39_U0_ap_done,
        ap_continue => top_entry39_U0_ap_continue,
        ap_idle => top_entry39_U0_ap_idle,
        ap_ready => top_entry39_U0_ap_ready,
        start_out => top_entry39_U0_start_out,
        start_write => top_entry39_U0_start_write,
        fmap => fmap,
        out_r => out_r,
        k0_1 => k0_1,
        k0_3 => k0_3,
        quant => quant,
        offsets => offsets,
        D => D,
        IC => IC,
        OC => OC,
        batch => batch,
        STRIDE_2 => top_entry39_U0_STRIDE_2,
        skip3 => top_entry39_U0_skip3,
        skip1 => top_entry39_U0_skip1,
        deform => top_entry39_U0_deform,
        relu1 => top_entry39_U0_relu1,
        relu3 => top_entry39_U0_relu3,
        fmap_out_din => top_entry39_U0_fmap_out_din,
        fmap_out_full_n => fmap_c_full_n,
        fmap_out_write => top_entry39_U0_fmap_out_write,
        out_out_din => top_entry39_U0_out_out_din,
        out_out_full_n => out_c_full_n,
        out_out_write => top_entry39_U0_out_out_write,
        k0_1_out_din => top_entry39_U0_k0_1_out_din,
        k0_1_out_full_n => k0_1_c_full_n,
        k0_1_out_write => top_entry39_U0_k0_1_out_write,
        k0_3_out_din => top_entry39_U0_k0_3_out_din,
        k0_3_out_full_n => k0_3_c_full_n,
        k0_3_out_write => top_entry39_U0_k0_3_out_write,
        quant_out_din => top_entry39_U0_quant_out_din,
        quant_out_full_n => quant_c_full_n,
        quant_out_write => top_entry39_U0_quant_out_write,
        offsets_out_din => top_entry39_U0_offsets_out_din,
        offsets_out_full_n => offsets_c_full_n,
        offsets_out_write => top_entry39_U0_offsets_out_write,
        D_out_din => top_entry39_U0_D_out_din,
        D_out_full_n => D_c_full_n,
        D_out_write => top_entry39_U0_D_out_write,
        D_out1_din => top_entry39_U0_D_out1_din,
        D_out1_full_n => D_c123_full_n,
        D_out1_write => top_entry39_U0_D_out1_write,
        D_out2_din => top_entry39_U0_D_out2_din,
        D_out2_full_n => D_c124_full_n,
        D_out2_write => top_entry39_U0_D_out2_write,
        IC_out_din => top_entry39_U0_IC_out_din,
        IC_out_full_n => IC_c_full_n,
        IC_out_write => top_entry39_U0_IC_out_write,
        IC_out3_din => top_entry39_U0_IC_out3_din,
        IC_out3_full_n => IC_c125_full_n,
        IC_out3_write => top_entry39_U0_IC_out3_write,
        OC_out_din => top_entry39_U0_OC_out_din,
        OC_out_full_n => OC_c_full_n,
        OC_out_write => top_entry39_U0_OC_out_write,
        OC_out4_din => top_entry39_U0_OC_out4_din,
        OC_out4_full_n => OC_c126_full_n,
        OC_out4_write => top_entry39_U0_OC_out4_write,
        OC_out5_din => top_entry39_U0_OC_out5_din,
        OC_out5_full_n => OC_c127_full_n,
        OC_out5_write => top_entry39_U0_OC_out5_write,
        batch_out_din => top_entry39_U0_batch_out_din,
        batch_out_full_n => batch_c_full_n,
        batch_out_write => top_entry39_U0_batch_out_write,
        batch_out6_din => top_entry39_U0_batch_out6_din,
        batch_out6_full_n => batch_c128_full_n,
        batch_out6_write => top_entry39_U0_batch_out6_write,
        batch_out7_din => top_entry39_U0_batch_out7_din,
        batch_out7_full_n => batch_c129_full_n,
        batch_out7_write => top_entry39_U0_batch_out7_write,
        batch_out8_din => top_entry39_U0_batch_out8_din,
        batch_out8_full_n => batch_c130_full_n,
        batch_out8_write => top_entry39_U0_batch_out8_write,
        STRIDE_2_out_din => top_entry39_U0_STRIDE_2_out_din,
        STRIDE_2_out_full_n => STRIDE_2_c_full_n,
        STRIDE_2_out_write => top_entry39_U0_STRIDE_2_out_write,
        STRIDE_2_out9_din => top_entry39_U0_STRIDE_2_out9_din,
        STRIDE_2_out9_full_n => STRIDE_2_c131_full_n,
        STRIDE_2_out9_write => top_entry39_U0_STRIDE_2_out9_write,
        STRIDE_2_out10_din => top_entry39_U0_STRIDE_2_out10_din,
        STRIDE_2_out10_full_n => STRIDE_2_c132_full_n,
        STRIDE_2_out10_write => top_entry39_U0_STRIDE_2_out10_write,
        skip3_out_din => top_entry39_U0_skip3_out_din,
        skip3_out_full_n => skip3_c_full_n,
        skip3_out_write => top_entry39_U0_skip3_out_write,
        skip3_out11_din => top_entry39_U0_skip3_out11_din,
        skip3_out11_full_n => skip3_c133_full_n,
        skip3_out11_write => top_entry39_U0_skip3_out11_write,
        skip3_out12_din => top_entry39_U0_skip3_out12_din,
        skip3_out12_full_n => skip3_c134_full_n,
        skip3_out12_write => top_entry39_U0_skip3_out12_write,
        skip3_out13_din => top_entry39_U0_skip3_out13_din,
        skip3_out13_full_n => skip3_c135_full_n,
        skip3_out13_write => top_entry39_U0_skip3_out13_write,
        skip3_out14_din => top_entry39_U0_skip3_out14_din,
        skip3_out14_full_n => skip3_c136_full_n,
        skip3_out14_write => top_entry39_U0_skip3_out14_write,
        skip3_out15_din => top_entry39_U0_skip3_out15_din,
        skip3_out15_full_n => skip3_c137_full_n,
        skip3_out15_write => top_entry39_U0_skip3_out15_write,
        skip1_out_din => top_entry39_U0_skip1_out_din,
        skip1_out_full_n => skip1_c_full_n,
        skip1_out_write => top_entry39_U0_skip1_out_write,
        skip1_out16_din => top_entry39_U0_skip1_out16_din,
        skip1_out16_full_n => skip1_c138_full_n,
        skip1_out16_write => top_entry39_U0_skip1_out16_write,
        deform_out_din => top_entry39_U0_deform_out_din,
        deform_out_full_n => deform_c_full_n,
        deform_out_write => top_entry39_U0_deform_out_write,
        deform_out17_din => top_entry39_U0_deform_out17_din,
        deform_out17_full_n => deform_c139_full_n,
        deform_out17_write => top_entry39_U0_deform_out17_write,
        relu1_out_din => top_entry39_U0_relu1_out_din,
        relu1_out_full_n => relu1_c_full_n,
        relu1_out_write => top_entry39_U0_relu1_out_write,
        relu3_out_din => top_entry39_U0_relu3_out_din,
        relu3_out_full_n => relu3_c_full_n,
        relu3_out_write => top_entry39_U0_relu3_out_write);

    Block_split77_proc_U0 : component top_Block_split77_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_split77_proc_U0_ap_start,
        ap_done => Block_split77_proc_U0_ap_done,
        ap_continue => Block_split77_proc_U0_ap_continue,
        ap_idle => Block_split77_proc_U0_ap_idle,
        ap_ready => Block_split77_proc_U0_ap_ready,
        D_dout => D_c_dout,
        D_empty_n => D_c_empty_n,
        D_read => Block_split77_proc_U0_D_read,
        STRIDE_2_dout => STRIDE_2_c_dout,
        STRIDE_2_empty_n => STRIDE_2_c_empty_n,
        STRIDE_2_read => Block_split77_proc_U0_STRIDE_2_read,
        CONV_D_out_out_din => Block_split77_proc_U0_CONV_D_out_out_din,
        CONV_D_out_out_full_n => CONV_D_loc_c_full_n,
        CONV_D_out_out_write => Block_split77_proc_U0_CONV_D_out_out_write,
        CONV_D_out_out1_din => Block_split77_proc_U0_CONV_D_out_out1_din,
        CONV_D_out_out1_full_n => CONV_D_loc_c140_full_n,
        CONV_D_out_out1_write => Block_split77_proc_U0_CONV_D_out_out1_write);

    M2S_addr_ap_uint_8_ap_uint_8_U0 : component top_M2S_addr_ap_uint_8_ap_uint_8_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_addr_ap_uint_8_ap_uint_8_U0_ap_start,
        ap_done => M2S_addr_ap_uint_8_ap_uint_8_U0_ap_done,
        ap_continue => M2S_addr_ap_uint_8_ap_uint_8_U0_ap_continue,
        ap_idle => M2S_addr_ap_uint_8_ap_uint_8_U0_ap_idle,
        ap_ready => M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready,
        m_axi_gmem5_AWVALID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWVALID,
        m_axi_gmem5_AWREADY => ap_const_logic_0,
        m_axi_gmem5_AWADDR => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWADDR,
        m_axi_gmem5_AWID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWID,
        m_axi_gmem5_AWLEN => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWLEN,
        m_axi_gmem5_AWSIZE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWSIZE,
        m_axi_gmem5_AWBURST => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWBURST,
        m_axi_gmem5_AWLOCK => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWLOCK,
        m_axi_gmem5_AWCACHE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWCACHE,
        m_axi_gmem5_AWPROT => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWPROT,
        m_axi_gmem5_AWQOS => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWQOS,
        m_axi_gmem5_AWREGION => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWREGION,
        m_axi_gmem5_AWUSER => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_AWUSER,
        m_axi_gmem5_WVALID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WVALID,
        m_axi_gmem5_WREADY => ap_const_logic_0,
        m_axi_gmem5_WDATA => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WDATA,
        m_axi_gmem5_WSTRB => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WSTRB,
        m_axi_gmem5_WLAST => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WLAST,
        m_axi_gmem5_WID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WID,
        m_axi_gmem5_WUSER => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_WUSER,
        m_axi_gmem5_ARVALID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARVALID,
        m_axi_gmem5_ARREADY => gmem5_ARREADY,
        m_axi_gmem5_ARADDR => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARADDR,
        m_axi_gmem5_ARID => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARID,
        m_axi_gmem5_ARLEN => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLEN,
        m_axi_gmem5_ARSIZE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARSIZE,
        m_axi_gmem5_ARBURST => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARBURST,
        m_axi_gmem5_ARLOCK => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARLOCK,
        m_axi_gmem5_ARCACHE => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARCACHE,
        m_axi_gmem5_ARPROT => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARPROT,
        m_axi_gmem5_ARQOS => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARQOS,
        m_axi_gmem5_ARREGION => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARREGION,
        m_axi_gmem5_ARUSER => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_ARUSER,
        m_axi_gmem5_RVALID => gmem5_RVALID,
        m_axi_gmem5_RREADY => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_RREADY,
        m_axi_gmem5_RDATA => gmem5_RDATA,
        m_axi_gmem5_RLAST => gmem5_RLAST,
        m_axi_gmem5_RID => gmem5_RID,
        m_axi_gmem5_RUSER => gmem5_RUSER,
        m_axi_gmem5_RRESP => gmem5_RRESP,
        m_axi_gmem5_BVALID => ap_const_logic_0,
        m_axi_gmem5_BREADY => M2S_addr_ap_uint_8_ap_uint_8_U0_m_axi_gmem5_BREADY,
        m_axi_gmem5_BRESP => ap_const_lv2_0,
        m_axi_gmem5_BID => ap_const_lv1_0,
        m_axi_gmem5_BUSER => ap_const_lv1_0,
        s_mem_din => M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_din,
        s_mem_full_n => offset_s_full_n,
        s_mem_write => M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_write,
        offsets_dout => offsets_c_dout,
        offsets_empty_n => offsets_c_empty_n,
        offsets_read => M2S_addr_ap_uint_8_ap_uint_8_U0_offsets_read,
        batch_dout => batch_c_dout,
        batch_empty_n => batch_c_empty_n,
        batch_read => M2S_addr_ap_uint_8_ap_uint_8_U0_batch_read,
        CONV_D_loc_dout => CONV_D_loc_c_dout,
        CONV_D_loc_empty_n => CONV_D_loc_c_empty_n,
        CONV_D_loc_read => M2S_addr_ap_uint_8_ap_uint_8_U0_CONV_D_loc_read,
        deform_dout => deform_c_dout,
        deform_empty_n => deform_c_empty_n,
        deform_read => M2S_addr_ap_uint_8_ap_uint_8_U0_deform_read,
        skip3_dout => skip3_c_dout,
        skip3_empty_n => skip3_c_empty_n,
        skip3_read => M2S_addr_ap_uint_8_ap_uint_8_U0_skip3_read);

    Block_split7793_proc_U0 : component top_Block_split7793_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_split7793_proc_U0_ap_start,
        ap_done => Block_split7793_proc_U0_ap_done,
        ap_continue => Block_split7793_proc_U0_ap_continue,
        ap_idle => Block_split7793_proc_U0_ap_idle,
        ap_ready => Block_split7793_proc_U0_ap_ready,
        D_dout => D_c123_dout,
        D_empty_n => D_c123_empty_n,
        D_read => Block_split7793_proc_U0_D_read,
        IC_dout => IC_c_dout,
        IC_empty_n => IC_c_empty_n,
        IC_read => Block_split7793_proc_U0_IC_read,
        batch_dout => batch_c128_dout,
        batch_empty_n => batch_c128_empty_n,
        batch_read => Block_split7793_proc_U0_batch_read,
        ap_return => Block_split7793_proc_U0_ap_return);

    M2S_16_8_8_ap_int_128_ap_int_128_U0 : component top_M2S_16_8_8_ap_int_128_ap_int_128_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_start,
        start_full_n => start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_full_n,
        ap_done => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_done,
        ap_continue => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_continue,
        ap_idle => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_idle,
        ap_ready => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready,
        start_out => M2S_16_8_8_ap_int_128_ap_int_128_U0_start_out,
        start_write => M2S_16_8_8_ap_int_128_ap_int_128_U0_start_write,
        m_axi_gmem0_AWVALID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => gmem0_RLAST,
        m_axi_gmem0_RID => gmem0_RID,
        m_axi_gmem0_RUSER => gmem0_RUSER,
        m_axi_gmem0_RRESP => gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => M2S_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        s_mem_din => M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_din,
        s_mem_full_n => fin_full_n,
        s_mem_write => M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_write,
        fmap_dout => fmap_c_dout,
        fmap_empty_n => fmap_c_empty_n,
        fmap_read => M2S_16_8_8_ap_int_128_ap_int_128_U0_fmap_read,
        REP => select_ln160_loc_channel_dout);

    PackReadBuffer_ap_int_16_U0 : component top_PackReadBuffer_ap_int_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PackReadBuffer_ap_int_16_U0_ap_start,
        ap_done => PackReadBuffer_ap_int_16_U0_ap_done,
        ap_continue => PackReadBuffer_ap_int_16_U0_ap_continue,
        ap_idle => PackReadBuffer_ap_int_16_U0_ap_idle,
        ap_ready => PackReadBuffer_ap_int_16_U0_ap_ready,
        m_axi_gmem4_AWVALID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY => ap_const_logic_0,
        m_axi_gmem4_AWADDR => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY => ap_const_logic_0,
        m_axi_gmem4_WDATA => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WLAST,
        m_axi_gmem4_WID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WID,
        m_axi_gmem4_WUSER => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY => gmem4_ARREADY,
        m_axi_gmem4_ARADDR => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID => gmem4_RVALID,
        m_axi_gmem4_RREADY => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA => gmem4_RDATA,
        m_axi_gmem4_RLAST => gmem4_RLAST,
        m_axi_gmem4_RID => gmem4_RID,
        m_axi_gmem4_RUSER => gmem4_RUSER,
        m_axi_gmem4_RRESP => gmem4_RRESP,
        m_axi_gmem4_BVALID => ap_const_logic_0,
        m_axi_gmem4_BREADY => PackReadBuffer_ap_int_16_U0_m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP => ap_const_lv2_0,
        m_axi_gmem4_BID => ap_const_lv1_0,
        m_axi_gmem4_BUSER => ap_const_lv1_0,
        mem_dout => quant_c_dout,
        mem_empty_n => quant_c_empty_n,
        mem_read => PackReadBuffer_ap_int_16_U0_mem_read,
        scale1_address0 => PackReadBuffer_ap_int_16_U0_scale1_address0,
        scale1_ce0 => PackReadBuffer_ap_int_16_U0_scale1_ce0,
        scale1_we0 => PackReadBuffer_ap_int_16_U0_scale1_we0,
        scale1_d0 => PackReadBuffer_ap_int_16_U0_scale1_d0,
        scale11_address0 => PackReadBuffer_ap_int_16_U0_scale11_address0,
        scale11_ce0 => PackReadBuffer_ap_int_16_U0_scale11_ce0,
        scale11_we0 => PackReadBuffer_ap_int_16_U0_scale11_we0,
        scale11_d0 => PackReadBuffer_ap_int_16_U0_scale11_d0,
        scale12_address0 => PackReadBuffer_ap_int_16_U0_scale12_address0,
        scale12_ce0 => PackReadBuffer_ap_int_16_U0_scale12_ce0,
        scale12_we0 => PackReadBuffer_ap_int_16_U0_scale12_we0,
        scale12_d0 => PackReadBuffer_ap_int_16_U0_scale12_d0,
        scale13_address0 => PackReadBuffer_ap_int_16_U0_scale13_address0,
        scale13_ce0 => PackReadBuffer_ap_int_16_U0_scale13_ce0,
        scale13_we0 => PackReadBuffer_ap_int_16_U0_scale13_we0,
        scale13_d0 => PackReadBuffer_ap_int_16_U0_scale13_d0,
        scale14_address0 => PackReadBuffer_ap_int_16_U0_scale14_address0,
        scale14_ce0 => PackReadBuffer_ap_int_16_U0_scale14_ce0,
        scale14_we0 => PackReadBuffer_ap_int_16_U0_scale14_we0,
        scale14_d0 => PackReadBuffer_ap_int_16_U0_scale14_d0,
        scale15_address0 => PackReadBuffer_ap_int_16_U0_scale15_address0,
        scale15_ce0 => PackReadBuffer_ap_int_16_U0_scale15_ce0,
        scale15_we0 => PackReadBuffer_ap_int_16_U0_scale15_we0,
        scale15_d0 => PackReadBuffer_ap_int_16_U0_scale15_d0,
        scale16_address0 => PackReadBuffer_ap_int_16_U0_scale16_address0,
        scale16_ce0 => PackReadBuffer_ap_int_16_U0_scale16_ce0,
        scale16_we0 => PackReadBuffer_ap_int_16_U0_scale16_we0,
        scale16_d0 => PackReadBuffer_ap_int_16_U0_scale16_d0,
        scale17_address0 => PackReadBuffer_ap_int_16_U0_scale17_address0,
        scale17_ce0 => PackReadBuffer_ap_int_16_U0_scale17_ce0,
        scale17_we0 => PackReadBuffer_ap_int_16_U0_scale17_we0,
        scale17_d0 => PackReadBuffer_ap_int_16_U0_scale17_d0,
        bias1_address0 => PackReadBuffer_ap_int_16_U0_bias1_address0,
        bias1_ce0 => PackReadBuffer_ap_int_16_U0_bias1_ce0,
        bias1_we0 => PackReadBuffer_ap_int_16_U0_bias1_we0,
        bias1_d0 => PackReadBuffer_ap_int_16_U0_bias1_d0,
        bias18_address0 => PackReadBuffer_ap_int_16_U0_bias18_address0,
        bias18_ce0 => PackReadBuffer_ap_int_16_U0_bias18_ce0,
        bias18_we0 => PackReadBuffer_ap_int_16_U0_bias18_we0,
        bias18_d0 => PackReadBuffer_ap_int_16_U0_bias18_d0,
        bias19_address0 => PackReadBuffer_ap_int_16_U0_bias19_address0,
        bias19_ce0 => PackReadBuffer_ap_int_16_U0_bias19_ce0,
        bias19_we0 => PackReadBuffer_ap_int_16_U0_bias19_we0,
        bias19_d0 => PackReadBuffer_ap_int_16_U0_bias19_d0,
        bias110_address0 => PackReadBuffer_ap_int_16_U0_bias110_address0,
        bias110_ce0 => PackReadBuffer_ap_int_16_U0_bias110_ce0,
        bias110_we0 => PackReadBuffer_ap_int_16_U0_bias110_we0,
        bias110_d0 => PackReadBuffer_ap_int_16_U0_bias110_d0,
        bias111_address0 => PackReadBuffer_ap_int_16_U0_bias111_address0,
        bias111_ce0 => PackReadBuffer_ap_int_16_U0_bias111_ce0,
        bias111_we0 => PackReadBuffer_ap_int_16_U0_bias111_we0,
        bias111_d0 => PackReadBuffer_ap_int_16_U0_bias111_d0,
        bias112_address0 => PackReadBuffer_ap_int_16_U0_bias112_address0,
        bias112_ce0 => PackReadBuffer_ap_int_16_U0_bias112_ce0,
        bias112_we0 => PackReadBuffer_ap_int_16_U0_bias112_we0,
        bias112_d0 => PackReadBuffer_ap_int_16_U0_bias112_d0,
        bias113_address0 => PackReadBuffer_ap_int_16_U0_bias113_address0,
        bias113_ce0 => PackReadBuffer_ap_int_16_U0_bias113_ce0,
        bias113_we0 => PackReadBuffer_ap_int_16_U0_bias113_we0,
        bias113_d0 => PackReadBuffer_ap_int_16_U0_bias113_d0,
        bias114_address0 => PackReadBuffer_ap_int_16_U0_bias114_address0,
        bias114_ce0 => PackReadBuffer_ap_int_16_U0_bias114_ce0,
        bias114_we0 => PackReadBuffer_ap_int_16_U0_bias114_we0,
        bias114_d0 => PackReadBuffer_ap_int_16_U0_bias114_d0,
        scale3_address0 => PackReadBuffer_ap_int_16_U0_scale3_address0,
        scale3_ce0 => PackReadBuffer_ap_int_16_U0_scale3_ce0,
        scale3_we0 => PackReadBuffer_ap_int_16_U0_scale3_we0,
        scale3_d0 => PackReadBuffer_ap_int_16_U0_scale3_d0,
        scale315_address0 => PackReadBuffer_ap_int_16_U0_scale315_address0,
        scale315_ce0 => PackReadBuffer_ap_int_16_U0_scale315_ce0,
        scale315_we0 => PackReadBuffer_ap_int_16_U0_scale315_we0,
        scale315_d0 => PackReadBuffer_ap_int_16_U0_scale315_d0,
        scale316_address0 => PackReadBuffer_ap_int_16_U0_scale316_address0,
        scale316_ce0 => PackReadBuffer_ap_int_16_U0_scale316_ce0,
        scale316_we0 => PackReadBuffer_ap_int_16_U0_scale316_we0,
        scale316_d0 => PackReadBuffer_ap_int_16_U0_scale316_d0,
        scale317_address0 => PackReadBuffer_ap_int_16_U0_scale317_address0,
        scale317_ce0 => PackReadBuffer_ap_int_16_U0_scale317_ce0,
        scale317_we0 => PackReadBuffer_ap_int_16_U0_scale317_we0,
        scale317_d0 => PackReadBuffer_ap_int_16_U0_scale317_d0,
        scale318_address0 => PackReadBuffer_ap_int_16_U0_scale318_address0,
        scale318_ce0 => PackReadBuffer_ap_int_16_U0_scale318_ce0,
        scale318_we0 => PackReadBuffer_ap_int_16_U0_scale318_we0,
        scale318_d0 => PackReadBuffer_ap_int_16_U0_scale318_d0,
        scale319_address0 => PackReadBuffer_ap_int_16_U0_scale319_address0,
        scale319_ce0 => PackReadBuffer_ap_int_16_U0_scale319_ce0,
        scale319_we0 => PackReadBuffer_ap_int_16_U0_scale319_we0,
        scale319_d0 => PackReadBuffer_ap_int_16_U0_scale319_d0,
        scale320_address0 => PackReadBuffer_ap_int_16_U0_scale320_address0,
        scale320_ce0 => PackReadBuffer_ap_int_16_U0_scale320_ce0,
        scale320_we0 => PackReadBuffer_ap_int_16_U0_scale320_we0,
        scale320_d0 => PackReadBuffer_ap_int_16_U0_scale320_d0,
        scale321_address0 => PackReadBuffer_ap_int_16_U0_scale321_address0,
        scale321_ce0 => PackReadBuffer_ap_int_16_U0_scale321_ce0,
        scale321_we0 => PackReadBuffer_ap_int_16_U0_scale321_we0,
        scale321_d0 => PackReadBuffer_ap_int_16_U0_scale321_d0,
        bias3_address0 => PackReadBuffer_ap_int_16_U0_bias3_address0,
        bias3_ce0 => PackReadBuffer_ap_int_16_U0_bias3_ce0,
        bias3_we0 => PackReadBuffer_ap_int_16_U0_bias3_we0,
        bias3_d0 => PackReadBuffer_ap_int_16_U0_bias3_d0,
        bias322_address0 => PackReadBuffer_ap_int_16_U0_bias322_address0,
        bias322_ce0 => PackReadBuffer_ap_int_16_U0_bias322_ce0,
        bias322_we0 => PackReadBuffer_ap_int_16_U0_bias322_we0,
        bias322_d0 => PackReadBuffer_ap_int_16_U0_bias322_d0,
        bias323_address0 => PackReadBuffer_ap_int_16_U0_bias323_address0,
        bias323_ce0 => PackReadBuffer_ap_int_16_U0_bias323_ce0,
        bias323_we0 => PackReadBuffer_ap_int_16_U0_bias323_we0,
        bias323_d0 => PackReadBuffer_ap_int_16_U0_bias323_d0,
        bias324_address0 => PackReadBuffer_ap_int_16_U0_bias324_address0,
        bias324_ce0 => PackReadBuffer_ap_int_16_U0_bias324_ce0,
        bias324_we0 => PackReadBuffer_ap_int_16_U0_bias324_we0,
        bias324_d0 => PackReadBuffer_ap_int_16_U0_bias324_d0,
        bias325_address0 => PackReadBuffer_ap_int_16_U0_bias325_address0,
        bias325_ce0 => PackReadBuffer_ap_int_16_U0_bias325_ce0,
        bias325_we0 => PackReadBuffer_ap_int_16_U0_bias325_we0,
        bias325_d0 => PackReadBuffer_ap_int_16_U0_bias325_d0,
        bias326_address0 => PackReadBuffer_ap_int_16_U0_bias326_address0,
        bias326_ce0 => PackReadBuffer_ap_int_16_U0_bias326_ce0,
        bias326_we0 => PackReadBuffer_ap_int_16_U0_bias326_we0,
        bias326_d0 => PackReadBuffer_ap_int_16_U0_bias326_d0,
        bias327_address0 => PackReadBuffer_ap_int_16_U0_bias327_address0,
        bias327_ce0 => PackReadBuffer_ap_int_16_U0_bias327_ce0,
        bias327_we0 => PackReadBuffer_ap_int_16_U0_bias327_we0,
        bias327_d0 => PackReadBuffer_ap_int_16_U0_bias327_d0,
        bias328_address0 => PackReadBuffer_ap_int_16_U0_bias328_address0,
        bias328_ce0 => PackReadBuffer_ap_int_16_U0_bias328_ce0,
        bias328_we0 => PackReadBuffer_ap_int_16_U0_bias328_we0,
        bias328_d0 => PackReadBuffer_ap_int_16_U0_bias328_d0,
        OC_dout => OC_c_dout,
        OC_empty_n => OC_c_empty_n,
        OC_read => PackReadBuffer_ap_int_16_U0_OC_read,
        skip3_dout => skip3_c133_dout,
        skip3_empty_n => skip3_c133_empty_n,
        skip3_read => PackReadBuffer_ap_int_16_U0_skip3_read,
        skip1_dout => skip1_c_dout,
        skip1_empty_n => skip1_c_empty_n,
        skip1_read => PackReadBuffer_ap_int_16_U0_skip1_read,
        skip1_out_din => PackReadBuffer_ap_int_16_U0_skip1_out_din,
        skip1_out_full_n => skip1_c141_full_n,
        skip1_out_write => PackReadBuffer_ap_int_16_U0_skip1_out_write,
        skip1_out1_din => PackReadBuffer_ap_int_16_U0_skip1_out1_din,
        skip1_out1_full_n => skip1_c142_full_n,
        skip1_out1_write => PackReadBuffer_ap_int_16_U0_skip1_out1_write);

    Block_split7796_proc_U0 : component top_Block_split7796_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_split7796_proc_U0_ap_start,
        start_full_n => start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_full_n,
        ap_done => Block_split7796_proc_U0_ap_done,
        ap_continue => Block_split7796_proc_U0_ap_continue,
        ap_idle => Block_split7796_proc_U0_ap_idle,
        ap_ready => Block_split7796_proc_U0_ap_ready,
        start_out => Block_split7796_proc_U0_start_out,
        start_write => Block_split7796_proc_U0_start_write,
        D_dout => D_c124_dout,
        D_empty_n => D_c124_empty_n,
        D_read => Block_split7796_proc_U0_D_read,
        IC_dout => IC_c125_dout,
        IC_empty_n => IC_c125_empty_n,
        IC_read => Block_split7796_proc_U0_IC_read,
        OC_dout => OC_c126_dout,
        OC_empty_n => OC_c126_empty_n,
        OC_read => Block_split7796_proc_U0_OC_read,
        batch_dout => batch_c129_dout,
        batch_empty_n => batch_c129_empty_n,
        batch_read => Block_split7796_proc_U0_batch_read,
        batch_out_din => Block_split7796_proc_U0_batch_out_din,
        batch_out_full_n => batch_c143_full_n,
        batch_out_write => Block_split7796_proc_U0_batch_out_write,
        batch_out1_din => Block_split7796_proc_U0_batch_out1_din,
        batch_out1_full_n => batch_c144_full_n,
        batch_out1_write => Block_split7796_proc_U0_batch_out1_write,
        D_V_out_out_din => Block_split7796_proc_U0_D_V_out_out_din,
        D_V_out_out_full_n => D_V_loc_c_full_n,
        D_V_out_out_write => Block_split7796_proc_U0_D_V_out_out_write,
        D_V_out_out2_din => Block_split7796_proc_U0_D_V_out_out2_din,
        D_V_out_out2_full_n => D_V_loc_c145_full_n,
        D_V_out_out2_write => Block_split7796_proc_U0_D_V_out_out2_write,
        IC_V_out_out_din => Block_split7796_proc_U0_IC_V_out_out_din,
        IC_V_out_out_full_n => IC_V_loc_c_full_n,
        IC_V_out_out_write => Block_split7796_proc_U0_IC_V_out_out_write,
        OC_V_out_out_din => Block_split7796_proc_U0_OC_V_out_out_din,
        OC_V_out_out_full_n => OC_V_loc_c_full_n,
        OC_V_out_out_write => Block_split7796_proc_U0_OC_V_out_out_write,
        OC_V_out_out3_din => Block_split7796_proc_U0_OC_V_out_out3_din,
        OC_V_out_out3_full_n => OC_V_loc_c146_full_n,
        OC_V_out_out3_write => Block_split7796_proc_U0_OC_V_out_out3_write,
        ret_V_1_out_out_din => Block_split7796_proc_U0_ret_V_1_out_out_din,
        ret_V_1_out_out_full_n => ret_V_1_loc_c_full_n,
        ret_V_1_out_out_write => Block_split7796_proc_U0_ret_V_1_out_out_write,
        ret_V_1_out_out4_din => Block_split7796_proc_U0_ret_V_1_out_out4_din,
        ret_V_1_out_out4_full_n => ret_V_1_loc_c147_full_n,
        ret_V_1_out_out4_write => Block_split7796_proc_U0_ret_V_1_out_out4_write,
        mul_ln31_1_out_out_din => Block_split7796_proc_U0_mul_ln31_1_out_out_din,
        mul_ln31_1_out_out_full_n => mul_ln31_1_loc_c_full_n,
        mul_ln31_1_out_out_write => Block_split7796_proc_U0_mul_ln31_1_out_out_write,
        mul_ln31_1_out_out5_din => Block_split7796_proc_U0_mul_ln31_1_out_out5_din,
        mul_ln31_1_out_out5_full_n => mul_ln31_1_loc_c148_full_n,
        mul_ln31_1_out_out5_write => Block_split7796_proc_U0_mul_ln31_1_out_out5_write,
        mul_ln31_1_out_out6_din => Block_split7796_proc_U0_mul_ln31_1_out_out6_din,
        mul_ln31_1_out_out6_full_n => mul_ln31_1_loc_c149_full_n,
        mul_ln31_1_out_out6_write => Block_split7796_proc_U0_mul_ln31_1_out_out6_write,
        ret_V_cast_out_out_din => Block_split7796_proc_U0_ret_V_cast_out_out_din,
        ret_V_cast_out_out_full_n => ret_V_cast_loc_c_full_n,
        ret_V_cast_out_out_write => Block_split7796_proc_U0_ret_V_cast_out_out_write,
        ret_V_cast_out_out7_din => Block_split7796_proc_U0_ret_V_cast_out_out7_din,
        ret_V_cast_out_out7_full_n => ret_V_cast_loc_c150_full_n,
        ret_V_cast_out_out7_write => Block_split7796_proc_U0_ret_V_cast_out_out7_write,
        ret_V_cast_out_out8_din => Block_split7796_proc_U0_ret_V_cast_out_out8_din,
        ret_V_cast_out_out8_full_n => ret_V_cast_loc_c151_full_n,
        ret_V_cast_out_out8_write => Block_split7796_proc_U0_ret_V_cast_out_out8_write,
        ret_V_cast_out_out9_din => Block_split7796_proc_U0_ret_V_cast_out_out9_din,
        ret_V_cast_out_out9_full_n => ret_V_cast_loc_c152_full_n,
        ret_V_cast_out_out9_write => Block_split7796_proc_U0_ret_V_cast_out_out9_write,
        ret_V_cast_out_out10_din => Block_split7796_proc_U0_ret_V_cast_out_out10_din,
        ret_V_cast_out_out10_full_n => ret_V_cast_loc_c153_full_n,
        ret_V_cast_out_out10_write => Block_split7796_proc_U0_ret_V_cast_out_out10_write);

    M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0 : component top_M2S_repeat_16_16_ap_int_16_ap_int_256_21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_start,
        ap_done => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_done,
        ap_continue => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_continue,
        ap_idle => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_idle,
        ap_ready => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_ready,
        s_scale_din => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_din,
        s_scale_full_n => s_scale_full_n,
        s_scale_write => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_write,
        scale_buffer1_V_0_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address0,
        scale_buffer1_V_0_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce0,
        scale_buffer1_V_0_q0 => scale_buffer1_V_0_t_q0,
        scale_buffer1_V_0_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_address1,
        scale_buffer1_V_0_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_0_ce1,
        scale_buffer1_V_0_q1 => scale_buffer1_V_0_t_q1,
        scale_buffer1_V_1_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address0,
        scale_buffer1_V_1_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce0,
        scale_buffer1_V_1_q0 => scale_buffer1_V_1_t_q0,
        scale_buffer1_V_1_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_address1,
        scale_buffer1_V_1_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_1_ce1,
        scale_buffer1_V_1_q1 => scale_buffer1_V_1_t_q1,
        scale_buffer1_V_2_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address0,
        scale_buffer1_V_2_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce0,
        scale_buffer1_V_2_q0 => scale_buffer1_V_2_t_q0,
        scale_buffer1_V_2_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_address1,
        scale_buffer1_V_2_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_2_ce1,
        scale_buffer1_V_2_q1 => scale_buffer1_V_2_t_q1,
        scale_buffer1_V_3_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address0,
        scale_buffer1_V_3_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce0,
        scale_buffer1_V_3_q0 => scale_buffer1_V_3_t_q0,
        scale_buffer1_V_3_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_address1,
        scale_buffer1_V_3_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_3_ce1,
        scale_buffer1_V_3_q1 => scale_buffer1_V_3_t_q1,
        scale_buffer1_V_4_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address0,
        scale_buffer1_V_4_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce0,
        scale_buffer1_V_4_q0 => scale_buffer1_V_4_t_q0,
        scale_buffer1_V_4_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_address1,
        scale_buffer1_V_4_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_4_ce1,
        scale_buffer1_V_4_q1 => scale_buffer1_V_4_t_q1,
        scale_buffer1_V_5_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address0,
        scale_buffer1_V_5_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce0,
        scale_buffer1_V_5_q0 => scale_buffer1_V_5_t_q0,
        scale_buffer1_V_5_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_address1,
        scale_buffer1_V_5_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_5_ce1,
        scale_buffer1_V_5_q1 => scale_buffer1_V_5_t_q1,
        scale_buffer1_V_6_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address0,
        scale_buffer1_V_6_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce0,
        scale_buffer1_V_6_q0 => scale_buffer1_V_6_t_q0,
        scale_buffer1_V_6_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_address1,
        scale_buffer1_V_6_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_6_ce1,
        scale_buffer1_V_6_q1 => scale_buffer1_V_6_t_q1,
        scale_buffer1_V_7_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address0,
        scale_buffer1_V_7_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce0,
        scale_buffer1_V_7_q0 => scale_buffer1_V_7_t_q0,
        scale_buffer1_V_7_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_address1,
        scale_buffer1_V_7_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_scale_buffer1_V_7_ce1,
        scale_buffer1_V_7_q1 => scale_buffer1_V_7_t_q1,
        mul_ln31_1_loc_dout => mul_ln31_1_loc_c_dout,
        mul_ln31_1_loc_empty_n => mul_ln31_1_loc_c_empty_n,
        mul_ln31_1_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_mul_ln31_1_loc_read,
        ret_V_cast_loc_dout => ret_V_cast_loc_c_dout,
        ret_V_cast_loc_empty_n => ret_V_cast_loc_c_empty_n,
        ret_V_cast_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ret_V_cast_loc_read,
        skip1_dout => skip1_c141_dout,
        skip1_empty_n => skip1_c141_empty_n,
        skip1_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_skip1_read);

    M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0 : component top_M2S_repeat_16_16_ap_int_16_ap_int_256_22
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_start,
        ap_done => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_done,
        ap_continue => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_continue,
        ap_idle => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_idle,
        ap_ready => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_ready,
        s_bias_din => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_din,
        s_bias_full_n => s_bias_full_n,
        s_bias_write => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_write,
        bias_buffer1_V_0_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address0,
        bias_buffer1_V_0_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce0,
        bias_buffer1_V_0_q0 => bias_buffer1_V_0_t_q0,
        bias_buffer1_V_0_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_address1,
        bias_buffer1_V_0_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_0_ce1,
        bias_buffer1_V_0_q1 => bias_buffer1_V_0_t_q1,
        bias_buffer1_V_1_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address0,
        bias_buffer1_V_1_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce0,
        bias_buffer1_V_1_q0 => bias_buffer1_V_1_t_q0,
        bias_buffer1_V_1_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_address1,
        bias_buffer1_V_1_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_1_ce1,
        bias_buffer1_V_1_q1 => bias_buffer1_V_1_t_q1,
        bias_buffer1_V_2_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address0,
        bias_buffer1_V_2_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce0,
        bias_buffer1_V_2_q0 => bias_buffer1_V_2_t_q0,
        bias_buffer1_V_2_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_address1,
        bias_buffer1_V_2_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_2_ce1,
        bias_buffer1_V_2_q1 => bias_buffer1_V_2_t_q1,
        bias_buffer1_V_3_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address0,
        bias_buffer1_V_3_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce0,
        bias_buffer1_V_3_q0 => bias_buffer1_V_3_t_q0,
        bias_buffer1_V_3_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_address1,
        bias_buffer1_V_3_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_3_ce1,
        bias_buffer1_V_3_q1 => bias_buffer1_V_3_t_q1,
        bias_buffer1_V_4_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address0,
        bias_buffer1_V_4_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce0,
        bias_buffer1_V_4_q0 => bias_buffer1_V_4_t_q0,
        bias_buffer1_V_4_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_address1,
        bias_buffer1_V_4_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_4_ce1,
        bias_buffer1_V_4_q1 => bias_buffer1_V_4_t_q1,
        bias_buffer1_V_5_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address0,
        bias_buffer1_V_5_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce0,
        bias_buffer1_V_5_q0 => bias_buffer1_V_5_t_q0,
        bias_buffer1_V_5_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_address1,
        bias_buffer1_V_5_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_5_ce1,
        bias_buffer1_V_5_q1 => bias_buffer1_V_5_t_q1,
        bias_buffer1_V_6_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address0,
        bias_buffer1_V_6_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce0,
        bias_buffer1_V_6_q0 => bias_buffer1_V_6_t_q0,
        bias_buffer1_V_6_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_address1,
        bias_buffer1_V_6_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_6_ce1,
        bias_buffer1_V_6_q1 => bias_buffer1_V_6_t_q1,
        bias_buffer1_V_7_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address0,
        bias_buffer1_V_7_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce0,
        bias_buffer1_V_7_q0 => bias_buffer1_V_7_t_q0,
        bias_buffer1_V_7_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_address1,
        bias_buffer1_V_7_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_bias_buffer1_V_7_ce1,
        bias_buffer1_V_7_q1 => bias_buffer1_V_7_t_q1,
        mul_ln31_1_loc_dout => mul_ln31_1_loc_c148_dout,
        mul_ln31_1_loc_empty_n => mul_ln31_1_loc_c148_empty_n,
        mul_ln31_1_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_mul_ln31_1_loc_read,
        ret_V_cast_loc_dout => ret_V_cast_loc_c150_dout,
        ret_V_cast_loc_empty_n => ret_V_cast_loc_c150_empty_n,
        ret_V_cast_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ret_V_cast_loc_read,
        skip1_dout => skip1_c142_dout,
        skip1_empty_n => skip1_c142_empty_n,
        skip1_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_skip1_read);

    Loop_VITIS_LOOP_38_1_proc_U0 : component top_Loop_VITIS_LOOP_38_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_38_1_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_38_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_38_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_38_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_38_1_proc_U0_ap_ready,
        ret_V_1_loc_dout => ret_V_1_loc_c_dout,
        ret_V_1_loc_empty_n => ret_V_1_loc_c_empty_n,
        ret_V_1_loc_read => Loop_VITIS_LOOP_38_1_proc_U0_ret_V_1_loc_read,
        k1_buffer_V_0_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_address0,
        k1_buffer_V_0_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_ce0,
        k1_buffer_V_0_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_we0,
        k1_buffer_V_0_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_d0,
        k1_buffer_V_1_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_address0,
        k1_buffer_V_1_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_ce0,
        k1_buffer_V_1_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_we0,
        k1_buffer_V_1_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_d0,
        k1_buffer_V_2_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_address0,
        k1_buffer_V_2_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_ce0,
        k1_buffer_V_2_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_we0,
        k1_buffer_V_2_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_d0,
        k1_buffer_V_3_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_address0,
        k1_buffer_V_3_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_ce0,
        k1_buffer_V_3_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_we0,
        k1_buffer_V_3_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_d0,
        k1_buffer_V_4_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_address0,
        k1_buffer_V_4_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_ce0,
        k1_buffer_V_4_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_we0,
        k1_buffer_V_4_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_d0,
        k1_buffer_V_5_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_address0,
        k1_buffer_V_5_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_ce0,
        k1_buffer_V_5_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_we0,
        k1_buffer_V_5_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_d0,
        k1_buffer_V_6_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_address0,
        k1_buffer_V_6_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_ce0,
        k1_buffer_V_6_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_we0,
        k1_buffer_V_6_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_d0,
        k1_buffer_V_7_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_address0,
        k1_buffer_V_7_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_ce0,
        k1_buffer_V_7_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_we0,
        k1_buffer_V_7_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_d0,
        k1_buffer_V_8_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_address0,
        k1_buffer_V_8_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_ce0,
        k1_buffer_V_8_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_we0,
        k1_buffer_V_8_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_d0,
        k1_buffer_V_9_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_address0,
        k1_buffer_V_9_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_ce0,
        k1_buffer_V_9_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_we0,
        k1_buffer_V_9_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_d0,
        k1_buffer_V_10_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_address0,
        k1_buffer_V_10_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_ce0,
        k1_buffer_V_10_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_we0,
        k1_buffer_V_10_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_d0,
        k1_buffer_V_11_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_address0,
        k1_buffer_V_11_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_ce0,
        k1_buffer_V_11_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_we0,
        k1_buffer_V_11_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_d0,
        k1_buffer_V_12_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_address0,
        k1_buffer_V_12_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_ce0,
        k1_buffer_V_12_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_we0,
        k1_buffer_V_12_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_d0,
        k1_buffer_V_13_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_address0,
        k1_buffer_V_13_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_ce0,
        k1_buffer_V_13_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_we0,
        k1_buffer_V_13_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_d0,
        k1_buffer_V_14_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_address0,
        k1_buffer_V_14_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_ce0,
        k1_buffer_V_14_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_we0,
        k1_buffer_V_14_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_d0,
        k1_buffer_V_15_address0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_address0,
        k1_buffer_V_15_ce0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_ce0,
        k1_buffer_V_15_we0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_we0,
        k1_buffer_V_15_d0 => Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_d0,
        k0_1_dout => k0_1_c_dout,
        k0_1_empty_n => k0_1_c_empty_n,
        k0_1_read => Loop_VITIS_LOOP_38_1_proc_U0_k0_1_read,
        m_axi_gmem2_AWVALID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => ap_const_logic_0,
        m_axi_gmem2_AWADDR => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => ap_const_logic_0,
        m_axi_gmem2_WDATA => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => gmem2_ARREADY,
        m_axi_gmem2_ARADDR => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => gmem2_RVALID,
        m_axi_gmem2_RREADY => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => gmem2_RDATA,
        m_axi_gmem2_RLAST => gmem2_RLAST,
        m_axi_gmem2_RID => gmem2_RID,
        m_axi_gmem2_RUSER => gmem2_RUSER,
        m_axi_gmem2_RRESP => gmem2_RRESP,
        m_axi_gmem2_BVALID => ap_const_logic_0,
        m_axi_gmem2_BREADY => Loop_VITIS_LOOP_38_1_proc_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0);

    Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0 : component top_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_start,
        ap_done => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_done,
        ap_continue => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_continue,
        ap_idle => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_idle,
        ap_ready => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_ready,
        ret_V_1_loc_dout => ret_V_1_loc_c147_dout,
        ret_V_1_loc_empty_n => ret_V_1_loc_c147_empty_n,
        ret_V_1_loc_read => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ret_V_1_loc_read,
        ap_return => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_return);

    M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0 : component top_M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_start,
        ap_done => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_done,
        ap_continue => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_continue,
        ap_idle => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_idle,
        ap_ready => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready,
        k1_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_din,
        k1_full_n => k1_full_n,
        k1_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_write,
        k1_buffer_V_0_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_address0,
        k1_buffer_V_0_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_0_ce0,
        k1_buffer_V_0_q0 => k1_buffer_V_0_t_q0,
        k1_buffer_V_1_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_address0,
        k1_buffer_V_1_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_1_ce0,
        k1_buffer_V_1_q0 => k1_buffer_V_1_t_q0,
        k1_buffer_V_2_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_address0,
        k1_buffer_V_2_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_2_ce0,
        k1_buffer_V_2_q0 => k1_buffer_V_2_t_q0,
        k1_buffer_V_3_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_address0,
        k1_buffer_V_3_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_3_ce0,
        k1_buffer_V_3_q0 => k1_buffer_V_3_t_q0,
        k1_buffer_V_4_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_address0,
        k1_buffer_V_4_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_4_ce0,
        k1_buffer_V_4_q0 => k1_buffer_V_4_t_q0,
        k1_buffer_V_5_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_address0,
        k1_buffer_V_5_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_5_ce0,
        k1_buffer_V_5_q0 => k1_buffer_V_5_t_q0,
        k1_buffer_V_6_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_address0,
        k1_buffer_V_6_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_6_ce0,
        k1_buffer_V_6_q0 => k1_buffer_V_6_t_q0,
        k1_buffer_V_7_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_address0,
        k1_buffer_V_7_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_7_ce0,
        k1_buffer_V_7_q0 => k1_buffer_V_7_t_q0,
        k1_buffer_V_8_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_address0,
        k1_buffer_V_8_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_8_ce0,
        k1_buffer_V_8_q0 => k1_buffer_V_8_t_q0,
        k1_buffer_V_9_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_address0,
        k1_buffer_V_9_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_9_ce0,
        k1_buffer_V_9_q0 => k1_buffer_V_9_t_q0,
        k1_buffer_V_10_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_address0,
        k1_buffer_V_10_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_10_ce0,
        k1_buffer_V_10_q0 => k1_buffer_V_10_t_q0,
        k1_buffer_V_11_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_address0,
        k1_buffer_V_11_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_11_ce0,
        k1_buffer_V_11_q0 => k1_buffer_V_11_t_q0,
        k1_buffer_V_12_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_address0,
        k1_buffer_V_12_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_12_ce0,
        k1_buffer_V_12_q0 => k1_buffer_V_12_t_q0,
        k1_buffer_V_13_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_address0,
        k1_buffer_V_13_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_13_ce0,
        k1_buffer_V_13_q0 => k1_buffer_V_13_t_q0,
        k1_buffer_V_14_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_address0,
        k1_buffer_V_14_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_14_ce0,
        k1_buffer_V_14_q0 => k1_buffer_V_14_t_q0,
        k1_buffer_V_15_address0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_address0,
        k1_buffer_V_15_ce0 => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_buffer_V_15_ce0,
        k1_buffer_V_15_q0 => k1_buffer_V_15_t_q0,
        mul_ln31_1_loc_dout => mul_ln31_1_loc_c149_dout,
        mul_ln31_1_loc_empty_n => mul_ln31_1_loc_c149_empty_n,
        mul_ln31_1_loc_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_read,
        p_read => lshr_ln44_cast_loc_channel_dout,
        skip1_dout => skip1_c138_dout,
        skip1_empty_n => skip1_c138_empty_n,
        skip1_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_read,
        mul_ln31_1_loc_out_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_din,
        mul_ln31_1_loc_out_full_n => mul_ln31_1_loc_c154_full_n,
        mul_ln31_1_loc_out_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_write,
        skip1_out_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_din,
        skip1_out_full_n => skip1_c155_full_n,
        skip1_out_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_write);

    conv1x1_v4_512_512_1024_16_16_24_8_4_U0 : component top_conv1x1_v4_512_512_1024_16_16_24_8_4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_start,
        ap_done => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_done,
        ap_continue => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_continue,
        ap_idle => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_idle,
        ap_ready => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_ready,
        fin_dout => fin_dout,
        fin_empty_n => fin_empty_n,
        fin_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_fin_read,
        s_conv1_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_din,
        s_conv1_full_n => s_conv1_full_n,
        s_conv1_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_write,
        k1_dout => k1_dout,
        k1_empty_n => k1_empty_n,
        k1_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_k1_read,
        mul_ln31_1_loc_dout => mul_ln31_1_loc_c154_dout,
        mul_ln31_1_loc_empty_n => mul_ln31_1_loc_c154_empty_n,
        mul_ln31_1_loc_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_read,
        IC_V_loc_dout => IC_V_loc_c_dout,
        IC_V_loc_empty_n => IC_V_loc_c_empty_n,
        IC_V_loc_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_IC_V_loc_read,
        OC_V_loc_dout => OC_V_loc_c_dout,
        OC_V_loc_empty_n => OC_V_loc_c_empty_n,
        OC_V_loc_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_read,
        skip1_dout => skip1_c155_dout,
        skip1_empty_n => skip1_c155_empty_n,
        skip1_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_read,
        mul_ln31_1_loc_out_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_din,
        mul_ln31_1_loc_out_full_n => mul_ln31_1_loc_c156_full_n,
        mul_ln31_1_loc_out_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_write,
        OC_V_loc_out_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_din,
        OC_V_loc_out_full_n => OC_V_loc_c157_full_n,
        OC_V_loc_out_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_write,
        skip1_out_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_din,
        skip1_out_full_n => skip1_c158_full_n,
        skip1_out_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_write);

    quantize_mul_shift_24_8_16_16_16_16_23_U0 : component top_quantize_mul_shift_24_8_16_16_16_16_23
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_start,
        ap_done => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_done,
        ap_continue => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_continue,
        ap_idle => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_idle,
        ap_ready => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_ready,
        s_conv1_dout => s_conv1_dout,
        s_conv1_empty_n => s_conv1_empty_n,
        s_conv1_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_conv1_read,
        f1_din => quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_din,
        f1_full_n => f1_full_n,
        f1_write => quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_write,
        s_scale_dout => s_scale_dout,
        s_scale_empty_n => s_scale_empty_n,
        s_scale_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_scale_read,
        s_bias_dout => s_bias_dout,
        s_bias_empty_n => s_bias_empty_n,
        s_bias_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_bias_read,
        mul_ln31_1_loc_dout => mul_ln31_1_loc_c156_dout,
        mul_ln31_1_loc_empty_n => mul_ln31_1_loc_c156_empty_n,
        mul_ln31_1_loc_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_mul_ln31_1_loc_read,
        OC_V_loc_dout => OC_V_loc_c157_dout,
        OC_V_loc_empty_n => OC_V_loc_c157_empty_n,
        OC_V_loc_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_read,
        skip1_dout => skip1_c158_dout,
        skip1_empty_n => skip1_c158_empty_n,
        skip1_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_skip1_read,
        relu1_dout => relu1_c_dout,
        relu1_empty_n => relu1_c_empty_n,
        relu1_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_relu1_read,
        OC_V_loc_out_din => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_din,
        OC_V_loc_out_full_n => OC_V_loc_c159_full_n,
        OC_V_loc_out_write => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_write);

    Loop_VITIS_LOOP_88_1_proc_U0 : component top_Loop_VITIS_LOOP_88_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_88_1_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_88_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_88_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_88_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_88_1_proc_U0_ap_ready,
        OC_V_loc_dout => OC_V_loc_c146_dout,
        OC_V_loc_empty_n => OC_V_loc_c146_empty_n,
        OC_V_loc_read => Loop_VITIS_LOOP_88_1_proc_U0_OC_V_loc_read,
        k3_buffer_V_0_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_address0,
        k3_buffer_V_0_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_ce0,
        k3_buffer_V_0_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_we0,
        k3_buffer_V_0_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_d0,
        k3_buffer_V_1_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_address0,
        k3_buffer_V_1_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_ce0,
        k3_buffer_V_1_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_we0,
        k3_buffer_V_1_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_d0,
        k3_buffer_V_2_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_address0,
        k3_buffer_V_2_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_ce0,
        k3_buffer_V_2_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_we0,
        k3_buffer_V_2_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_d0,
        k3_buffer_V_3_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_address0,
        k3_buffer_V_3_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_ce0,
        k3_buffer_V_3_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_we0,
        k3_buffer_V_3_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_d0,
        k3_buffer_V_4_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_address0,
        k3_buffer_V_4_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_ce0,
        k3_buffer_V_4_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_we0,
        k3_buffer_V_4_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_d0,
        k3_buffer_V_5_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_address0,
        k3_buffer_V_5_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_ce0,
        k3_buffer_V_5_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_we0,
        k3_buffer_V_5_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_d0,
        k3_buffer_V_6_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_address0,
        k3_buffer_V_6_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_ce0,
        k3_buffer_V_6_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_we0,
        k3_buffer_V_6_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_d0,
        k3_buffer_V_7_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_address0,
        k3_buffer_V_7_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_ce0,
        k3_buffer_V_7_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_we0,
        k3_buffer_V_7_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_d0,
        k3_buffer_V_8_address0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_address0,
        k3_buffer_V_8_ce0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_ce0,
        k3_buffer_V_8_we0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_we0,
        k3_buffer_V_8_d0 => Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_d0,
        k0_3_dout => k0_3_c_dout,
        k0_3_empty_n => k0_3_c_empty_n,
        k0_3_read => Loop_VITIS_LOOP_88_1_proc_U0_k0_3_read,
        m_axi_gmem3_AWVALID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => ap_const_logic_0,
        m_axi_gmem3_AWADDR => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => ap_const_logic_0,
        m_axi_gmem3_WDATA => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => gmem3_ARREADY,
        m_axi_gmem3_ARADDR => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => gmem3_RVALID,
        m_axi_gmem3_RREADY => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => gmem3_RDATA,
        m_axi_gmem3_RLAST => gmem3_RLAST,
        m_axi_gmem3_RID => gmem3_RID,
        m_axi_gmem3_RUSER => gmem3_RUSER,
        m_axi_gmem3_RRESP => gmem3_RRESP,
        m_axi_gmem3_BVALID => ap_const_logic_0,
        m_axi_gmem3_BREADY => Loop_VITIS_LOOP_88_1_proc_U0_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => ap_const_lv2_0,
        m_axi_gmem3_BID => ap_const_lv1_0,
        m_axi_gmem3_BUSER => ap_const_lv1_0);

    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0 : component top_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_start,
        ap_done => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_done,
        ap_continue => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_continue,
        ap_idle => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_idle,
        ap_ready => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_ready,
        D_V_loc_dout => D_V_loc_c_dout,
        D_V_loc_empty_n => D_V_loc_c_empty_n,
        D_V_loc_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_D_V_loc_read,
        STRIDE_2_dout => STRIDE_2_c131_dout,
        STRIDE_2_empty_n => STRIDE_2_c131_empty_n,
        STRIDE_2_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_STRIDE_2_read,
        batch_dout => batch_c143_dout,
        batch_empty_n => batch_c143_empty_n,
        batch_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_batch_read,
        mul_ln93_1_loc_out_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_din,
        mul_ln93_1_loc_out_full_n => mul_ln93_1_loc_c_full_n,
        mul_ln93_1_loc_out_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_write,
        mul_ln93_1_loc_out1_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_din,
        mul_ln93_1_loc_out1_full_n => mul_ln93_1_loc_c160_full_n,
        mul_ln93_1_loc_out1_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_write,
        mul_ln93_1_loc_out2_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_din,
        mul_ln93_1_loc_out2_full_n => mul_ln93_1_loc_c161_full_n,
        mul_ln93_1_loc_out2_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_write,
        mul_ln93_1_loc_out3_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_din,
        mul_ln93_1_loc_out3_full_n => mul_ln93_1_loc_c162_full_n,
        mul_ln93_1_loc_out3_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_write);

    M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0 : component top_M2S_repeat_16_16_ap_int_16_ap_int_256_24
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_start,
        ap_done => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_done,
        ap_continue => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_continue,
        ap_idle => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_idle,
        ap_ready => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_ready,
        s_scale_1_din => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_din,
        s_scale_1_full_n => s_scale_1_full_n,
        s_scale_1_write => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_write,
        scale_buffer3_V_0_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address0,
        scale_buffer3_V_0_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce0,
        scale_buffer3_V_0_q0 => scale_buffer3_V_0_t_q0,
        scale_buffer3_V_0_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_address1,
        scale_buffer3_V_0_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_0_ce1,
        scale_buffer3_V_0_q1 => scale_buffer3_V_0_t_q1,
        scale_buffer3_V_1_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address0,
        scale_buffer3_V_1_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce0,
        scale_buffer3_V_1_q0 => scale_buffer3_V_1_t_q0,
        scale_buffer3_V_1_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_address1,
        scale_buffer3_V_1_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_1_ce1,
        scale_buffer3_V_1_q1 => scale_buffer3_V_1_t_q1,
        scale_buffer3_V_2_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address0,
        scale_buffer3_V_2_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce0,
        scale_buffer3_V_2_q0 => scale_buffer3_V_2_t_q0,
        scale_buffer3_V_2_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_address1,
        scale_buffer3_V_2_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_2_ce1,
        scale_buffer3_V_2_q1 => scale_buffer3_V_2_t_q1,
        scale_buffer3_V_3_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address0,
        scale_buffer3_V_3_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce0,
        scale_buffer3_V_3_q0 => scale_buffer3_V_3_t_q0,
        scale_buffer3_V_3_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_address1,
        scale_buffer3_V_3_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_3_ce1,
        scale_buffer3_V_3_q1 => scale_buffer3_V_3_t_q1,
        scale_buffer3_V_4_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address0,
        scale_buffer3_V_4_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce0,
        scale_buffer3_V_4_q0 => scale_buffer3_V_4_t_q0,
        scale_buffer3_V_4_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_address1,
        scale_buffer3_V_4_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_4_ce1,
        scale_buffer3_V_4_q1 => scale_buffer3_V_4_t_q1,
        scale_buffer3_V_5_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address0,
        scale_buffer3_V_5_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce0,
        scale_buffer3_V_5_q0 => scale_buffer3_V_5_t_q0,
        scale_buffer3_V_5_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_address1,
        scale_buffer3_V_5_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_5_ce1,
        scale_buffer3_V_5_q1 => scale_buffer3_V_5_t_q1,
        scale_buffer3_V_6_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address0,
        scale_buffer3_V_6_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce0,
        scale_buffer3_V_6_q0 => scale_buffer3_V_6_t_q0,
        scale_buffer3_V_6_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_address1,
        scale_buffer3_V_6_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_6_ce1,
        scale_buffer3_V_6_q1 => scale_buffer3_V_6_t_q1,
        scale_buffer3_V_7_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address0,
        scale_buffer3_V_7_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce0,
        scale_buffer3_V_7_q0 => scale_buffer3_V_7_t_q0,
        scale_buffer3_V_7_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_address1,
        scale_buffer3_V_7_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_scale_buffer3_V_7_ce1,
        scale_buffer3_V_7_q1 => scale_buffer3_V_7_t_q1,
        mul_ln93_1_loc_dout => mul_ln93_1_loc_c_dout,
        mul_ln93_1_loc_empty_n => mul_ln93_1_loc_c_empty_n,
        mul_ln93_1_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_mul_ln93_1_loc_read,
        ret_V_cast_loc_dout => ret_V_cast_loc_c151_dout,
        ret_V_cast_loc_empty_n => ret_V_cast_loc_c151_empty_n,
        ret_V_cast_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ret_V_cast_loc_read,
        skip3_dout => skip3_c134_dout,
        skip3_empty_n => skip3_c134_empty_n,
        skip3_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_skip3_read);

    M2S_repeat_16_16_ap_int_16_ap_int_256_U0 : component top_M2S_repeat_16_16_ap_int_16_ap_int_256_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_start,
        ap_done => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_done,
        ap_continue => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_continue,
        ap_idle => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_idle,
        ap_ready => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_ready,
        s_bias_1_din => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_din,
        s_bias_1_full_n => s_bias_1_full_n,
        s_bias_1_write => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_write,
        bias_buffer3_V_0_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address0,
        bias_buffer3_V_0_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce0,
        bias_buffer3_V_0_q0 => bias_buffer3_V_0_t_q0,
        bias_buffer3_V_0_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_address1,
        bias_buffer3_V_0_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_0_ce1,
        bias_buffer3_V_0_q1 => bias_buffer3_V_0_t_q1,
        bias_buffer3_V_1_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address0,
        bias_buffer3_V_1_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce0,
        bias_buffer3_V_1_q0 => bias_buffer3_V_1_t_q0,
        bias_buffer3_V_1_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_address1,
        bias_buffer3_V_1_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_1_ce1,
        bias_buffer3_V_1_q1 => bias_buffer3_V_1_t_q1,
        bias_buffer3_V_2_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address0,
        bias_buffer3_V_2_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce0,
        bias_buffer3_V_2_q0 => bias_buffer3_V_2_t_q0,
        bias_buffer3_V_2_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_address1,
        bias_buffer3_V_2_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_2_ce1,
        bias_buffer3_V_2_q1 => bias_buffer3_V_2_t_q1,
        bias_buffer3_V_3_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address0,
        bias_buffer3_V_3_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce0,
        bias_buffer3_V_3_q0 => bias_buffer3_V_3_t_q0,
        bias_buffer3_V_3_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_address1,
        bias_buffer3_V_3_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_3_ce1,
        bias_buffer3_V_3_q1 => bias_buffer3_V_3_t_q1,
        bias_buffer3_V_4_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address0,
        bias_buffer3_V_4_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce0,
        bias_buffer3_V_4_q0 => bias_buffer3_V_4_t_q0,
        bias_buffer3_V_4_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_address1,
        bias_buffer3_V_4_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_4_ce1,
        bias_buffer3_V_4_q1 => bias_buffer3_V_4_t_q1,
        bias_buffer3_V_5_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address0,
        bias_buffer3_V_5_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce0,
        bias_buffer3_V_5_q0 => bias_buffer3_V_5_t_q0,
        bias_buffer3_V_5_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_address1,
        bias_buffer3_V_5_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_5_ce1,
        bias_buffer3_V_5_q1 => bias_buffer3_V_5_t_q1,
        bias_buffer3_V_6_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address0,
        bias_buffer3_V_6_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce0,
        bias_buffer3_V_6_q0 => bias_buffer3_V_6_t_q0,
        bias_buffer3_V_6_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_address1,
        bias_buffer3_V_6_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_6_ce1,
        bias_buffer3_V_6_q1 => bias_buffer3_V_6_t_q1,
        bias_buffer3_V_7_address0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address0,
        bias_buffer3_V_7_ce0 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce0,
        bias_buffer3_V_7_q0 => bias_buffer3_V_7_t_q0,
        bias_buffer3_V_7_address1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_address1,
        bias_buffer3_V_7_ce1 => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_bias_buffer3_V_7_ce1,
        bias_buffer3_V_7_q1 => bias_buffer3_V_7_t_q1,
        mul_ln93_1_loc_dout => mul_ln93_1_loc_c160_dout,
        mul_ln93_1_loc_empty_n => mul_ln93_1_loc_c160_empty_n,
        mul_ln93_1_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_mul_ln93_1_loc_read,
        ret_V_cast_loc_dout => ret_V_cast_loc_c152_dout,
        ret_V_cast_loc_empty_n => ret_V_cast_loc_c152_empty_n,
        ret_V_cast_loc_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ret_V_cast_loc_read,
        skip3_dout => skip3_c135_dout,
        skip3_empty_n => skip3_c135_empty_n,
        skip3_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_skip3_read);

    M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0 : component top_M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_start,
        start_full_n => start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_full_n,
        ap_done => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_done,
        ap_continue => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_continue,
        ap_idle => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_idle,
        ap_ready => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_ready,
        start_out => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_start_out,
        start_write => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_start_write,
        k3s_din => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_din,
        k3s_full_n => k3s_full_n,
        k3s_write => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_write,
        k3_buffer_V_0_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address0,
        k3_buffer_V_0_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce0,
        k3_buffer_V_0_q0 => k3_buffer_V_0_t_q0,
        k3_buffer_V_0_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_address1,
        k3_buffer_V_0_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_0_ce1,
        k3_buffer_V_0_q1 => k3_buffer_V_0_t_q1,
        k3_buffer_V_1_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address0,
        k3_buffer_V_1_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce0,
        k3_buffer_V_1_q0 => k3_buffer_V_1_t_q0,
        k3_buffer_V_1_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_address1,
        k3_buffer_V_1_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_1_ce1,
        k3_buffer_V_1_q1 => k3_buffer_V_1_t_q1,
        k3_buffer_V_2_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address0,
        k3_buffer_V_2_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce0,
        k3_buffer_V_2_q0 => k3_buffer_V_2_t_q0,
        k3_buffer_V_2_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_address1,
        k3_buffer_V_2_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_2_ce1,
        k3_buffer_V_2_q1 => k3_buffer_V_2_t_q1,
        k3_buffer_V_3_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address0,
        k3_buffer_V_3_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce0,
        k3_buffer_V_3_q0 => k3_buffer_V_3_t_q0,
        k3_buffer_V_3_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_address1,
        k3_buffer_V_3_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_3_ce1,
        k3_buffer_V_3_q1 => k3_buffer_V_3_t_q1,
        k3_buffer_V_4_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address0,
        k3_buffer_V_4_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce0,
        k3_buffer_V_4_q0 => k3_buffer_V_4_t_q0,
        k3_buffer_V_4_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_address1,
        k3_buffer_V_4_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_4_ce1,
        k3_buffer_V_4_q1 => k3_buffer_V_4_t_q1,
        k3_buffer_V_5_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address0,
        k3_buffer_V_5_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce0,
        k3_buffer_V_5_q0 => k3_buffer_V_5_t_q0,
        k3_buffer_V_5_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_address1,
        k3_buffer_V_5_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_5_ce1,
        k3_buffer_V_5_q1 => k3_buffer_V_5_t_q1,
        k3_buffer_V_6_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address0,
        k3_buffer_V_6_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce0,
        k3_buffer_V_6_q0 => k3_buffer_V_6_t_q0,
        k3_buffer_V_6_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_address1,
        k3_buffer_V_6_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_6_ce1,
        k3_buffer_V_6_q1 => k3_buffer_V_6_t_q1,
        k3_buffer_V_7_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address0,
        k3_buffer_V_7_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce0,
        k3_buffer_V_7_q0 => k3_buffer_V_7_t_q0,
        k3_buffer_V_7_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_address1,
        k3_buffer_V_7_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_7_ce1,
        k3_buffer_V_7_q1 => k3_buffer_V_7_t_q1,
        k3_buffer_V_8_address0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address0,
        k3_buffer_V_8_ce0 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce0,
        k3_buffer_V_8_q0 => k3_buffer_V_8_t_q0,
        k3_buffer_V_8_address1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_address1,
        k3_buffer_V_8_ce1 => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3_buffer_V_8_ce1,
        k3_buffer_V_8_q1 => k3_buffer_V_8_t_q1,
        mul_ln93_1_loc_dout => mul_ln93_1_loc_c161_dout,
        mul_ln93_1_loc_empty_n => mul_ln93_1_loc_c161_empty_n,
        mul_ln93_1_loc_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_mul_ln93_1_loc_read,
        ret_V_cast_loc_dout => ret_V_cast_loc_c153_dout,
        ret_V_cast_loc_empty_n => ret_V_cast_loc_c153_empty_n,
        ret_V_cast_loc_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ret_V_cast_loc_read,
        skip3_dout => skip3_c136_dout,
        skip3_empty_n => skip3_c136_empty_n,
        skip3_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_skip3_read);

    conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0 : component top_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_start,
        ap_done => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_done,
        ap_continue => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_continue,
        ap_idle => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_idle,
        ap_ready => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_ready,
        f1_dout => f1_dout,
        f1_empty_n => f1_empty_n,
        f1_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_f1_read,
        offset_s_dout => offset_s_dout,
        offset_s_empty_n => offset_s_empty_n,
        offset_s_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_offset_s_read,
        in_layer_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_din,
        in_layer_full_n => in_layer_full_n,
        in_layer_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_write,
        D_V_loc_dout => D_V_loc_c145_dout,
        D_V_loc_empty_n => D_V_loc_c145_empty_n,
        D_V_loc_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_read,
        OC_V_loc_dout => OC_V_loc_c159_dout,
        OC_V_loc_empty_n => OC_V_loc_c159_empty_n,
        OC_V_loc_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_read,
        batch_dout => batch_c144_dout,
        batch_empty_n => batch_c144_empty_n,
        batch_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_read,
        STRIDE_2_dout => STRIDE_2_c132_dout,
        STRIDE_2_empty_n => STRIDE_2_c132_empty_n,
        STRIDE_2_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_read,
        skip3_dout => skip3_c137_dout,
        skip3_empty_n => skip3_c137_empty_n,
        skip3_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_read,
        deform_dout => deform_c139_dout,
        deform_empty_n => deform_c139_empty_n,
        deform_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_deform_read,
        D_V_loc_out_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_din,
        D_V_loc_out_full_n => D_V_loc_c163_full_n,
        D_V_loc_out_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_write,
        OC_V_loc_out_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_din,
        OC_V_loc_out_full_n => OC_V_loc_c164_full_n,
        OC_V_loc_out_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_write,
        batch_out_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_din,
        batch_out_full_n => batch_c165_full_n,
        batch_out_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_write,
        STRIDE_2_out_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_din,
        STRIDE_2_out_full_n => STRIDE_2_c166_full_n,
        STRIDE_2_out_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_write,
        skip3_out_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_din,
        skip3_out_full_n => skip3_c167_full_n,
        skip3_out_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_write);

    dw_deform_M_512_1024_16_24_8_4_1_U0 : component top_dw_deform_M_512_1024_16_24_8_4_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_start,
        ap_done => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_done,
        ap_continue => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_continue,
        ap_idle => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_idle,
        ap_ready => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_ready,
        in_layer_dout => in_layer_dout,
        in_layer_empty_n => in_layer_empty_n,
        in_layer_read => dw_deform_M_512_1024_16_24_8_4_1_U0_in_layer_read,
        s_conv3_din => dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_din,
        s_conv3_full_n => s_conv3_full_n,
        s_conv3_write => dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_write,
        k3s_dout => k3s_dout,
        k3s_empty_n => k3s_empty_n,
        k3s_read => dw_deform_M_512_1024_16_24_8_4_1_U0_k3s_read,
        D_V_loc_dout => D_V_loc_c163_dout,
        D_V_loc_empty_n => D_V_loc_c163_empty_n,
        D_V_loc_read => dw_deform_M_512_1024_16_24_8_4_1_U0_D_V_loc_read,
        OC_V_loc_dout => OC_V_loc_c164_dout,
        OC_V_loc_empty_n => OC_V_loc_c164_empty_n,
        OC_V_loc_read => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_read,
        batch_dout => batch_c165_dout,
        batch_empty_n => batch_c165_empty_n,
        batch_read => dw_deform_M_512_1024_16_24_8_4_1_U0_batch_read,
        STRIDE_2_dout => STRIDE_2_c166_dout,
        STRIDE_2_empty_n => STRIDE_2_c166_empty_n,
        STRIDE_2_read => dw_deform_M_512_1024_16_24_8_4_1_U0_STRIDE_2_read,
        skip3_dout => skip3_c167_dout,
        skip3_empty_n => skip3_c167_empty_n,
        skip3_read => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_read,
        OC_V_loc_out_din => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_din,
        OC_V_loc_out_full_n => OC_V_loc_c168_full_n,
        OC_V_loc_out_write => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_write,
        skip3_out_din => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_din,
        skip3_out_full_n => skip3_c169_full_n,
        skip3_out_write => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_write);

    quantize_mul_shift_24_8_16_16_16_16_U0 : component top_quantize_mul_shift_24_8_16_16_16_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => quantize_mul_shift_24_8_16_16_16_16_U0_ap_start,
        ap_done => quantize_mul_shift_24_8_16_16_16_16_U0_ap_done,
        ap_continue => quantize_mul_shift_24_8_16_16_16_16_U0_ap_continue,
        ap_idle => quantize_mul_shift_24_8_16_16_16_16_U0_ap_idle,
        ap_ready => quantize_mul_shift_24_8_16_16_16_16_U0_ap_ready,
        s_conv3_dout => s_conv3_dout,
        s_conv3_empty_n => s_conv3_empty_n,
        s_conv3_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_conv3_read,
        f3_din => quantize_mul_shift_24_8_16_16_16_16_U0_f3_din,
        f3_full_n => f3_full_n,
        f3_write => quantize_mul_shift_24_8_16_16_16_16_U0_f3_write,
        s_scale_1_dout => s_scale_1_dout,
        s_scale_1_empty_n => s_scale_1_empty_n,
        s_scale_1_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_scale_1_read,
        s_bias_1_dout => s_bias_1_dout,
        s_bias_1_empty_n => s_bias_1_empty_n,
        s_bias_1_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_bias_1_read,
        mul_ln93_1_loc_dout => mul_ln93_1_loc_c162_dout,
        mul_ln93_1_loc_empty_n => mul_ln93_1_loc_c162_empty_n,
        mul_ln93_1_loc_read => quantize_mul_shift_24_8_16_16_16_16_U0_mul_ln93_1_loc_read,
        OC_V_loc_dout => OC_V_loc_c168_dout,
        OC_V_loc_empty_n => OC_V_loc_c168_empty_n,
        OC_V_loc_read => quantize_mul_shift_24_8_16_16_16_16_U0_OC_V_loc_read,
        skip3_dout => skip3_c169_dout,
        skip3_empty_n => skip3_c169_empty_n,
        skip3_read => quantize_mul_shift_24_8_16_16_16_16_U0_skip3_read,
        relu3_dout => relu3_c_dout,
        relu3_empty_n => relu3_c_empty_n,
        relu3_read => quantize_mul_shift_24_8_16_16_16_16_U0_relu3_read);

    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0 : component top_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_start,
        ap_done => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_done,
        ap_continue => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_continue,
        ap_idle => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_idle,
        ap_ready => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_ready,
        batch_dout => batch_c130_dout,
        batch_empty_n => batch_c130_empty_n,
        batch_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_batch_read,
        OC_dout => OC_c127_dout,
        OC_empty_n => OC_c127_empty_n,
        OC_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_OC_read,
        CONV_D_loc_dout => CONV_D_loc_c140_dout,
        CONV_D_loc_empty_n => CONV_D_loc_c140_empty_n,
        CONV_D_loc_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_CONV_D_loc_read,
        select_ln169_loc_out_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_din,
        select_ln169_loc_out_full_n => select_ln169_loc_c_full_n,
        select_ln169_loc_out_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_write);

    S2M_16_8_8_ap_int_128_ap_int_128_U0 : component top_S2M_16_8_8_ap_int_128_ap_int_128_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_start,
        ap_done => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_done,
        ap_continue => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_continue,
        ap_idle => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_idle,
        ap_ready => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_ready,
        s_mem_dout => f3_dout,
        s_mem_empty_n => f3_empty_n,
        s_mem_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_s_mem_read,
        m_axi_gmem1_AWVALID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => gmem1_AWREADY,
        m_axi_gmem1_AWADDR => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => gmem1_WREADY,
        m_axi_gmem1_WDATA => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => ap_const_logic_0,
        m_axi_gmem1_ARADDR => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => ap_const_logic_0,
        m_axi_gmem1_RREADY => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => ap_const_lv128_lc_1,
        m_axi_gmem1_RLAST => ap_const_logic_0,
        m_axi_gmem1_RID => ap_const_lv1_0,
        m_axi_gmem1_RUSER => ap_const_lv1_0,
        m_axi_gmem1_RRESP => ap_const_lv2_0,
        m_axi_gmem1_BVALID => gmem1_BVALID,
        m_axi_gmem1_BREADY => S2M_16_8_8_ap_int_128_ap_int_128_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => gmem1_BRESP,
        m_axi_gmem1_BID => gmem1_BID,
        m_axi_gmem1_BUSER => gmem1_BUSER,
        out_r_dout => out_c_dout,
        out_r_empty_n => out_c_empty_n,
        out_r_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_out_r_read,
        select_ln169_loc_dout => select_ln169_loc_c_dout,
        select_ln169_loc_empty_n => select_ln169_loc_c_empty_n,
        select_ln169_loc_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_select_ln169_loc_read);

    fmap_c_U : component top_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_fmap_out_din,
        if_full_n => fmap_c_full_n,
        if_write => top_entry39_U0_fmap_out_write,
        if_dout => fmap_c_dout,
        if_empty_n => fmap_c_empty_n,
        if_read => M2S_16_8_8_ap_int_128_ap_int_128_U0_fmap_read);

    out_c_U : component top_fifo_w64_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_out_out_din,
        if_full_n => out_c_full_n,
        if_write => top_entry39_U0_out_out_write,
        if_dout => out_c_dout,
        if_empty_n => out_c_empty_n,
        if_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_out_r_read);

    k0_1_c_U : component top_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_k0_1_out_din,
        if_full_n => k0_1_c_full_n,
        if_write => top_entry39_U0_k0_1_out_write,
        if_dout => k0_1_c_dout,
        if_empty_n => k0_1_c_empty_n,
        if_read => Loop_VITIS_LOOP_38_1_proc_U0_k0_1_read);

    k0_3_c_U : component top_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_k0_3_out_din,
        if_full_n => k0_3_c_full_n,
        if_write => top_entry39_U0_k0_3_out_write,
        if_dout => k0_3_c_dout,
        if_empty_n => k0_3_c_empty_n,
        if_read => Loop_VITIS_LOOP_88_1_proc_U0_k0_3_read);

    quant_c_U : component top_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_quant_out_din,
        if_full_n => quant_c_full_n,
        if_write => top_entry39_U0_quant_out_write,
        if_dout => quant_c_dout,
        if_empty_n => quant_c_empty_n,
        if_read => PackReadBuffer_ap_int_16_U0_mem_read);

    offsets_c_U : component top_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_offsets_out_din,
        if_full_n => offsets_c_full_n,
        if_write => top_entry39_U0_offsets_out_write,
        if_dout => offsets_c_dout,
        if_empty_n => offsets_c_empty_n,
        if_read => M2S_addr_ap_uint_8_ap_uint_8_U0_offsets_read);

    D_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_D_out_din,
        if_full_n => D_c_full_n,
        if_write => top_entry39_U0_D_out_write,
        if_dout => D_c_dout,
        if_empty_n => D_c_empty_n,
        if_read => Block_split77_proc_U0_D_read);

    D_c123_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_D_out1_din,
        if_full_n => D_c123_full_n,
        if_write => top_entry39_U0_D_out1_write,
        if_dout => D_c123_dout,
        if_empty_n => D_c123_empty_n,
        if_read => Block_split7793_proc_U0_D_read);

    D_c124_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_D_out2_din,
        if_full_n => D_c124_full_n,
        if_write => top_entry39_U0_D_out2_write,
        if_dout => D_c124_dout,
        if_empty_n => D_c124_empty_n,
        if_read => Block_split7796_proc_U0_D_read);

    IC_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_IC_out_din,
        if_full_n => IC_c_full_n,
        if_write => top_entry39_U0_IC_out_write,
        if_dout => IC_c_dout,
        if_empty_n => IC_c_empty_n,
        if_read => Block_split7793_proc_U0_IC_read);

    IC_c125_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_IC_out3_din,
        if_full_n => IC_c125_full_n,
        if_write => top_entry39_U0_IC_out3_write,
        if_dout => IC_c125_dout,
        if_empty_n => IC_c125_empty_n,
        if_read => Block_split7796_proc_U0_IC_read);

    OC_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_OC_out_din,
        if_full_n => OC_c_full_n,
        if_write => top_entry39_U0_OC_out_write,
        if_dout => OC_c_dout,
        if_empty_n => OC_c_empty_n,
        if_read => PackReadBuffer_ap_int_16_U0_OC_read);

    OC_c126_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_OC_out4_din,
        if_full_n => OC_c126_full_n,
        if_write => top_entry39_U0_OC_out4_write,
        if_dout => OC_c126_dout,
        if_empty_n => OC_c126_empty_n,
        if_read => Block_split7796_proc_U0_OC_read);

    OC_c127_U : component top_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_OC_out5_din,
        if_full_n => OC_c127_full_n,
        if_write => top_entry39_U0_OC_out5_write,
        if_dout => OC_c127_dout,
        if_empty_n => OC_c127_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_OC_read);

    batch_c_U : component top_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_batch_out_din,
        if_full_n => batch_c_full_n,
        if_write => top_entry39_U0_batch_out_write,
        if_dout => batch_c_dout,
        if_empty_n => batch_c_empty_n,
        if_read => M2S_addr_ap_uint_8_ap_uint_8_U0_batch_read);

    batch_c128_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_batch_out6_din,
        if_full_n => batch_c128_full_n,
        if_write => top_entry39_U0_batch_out6_write,
        if_dout => batch_c128_dout,
        if_empty_n => batch_c128_empty_n,
        if_read => Block_split7793_proc_U0_batch_read);

    batch_c129_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_batch_out7_din,
        if_full_n => batch_c129_full_n,
        if_write => top_entry39_U0_batch_out7_write,
        if_dout => batch_c129_dout,
        if_empty_n => batch_c129_empty_n,
        if_read => Block_split7796_proc_U0_batch_read);

    batch_c130_U : component top_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_batch_out8_din,
        if_full_n => batch_c130_full_n,
        if_write => top_entry39_U0_batch_out8_write,
        if_dout => batch_c130_dout,
        if_empty_n => batch_c130_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_batch_read);

    STRIDE_2_c_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_STRIDE_2_out_din,
        if_full_n => STRIDE_2_c_full_n,
        if_write => top_entry39_U0_STRIDE_2_out_write,
        if_dout => STRIDE_2_c_dout,
        if_empty_n => STRIDE_2_c_empty_n,
        if_read => Block_split77_proc_U0_STRIDE_2_read);

    STRIDE_2_c131_U : component top_fifo_w1_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_STRIDE_2_out9_din,
        if_full_n => STRIDE_2_c131_full_n,
        if_write => top_entry39_U0_STRIDE_2_out9_write,
        if_dout => STRIDE_2_c131_dout,
        if_empty_n => STRIDE_2_c131_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_STRIDE_2_read);

    STRIDE_2_c132_U : component top_fifo_w1_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_STRIDE_2_out10_din,
        if_full_n => STRIDE_2_c132_full_n,
        if_write => top_entry39_U0_STRIDE_2_out10_write,
        if_dout => STRIDE_2_c132_dout,
        if_empty_n => STRIDE_2_c132_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_read);

    skip3_c_U : component top_fifo_w1_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out_din,
        if_full_n => skip3_c_full_n,
        if_write => top_entry39_U0_skip3_out_write,
        if_dout => skip3_c_dout,
        if_empty_n => skip3_c_empty_n,
        if_read => M2S_addr_ap_uint_8_ap_uint_8_U0_skip3_read);

    skip3_c133_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out11_din,
        if_full_n => skip3_c133_full_n,
        if_write => top_entry39_U0_skip3_out11_write,
        if_dout => skip3_c133_dout,
        if_empty_n => skip3_c133_empty_n,
        if_read => PackReadBuffer_ap_int_16_U0_skip3_read);

    skip3_c134_U : component top_fifo_w1_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out12_din,
        if_full_n => skip3_c134_full_n,
        if_write => top_entry39_U0_skip3_out12_write,
        if_dout => skip3_c134_dout,
        if_empty_n => skip3_c134_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_skip3_read);

    skip3_c135_U : component top_fifo_w1_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out13_din,
        if_full_n => skip3_c135_full_n,
        if_write => top_entry39_U0_skip3_out13_write,
        if_dout => skip3_c135_dout,
        if_empty_n => skip3_c135_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_skip3_read);

    skip3_c136_U : component top_fifo_w1_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out14_din,
        if_full_n => skip3_c136_full_n,
        if_write => top_entry39_U0_skip3_out14_write,
        if_dout => skip3_c136_dout,
        if_empty_n => skip3_c136_empty_n,
        if_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_skip3_read);

    skip3_c137_U : component top_fifo_w1_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip3_out15_din,
        if_full_n => skip3_c137_full_n,
        if_write => top_entry39_U0_skip3_out15_write,
        if_dout => skip3_c137_dout,
        if_empty_n => skip3_c137_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_read);

    skip1_c_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip1_out_din,
        if_full_n => skip1_c_full_n,
        if_write => top_entry39_U0_skip1_out_write,
        if_dout => skip1_c_dout,
        if_empty_n => skip1_c_empty_n,
        if_read => PackReadBuffer_ap_int_16_U0_skip1_read);

    skip1_c138_U : component top_fifo_w1_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_skip1_out16_din,
        if_full_n => skip1_c138_full_n,
        if_write => top_entry39_U0_skip1_out16_write,
        if_dout => skip1_c138_dout,
        if_empty_n => skip1_c138_empty_n,
        if_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_read);

    deform_c_U : component top_fifo_w1_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_deform_out_din,
        if_full_n => deform_c_full_n,
        if_write => top_entry39_U0_deform_out_write,
        if_dout => deform_c_dout,
        if_empty_n => deform_c_empty_n,
        if_read => M2S_addr_ap_uint_8_ap_uint_8_U0_deform_read);

    deform_c139_U : component top_fifo_w1_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_deform_out17_din,
        if_full_n => deform_c139_full_n,
        if_write => top_entry39_U0_deform_out17_write,
        if_dout => deform_c139_dout,
        if_empty_n => deform_c139_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_deform_read);

    relu1_c_U : component top_fifo_w1_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_relu1_out_din,
        if_full_n => relu1_c_full_n,
        if_write => top_entry39_U0_relu1_out_write,
        if_dout => relu1_c_dout,
        if_empty_n => relu1_c_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_relu1_read);

    relu3_c_U : component top_fifo_w1_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => top_entry39_U0_relu3_out_din,
        if_full_n => relu3_c_full_n,
        if_write => top_entry39_U0_relu3_out_write,
        if_dout => relu3_c_dout,
        if_empty_n => relu3_c_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_relu3_read);

    CONV_D_loc_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split77_proc_U0_CONV_D_out_out_din,
        if_full_n => CONV_D_loc_c_full_n,
        if_write => Block_split77_proc_U0_CONV_D_out_out_write,
        if_dout => CONV_D_loc_c_dout,
        if_empty_n => CONV_D_loc_c_empty_n,
        if_read => M2S_addr_ap_uint_8_ap_uint_8_U0_CONV_D_loc_read);

    CONV_D_loc_c140_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split77_proc_U0_CONV_D_out_out1_din,
        if_full_n => CONV_D_loc_c140_full_n,
        if_write => Block_split77_proc_U0_CONV_D_out_out1_write,
        if_dout => CONV_D_loc_c140_dout,
        if_empty_n => CONV_D_loc_c140_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_CONV_D_loc_read);

    offset_s_U : component top_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_din,
        if_full_n => offset_s_full_n,
        if_write => M2S_addr_ap_uint_8_ap_uint_8_U0_s_mem_write,
        if_dout => offset_s_dout,
        if_empty_n => offset_s_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_offset_s_read);

    select_ln160_loc_channel_U : component top_fifo_w29_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7793_proc_U0_ap_return,
        if_full_n => select_ln160_loc_channel_full_n,
        if_write => Block_split7793_proc_U0_ap_done,
        if_dout => select_ln160_loc_channel_dout,
        if_empty_n => select_ln160_loc_channel_empty_n,
        if_read => M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready);

    fin_U : component top_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_din,
        if_full_n => fin_full_n,
        if_write => M2S_16_8_8_ap_int_128_ap_int_128_U0_s_mem_write,
        if_dout => fin_dout,
        if_empty_n => fin_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_fin_read);

    skip1_c141_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PackReadBuffer_ap_int_16_U0_skip1_out_din,
        if_full_n => skip1_c141_full_n,
        if_write => PackReadBuffer_ap_int_16_U0_skip1_out_write,
        if_dout => skip1_c141_dout,
        if_empty_n => skip1_c141_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_skip1_read);

    skip1_c142_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PackReadBuffer_ap_int_16_U0_skip1_out1_din,
        if_full_n => skip1_c142_full_n,
        if_write => PackReadBuffer_ap_int_16_U0_skip1_out1_write,
        if_dout => skip1_c142_dout,
        if_empty_n => skip1_c142_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_skip1_read);

    batch_c143_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_batch_out_din,
        if_full_n => batch_c143_full_n,
        if_write => Block_split7796_proc_U0_batch_out_write,
        if_dout => batch_c143_dout,
        if_empty_n => batch_c143_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_batch_read);

    batch_c144_U : component top_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_batch_out1_din,
        if_full_n => batch_c144_full_n,
        if_write => Block_split7796_proc_U0_batch_out1_write,
        if_dout => batch_c144_dout,
        if_empty_n => batch_c144_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_read);

    D_V_loc_c_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_D_V_out_out_din,
        if_full_n => D_V_loc_c_full_n,
        if_write => Block_split7796_proc_U0_D_V_out_out_write,
        if_dout => D_V_loc_c_dout,
        if_empty_n => D_V_loc_c_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_D_V_loc_read);

    D_V_loc_c145_U : component top_fifo_w16_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_D_V_out_out2_din,
        if_full_n => D_V_loc_c145_full_n,
        if_write => Block_split7796_proc_U0_D_V_out_out2_write,
        if_dout => D_V_loc_c145_dout,
        if_empty_n => D_V_loc_c145_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_read);

    IC_V_loc_c_U : component top_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_IC_V_out_out_din,
        if_full_n => IC_V_loc_c_full_n,
        if_write => Block_split7796_proc_U0_IC_V_out_out_write,
        if_dout => IC_V_loc_c_dout,
        if_empty_n => IC_V_loc_c_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_IC_V_loc_read);

    OC_V_loc_c_U : component top_fifo_w16_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_OC_V_out_out_din,
        if_full_n => OC_V_loc_c_full_n,
        if_write => Block_split7796_proc_U0_OC_V_out_out_write,
        if_dout => OC_V_loc_c_dout,
        if_empty_n => OC_V_loc_c_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_read);

    OC_V_loc_c146_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_OC_V_out_out3_din,
        if_full_n => OC_V_loc_c146_full_n,
        if_write => Block_split7796_proc_U0_OC_V_out_out3_write,
        if_dout => OC_V_loc_c146_dout,
        if_empty_n => OC_V_loc_c146_empty_n,
        if_read => Loop_VITIS_LOOP_88_1_proc_U0_OC_V_loc_read);

    ret_V_1_loc_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_1_out_out_din,
        if_full_n => ret_V_1_loc_c_full_n,
        if_write => Block_split7796_proc_U0_ret_V_1_out_out_write,
        if_dout => ret_V_1_loc_c_dout,
        if_empty_n => ret_V_1_loc_c_empty_n,
        if_read => Loop_VITIS_LOOP_38_1_proc_U0_ret_V_1_loc_read);

    ret_V_1_loc_c147_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_1_out_out4_din,
        if_full_n => ret_V_1_loc_c147_full_n,
        if_write => Block_split7796_proc_U0_ret_V_1_out_out4_write,
        if_dout => ret_V_1_loc_c147_dout,
        if_empty_n => ret_V_1_loc_c147_empty_n,
        if_read => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ret_V_1_loc_read);

    mul_ln31_1_loc_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_mul_ln31_1_out_out_din,
        if_full_n => mul_ln31_1_loc_c_full_n,
        if_write => Block_split7796_proc_U0_mul_ln31_1_out_out_write,
        if_dout => mul_ln31_1_loc_c_dout,
        if_empty_n => mul_ln31_1_loc_c_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_mul_ln31_1_loc_read);

    mul_ln31_1_loc_c148_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_mul_ln31_1_out_out5_din,
        if_full_n => mul_ln31_1_loc_c148_full_n,
        if_write => Block_split7796_proc_U0_mul_ln31_1_out_out5_write,
        if_dout => mul_ln31_1_loc_c148_dout,
        if_empty_n => mul_ln31_1_loc_c148_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_mul_ln31_1_loc_read);

    mul_ln31_1_loc_c149_U : component top_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_mul_ln31_1_out_out6_din,
        if_full_n => mul_ln31_1_loc_c149_full_n,
        if_write => Block_split7796_proc_U0_mul_ln31_1_out_out6_write,
        if_dout => mul_ln31_1_loc_c149_dout,
        if_empty_n => mul_ln31_1_loc_c149_empty_n,
        if_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_read);

    ret_V_cast_loc_c_U : component top_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_cast_out_out_din,
        if_full_n => ret_V_cast_loc_c_full_n,
        if_write => Block_split7796_proc_U0_ret_V_cast_out_out_write,
        if_dout => ret_V_cast_loc_c_dout,
        if_empty_n => ret_V_cast_loc_c_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ret_V_cast_loc_read);

    ret_V_cast_loc_c150_U : component top_fifo_w12_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_cast_out_out7_din,
        if_full_n => ret_V_cast_loc_c150_full_n,
        if_write => Block_split7796_proc_U0_ret_V_cast_out_out7_write,
        if_dout => ret_V_cast_loc_c150_dout,
        if_empty_n => ret_V_cast_loc_c150_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ret_V_cast_loc_read);

    ret_V_cast_loc_c151_U : component top_fifo_w12_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_cast_out_out8_din,
        if_full_n => ret_V_cast_loc_c151_full_n,
        if_write => Block_split7796_proc_U0_ret_V_cast_out_out8_write,
        if_dout => ret_V_cast_loc_c151_dout,
        if_empty_n => ret_V_cast_loc_c151_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ret_V_cast_loc_read);

    ret_V_cast_loc_c152_U : component top_fifo_w12_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_cast_out_out9_din,
        if_full_n => ret_V_cast_loc_c152_full_n,
        if_write => Block_split7796_proc_U0_ret_V_cast_out_out9_write,
        if_dout => ret_V_cast_loc_c152_dout,
        if_empty_n => ret_V_cast_loc_c152_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ret_V_cast_loc_read);

    ret_V_cast_loc_c153_U : component top_fifo_w12_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_split7796_proc_U0_ret_V_cast_out_out10_din,
        if_full_n => ret_V_cast_loc_c153_full_n,
        if_write => Block_split7796_proc_U0_ret_V_cast_out_out10_write,
        if_dout => ret_V_cast_loc_c153_dout,
        if_empty_n => ret_V_cast_loc_c153_empty_n,
        if_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ret_V_cast_loc_read);

    s_scale_U : component top_fifo_w256_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_din,
        if_full_n => s_scale_full_n,
        if_write => M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_s_scale_write,
        if_dout => s_scale_dout,
        if_empty_n => s_scale_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_scale_read);

    s_bias_U : component top_fifo_w256_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_din,
        if_full_n => s_bias_full_n,
        if_write => M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_s_bias_write,
        if_dout => s_bias_dout,
        if_empty_n => s_bias_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_bias_read);

    lshr_ln44_cast_loc_channel_U : component top_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_return,
        if_full_n => lshr_ln44_cast_loc_channel_full_n,
        if_write => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_done,
        if_dout => lshr_ln44_cast_loc_channel_dout,
        if_empty_n => lshr_ln44_cast_loc_channel_empty_n,
        if_read => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_ready);

    k1_U : component top_fifo_w1024_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_din,
        if_full_n => k1_full_n,
        if_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_k1_write,
        if_dout => k1_dout,
        if_empty_n => k1_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_k1_read);

    mul_ln31_1_loc_c154_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_din,
        if_full_n => mul_ln31_1_loc_c154_full_n,
        if_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_mul_ln31_1_loc_out_write,
        if_dout => mul_ln31_1_loc_c154_dout,
        if_empty_n => mul_ln31_1_loc_c154_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_read);

    skip1_c155_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_din,
        if_full_n => skip1_c155_full_n,
        if_write => M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_skip1_out_write,
        if_dout => skip1_c155_dout,
        if_empty_n => skip1_c155_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_read);

    s_conv1_U : component top_fifo_w512_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_din,
        if_full_n => s_conv1_full_n,
        if_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_s_conv1_write,
        if_dout => s_conv1_dout,
        if_empty_n => s_conv1_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_s_conv1_read);

    mul_ln31_1_loc_c156_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_din,
        if_full_n => mul_ln31_1_loc_c156_full_n,
        if_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_mul_ln31_1_loc_out_write,
        if_dout => mul_ln31_1_loc_c156_dout,
        if_empty_n => mul_ln31_1_loc_c156_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_mul_ln31_1_loc_read);

    OC_V_loc_c157_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_din,
        if_full_n => OC_V_loc_c157_full_n,
        if_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_OC_V_loc_out_write,
        if_dout => OC_V_loc_c157_dout,
        if_empty_n => OC_V_loc_c157_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_read);

    skip1_c158_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_din,
        if_full_n => skip1_c158_full_n,
        if_write => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_skip1_out_write,
        if_dout => skip1_c158_dout,
        if_empty_n => skip1_c158_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_skip1_read);

    f1_U : component top_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_din,
        if_full_n => f1_full_n,
        if_write => quantize_mul_shift_24_8_16_16_16_16_23_U0_f1_write,
        if_dout => f1_dout,
        if_empty_n => f1_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_f1_read);

    OC_V_loc_c159_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_din,
        if_full_n => OC_V_loc_c159_full_n,
        if_write => quantize_mul_shift_24_8_16_16_16_16_23_U0_OC_V_loc_out_write,
        if_dout => OC_V_loc_c159_dout,
        if_empty_n => OC_V_loc_c159_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_read);

    mul_ln93_1_loc_c_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_din,
        if_full_n => mul_ln93_1_loc_c_full_n,
        if_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out_write,
        if_dout => mul_ln93_1_loc_c_dout,
        if_empty_n => mul_ln93_1_loc_c_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_mul_ln93_1_loc_read);

    mul_ln93_1_loc_c160_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_din,
        if_full_n => mul_ln93_1_loc_c160_full_n,
        if_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out1_write,
        if_dout => mul_ln93_1_loc_c160_dout,
        if_empty_n => mul_ln93_1_loc_c160_empty_n,
        if_read => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_mul_ln93_1_loc_read);

    mul_ln93_1_loc_c161_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_din,
        if_full_n => mul_ln93_1_loc_c161_full_n,
        if_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out2_write,
        if_dout => mul_ln93_1_loc_c161_dout,
        if_empty_n => mul_ln93_1_loc_c161_empty_n,
        if_read => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_mul_ln93_1_loc_read);

    mul_ln93_1_loc_c162_U : component top_fifo_w32_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_din,
        if_full_n => mul_ln93_1_loc_c162_full_n,
        if_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_mul_ln93_1_loc_out3_write,
        if_dout => mul_ln93_1_loc_c162_dout,
        if_empty_n => mul_ln93_1_loc_c162_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_mul_ln93_1_loc_read);

    s_scale_1_U : component top_fifo_w256_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_din,
        if_full_n => s_scale_1_full_n,
        if_write => M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_s_scale_1_write,
        if_dout => s_scale_1_dout,
        if_empty_n => s_scale_1_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_scale_1_read);

    s_bias_1_U : component top_fifo_w256_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_din,
        if_full_n => s_bias_1_full_n,
        if_write => M2S_repeat_16_16_ap_int_16_ap_int_256_U0_s_bias_1_write,
        if_dout => s_bias_1_dout,
        if_empty_n => s_bias_1_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_bias_1_read);

    k3s_U : component top_fifo_w576_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_din,
        if_full_n => k3s_full_n,
        if_write => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_k3s_write,
        if_dout => k3s_dout,
        if_empty_n => k3s_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_k3s_read);

    in_layer_U : component top_fifo_w1152_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_din,
        if_full_n => in_layer_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_in_layer_write,
        if_dout => in_layer_dout,
        if_empty_n => in_layer_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_in_layer_read);

    D_V_loc_c163_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_din,
        if_full_n => D_V_loc_c163_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_D_V_loc_out_write,
        if_dout => D_V_loc_c163_dout,
        if_empty_n => D_V_loc_c163_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_D_V_loc_read);

    OC_V_loc_c164_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_din,
        if_full_n => OC_V_loc_c164_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_OC_V_loc_out_write,
        if_dout => OC_V_loc_c164_dout,
        if_empty_n => OC_V_loc_c164_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_read);

    batch_c165_U : component top_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_din,
        if_full_n => batch_c165_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_batch_out_write,
        if_dout => batch_c165_dout,
        if_empty_n => batch_c165_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_batch_read);

    STRIDE_2_c166_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_din,
        if_full_n => STRIDE_2_c166_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_STRIDE_2_out_write,
        if_dout => STRIDE_2_c166_dout,
        if_empty_n => STRIDE_2_c166_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_STRIDE_2_read);

    skip3_c167_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_din,
        if_full_n => skip3_c167_full_n,
        if_write => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_skip3_out_write,
        if_dout => skip3_c167_dout,
        if_empty_n => skip3_c167_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_read);

    s_conv3_U : component top_fifo_w512_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_din,
        if_full_n => s_conv3_full_n,
        if_write => dw_deform_M_512_1024_16_24_8_4_1_U0_s_conv3_write,
        if_dout => s_conv3_dout,
        if_empty_n => s_conv3_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_s_conv3_read);

    OC_V_loc_c168_U : component top_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_din,
        if_full_n => OC_V_loc_c168_full_n,
        if_write => dw_deform_M_512_1024_16_24_8_4_1_U0_OC_V_loc_out_write,
        if_dout => OC_V_loc_c168_dout,
        if_empty_n => OC_V_loc_c168_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_OC_V_loc_read);

    skip3_c169_U : component top_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_din,
        if_full_n => skip3_c169_full_n,
        if_write => dw_deform_M_512_1024_16_24_8_4_1_U0_skip3_out_write,
        if_dout => skip3_c169_dout,
        if_empty_n => skip3_c169_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_skip3_read);

    f3_U : component top_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => quantize_mul_shift_24_8_16_16_16_16_U0_f3_din,
        if_full_n => f3_full_n,
        if_write => quantize_mul_shift_24_8_16_16_16_16_U0_f3_write,
        if_dout => f3_dout,
        if_empty_n => f3_empty_n,
        if_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_s_mem_read);

    select_ln169_loc_c_U : component top_fifo_w29_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_din,
        if_full_n => select_ln169_loc_c_full_n,
        if_write => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_select_ln169_loc_out_write,
        if_dout => select_ln169_loc_c_dout,
        if_empty_n => select_ln169_loc_c_empty_n,
        if_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_select_ln169_loc_read);

    start_for_Block_split77_proc_U0_U : component top_start_for_Block_split77_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_split77_proc_U0_din,
        if_full_n => start_for_Block_split77_proc_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_Block_split77_proc_U0_dout,
        if_empty_n => start_for_Block_split77_proc_U0_empty_n,
        if_read => Block_split77_proc_U0_ap_ready);

    start_for_Block_split7793_proc_U0_U : component top_start_for_Block_split7793_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_split7793_proc_U0_din,
        if_full_n => start_for_Block_split7793_proc_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_Block_split7793_proc_U0_dout,
        if_empty_n => start_for_Block_split7793_proc_U0_empty_n,
        if_read => Block_split7793_proc_U0_ap_ready);

    start_for_Block_split7796_proc_U0_U : component top_start_for_Block_split7796_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_split7796_proc_U0_din,
        if_full_n => start_for_Block_split7796_proc_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_Block_split7796_proc_U0_dout,
        if_empty_n => start_for_Block_split7796_proc_U0_empty_n,
        if_read => Block_split7796_proc_U0_ap_ready);

    start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_U : component top_start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_din,
        if_full_n => start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_dout,
        if_empty_n => start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_ready);

    start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIqcK_U : component top_start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIqcK
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_din,
        if_full_n => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_dout,
        if_empty_n => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_ready);

    start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanDatrcU_U : component top_start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanDatrcU
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_din,
        if_full_n => start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_dout,
        if_empty_n => start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_empty_n,
        if_read => conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_ready);

    start_for_quantize_mul_shift_24_8_16_16_16_16_U0_U : component top_start_for_quantize_mul_shift_24_8_16_16_16_16_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_quantize_mul_shift_24_8_16_16_16_16_U0_din,
        if_full_n => start_for_quantize_mul_shift_24_8_16_16_16_16_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_quantize_mul_shift_24_8_16_16_16_16_U0_dout,
        if_empty_n => start_for_quantize_mul_shift_24_8_16_16_16_16_U0_empty_n,
        if_read => quantize_mul_shift_24_8_16_16_16_16_U0_ap_ready);

    start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIsc4_U : component top_start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintIsc4
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_din,
        if_full_n => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_dout,
        if_empty_n => start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_empty_n,
        if_read => Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_ready);

    start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_U : component top_start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_din,
        if_full_n => start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_full_n,
        if_write => top_entry39_U0_start_write,
        if_dout => start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_dout,
        if_empty_n => start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_empty_n,
        if_read => S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_ready);

    start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_U : component top_start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_din,
        if_full_n => start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_full_n,
        if_write => M2S_16_8_8_ap_int_128_ap_int_128_U0_start_write,
        if_dout => start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_dout,
        if_empty_n => start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_empty_n,
        if_read => conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_ready);

    start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi1tde_U : component top_start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi1tde
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_din,
        if_full_n => start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_full_n,
        if_write => Block_split7796_proc_U0_start_write,
        if_dout => start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_dout,
        if_empty_n => start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_empty_n,
        if_read => Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_ready);

    start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_U : component top_start_for_dw_deform_M_512_1024_16_24_8_4_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_din,
        if_full_n => start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_full_n,
        if_write => M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_start_write,
        if_dout => start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_dout,
        if_empty_n => start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_empty_n,
        if_read => dw_deform_M_512_1024_16_24_8_4_1_U0_ap_ready);





    ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready <= ap_sync_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready <= ap_sync_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready <= ap_sync_PackReadBuffer_ap_int_16_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_0 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_0 <= ap_sync_channel_write_bias_buffer1_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_1 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_1 <= ap_sync_channel_write_bias_buffer1_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_2 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_2 <= ap_sync_channel_write_bias_buffer1_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_3 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_3 <= ap_sync_channel_write_bias_buffer1_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_4 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_4 <= ap_sync_channel_write_bias_buffer1_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_5 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_5 <= ap_sync_channel_write_bias_buffer1_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_6 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_6 <= ap_sync_channel_write_bias_buffer1_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer1_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer1_V_7 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer1_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer1_V_7 <= ap_sync_channel_write_bias_buffer1_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_0 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_0 <= ap_sync_channel_write_bias_buffer3_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_1 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_1 <= ap_sync_channel_write_bias_buffer3_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_2 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_2 <= ap_sync_channel_write_bias_buffer3_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_3 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_3 <= ap_sync_channel_write_bias_buffer3_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_4 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_4 <= ap_sync_channel_write_bias_buffer3_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_5 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_5 <= ap_sync_channel_write_bias_buffer3_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_6 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_6 <= ap_sync_channel_write_bias_buffer3_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_bias_buffer3_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_bias_buffer3_V_7 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_bias_buffer3_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_bias_buffer3_V_7 <= ap_sync_channel_write_bias_buffer3_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_0 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_0 <= ap_sync_channel_write_k1_buffer_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_1 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_1 <= ap_sync_channel_write_k1_buffer_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_10 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_10 <= ap_sync_channel_write_k1_buffer_V_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_11 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_11 <= ap_sync_channel_write_k1_buffer_V_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_12 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_12 <= ap_sync_channel_write_k1_buffer_V_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_13 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_13 <= ap_sync_channel_write_k1_buffer_V_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_14 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_14 <= ap_sync_channel_write_k1_buffer_V_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_15 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_15 <= ap_sync_channel_write_k1_buffer_V_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_2 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_2 <= ap_sync_channel_write_k1_buffer_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_3 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_3 <= ap_sync_channel_write_k1_buffer_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_4 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_4 <= ap_sync_channel_write_k1_buffer_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_5 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_5 <= ap_sync_channel_write_k1_buffer_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_6 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_6 <= ap_sync_channel_write_k1_buffer_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_7 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_7 <= ap_sync_channel_write_k1_buffer_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_8 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_8 <= ap_sync_channel_write_k1_buffer_V_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k1_buffer_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k1_buffer_V_9 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_38_1_proc_U0_ap_done and Loop_VITIS_LOOP_38_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k1_buffer_V_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k1_buffer_V_9 <= ap_sync_channel_write_k1_buffer_V_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_0 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_0 <= ap_sync_channel_write_k3_buffer_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_1 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_1 <= ap_sync_channel_write_k3_buffer_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_2 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_2 <= ap_sync_channel_write_k3_buffer_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_3 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_3 <= ap_sync_channel_write_k3_buffer_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_4 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_4 <= ap_sync_channel_write_k3_buffer_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_5 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_5 <= ap_sync_channel_write_k3_buffer_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_6 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_6 <= ap_sync_channel_write_k3_buffer_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_7 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_7 <= ap_sync_channel_write_k3_buffer_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_k3_buffer_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_k3_buffer_V_8 <= ap_const_logic_0;
            else
                if (((Loop_VITIS_LOOP_88_1_proc_U0_ap_done and Loop_VITIS_LOOP_88_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_k3_buffer_V_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_k3_buffer_V_8 <= ap_sync_channel_write_k3_buffer_V_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_0 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_0 <= ap_sync_channel_write_scale_buffer1_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_1 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_1 <= ap_sync_channel_write_scale_buffer1_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_2 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_2 <= ap_sync_channel_write_scale_buffer1_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_3 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_3 <= ap_sync_channel_write_scale_buffer1_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_4 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_4 <= ap_sync_channel_write_scale_buffer1_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_5 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_5 <= ap_sync_channel_write_scale_buffer1_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_6 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_6 <= ap_sync_channel_write_scale_buffer1_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer1_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer1_V_7 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer1_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer1_V_7 <= ap_sync_channel_write_scale_buffer1_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_0 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_0 <= ap_sync_channel_write_scale_buffer3_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_1 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_1 <= ap_sync_channel_write_scale_buffer3_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_2 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_2 <= ap_sync_channel_write_scale_buffer3_V_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_3 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_3 <= ap_sync_channel_write_scale_buffer3_V_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_4 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_4 <= ap_sync_channel_write_scale_buffer3_V_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_5 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_5 <= ap_sync_channel_write_scale_buffer3_V_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_6 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_6 <= ap_sync_channel_write_scale_buffer3_V_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_scale_buffer3_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_scale_buffer3_V_7 <= ap_const_logic_0;
            else
                if (((PackReadBuffer_ap_int_16_U0_ap_done and PackReadBuffer_ap_int_16_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_scale_buffer3_V_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_scale_buffer3_V_7 <= ap_sync_channel_write_scale_buffer3_V_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_top_entry39_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_top_entry39_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_top_entry39_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_top_entry39_U0_ap_ready <= ap_sync_top_entry39_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_continue <= lshr_ln44_cast_loc_channel_full_n;
    Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_start <= start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_empty_n;
    Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_start_full_n <= ap_const_logic_1;
    Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_start_write <= ap_const_logic_0;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_continue <= ap_const_logic_1;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_start <= start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_empty_n;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_start_full_n <= ap_const_logic_1;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_start_write <= ap_const_logic_0;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_continue <= ap_const_logic_1;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_start <= start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_empty_n;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_start_full_n <= ap_const_logic_1;
    Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_start_write <= ap_const_logic_0;
    Block_split7793_proc_U0_ap_continue <= select_ln160_loc_channel_full_n;
    Block_split7793_proc_U0_ap_start <= start_for_Block_split7793_proc_U0_empty_n;
    Block_split7793_proc_U0_start_full_n <= ap_const_logic_1;
    Block_split7793_proc_U0_start_write <= ap_const_logic_0;
    Block_split7796_proc_U0_ap_continue <= ap_const_logic_1;
    Block_split7796_proc_U0_ap_start <= start_for_Block_split7796_proc_U0_empty_n;
    Block_split77_proc_U0_ap_continue <= ap_const_logic_1;
    Block_split77_proc_U0_ap_start <= start_for_Block_split77_proc_U0_empty_n;
    Block_split77_proc_U0_start_full_n <= ap_const_logic_1;
    Block_split77_proc_U0_start_write <= ap_const_logic_0;
    Loop_VITIS_LOOP_38_1_proc_U0_ap_continue <= (ap_sync_channel_write_k1_buffer_V_9 and ap_sync_channel_write_k1_buffer_V_8 and ap_sync_channel_write_k1_buffer_V_7 and ap_sync_channel_write_k1_buffer_V_6 and ap_sync_channel_write_k1_buffer_V_5 and ap_sync_channel_write_k1_buffer_V_4 and ap_sync_channel_write_k1_buffer_V_3 and ap_sync_channel_write_k1_buffer_V_2 and ap_sync_channel_write_k1_buffer_V_15 and ap_sync_channel_write_k1_buffer_V_14 and ap_sync_channel_write_k1_buffer_V_13 and ap_sync_channel_write_k1_buffer_V_12 and ap_sync_channel_write_k1_buffer_V_11 and ap_sync_channel_write_k1_buffer_V_10 and ap_sync_channel_write_k1_buffer_V_1 and ap_sync_channel_write_k1_buffer_V_0);
    Loop_VITIS_LOOP_38_1_proc_U0_ap_start <= ((ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_full_n <= k1_buffer_V_0_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_full_n <= k1_buffer_V_10_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_full_n <= k1_buffer_V_11_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_full_n <= k1_buffer_V_12_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_full_n <= k1_buffer_V_13_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_full_n <= k1_buffer_V_14_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_full_n <= k1_buffer_V_15_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_full_n <= k1_buffer_V_1_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_full_n <= k1_buffer_V_2_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_full_n <= k1_buffer_V_3_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_full_n <= k1_buffer_V_4_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_full_n <= k1_buffer_V_5_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_full_n <= k1_buffer_V_6_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_full_n <= k1_buffer_V_7_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_full_n <= k1_buffer_V_8_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_full_n <= k1_buffer_V_9_i_full_n;
    Loop_VITIS_LOOP_38_1_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_VITIS_LOOP_38_1_proc_U0_start_write <= ap_const_logic_0;
    Loop_VITIS_LOOP_88_1_proc_U0_ap_continue <= (ap_sync_channel_write_k3_buffer_V_8 and ap_sync_channel_write_k3_buffer_V_7 and ap_sync_channel_write_k3_buffer_V_6 and ap_sync_channel_write_k3_buffer_V_5 and ap_sync_channel_write_k3_buffer_V_4 and ap_sync_channel_write_k3_buffer_V_3 and ap_sync_channel_write_k3_buffer_V_2 and ap_sync_channel_write_k3_buffer_V_1 and ap_sync_channel_write_k3_buffer_V_0);
    Loop_VITIS_LOOP_88_1_proc_U0_ap_start <= ((ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_full_n <= k3_buffer_V_0_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_full_n <= k3_buffer_V_1_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_full_n <= k3_buffer_V_2_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_full_n <= k3_buffer_V_3_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_full_n <= k3_buffer_V_4_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_full_n <= k3_buffer_V_5_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_full_n <= k3_buffer_V_6_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_full_n <= k3_buffer_V_7_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_full_n <= k3_buffer_V_8_i_full_n;
    Loop_VITIS_LOOP_88_1_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_VITIS_LOOP_88_1_proc_U0_start_write <= ap_const_logic_0;
    M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_continue <= ap_const_logic_1;
    M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_start <= (select_ln160_loc_channel_empty_n and (ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready xor ap_const_logic_1) and ap_start);
    M2S_addr_ap_uint_8_ap_uint_8_U0_ap_continue <= ap_const_logic_1;
    M2S_addr_ap_uint_8_ap_uint_8_U0_ap_start <= ((ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready xor ap_const_logic_1) and ap_start);
    M2S_addr_ap_uint_8_ap_uint_8_U0_start_full_n <= ap_const_logic_1;
    M2S_addr_ap_uint_8_ap_uint_8_U0_start_write <= ap_const_logic_0;
    M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_start <= (scale_buffer1_V_7_t_empty_n and scale_buffer1_V_6_t_empty_n and scale_buffer1_V_5_t_empty_n and scale_buffer1_V_4_t_empty_n and scale_buffer1_V_3_t_empty_n and scale_buffer1_V_2_t_empty_n and scale_buffer1_V_1_t_empty_n and scale_buffer1_V_0_t_empty_n);
    M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_start_full_n <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_start_write <= ap_const_logic_0;
    M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_start <= (bias_buffer1_V_7_t_empty_n and bias_buffer1_V_6_t_empty_n and bias_buffer1_V_5_t_empty_n and bias_buffer1_V_4_t_empty_n and bias_buffer1_V_3_t_empty_n and bias_buffer1_V_2_t_empty_n and bias_buffer1_V_1_t_empty_n and bias_buffer1_V_0_t_empty_n);
    M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_start_full_n <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_start_write <= ap_const_logic_0;
    M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_start <= (scale_buffer3_V_7_t_empty_n and scale_buffer3_V_6_t_empty_n and scale_buffer3_V_5_t_empty_n and scale_buffer3_V_4_t_empty_n and scale_buffer3_V_3_t_empty_n and scale_buffer3_V_2_t_empty_n and scale_buffer3_V_1_t_empty_n and scale_buffer3_V_0_t_empty_n);
    M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_start_full_n <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_start_write <= ap_const_logic_0;
    M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_start <= (bias_buffer3_V_7_t_empty_n and bias_buffer3_V_6_t_empty_n and bias_buffer3_V_5_t_empty_n and bias_buffer3_V_4_t_empty_n and bias_buffer3_V_3_t_empty_n and bias_buffer3_V_2_t_empty_n and bias_buffer3_V_1_t_empty_n and bias_buffer3_V_0_t_empty_n);
    M2S_repeat_16_16_ap_int_16_ap_int_256_U0_start_full_n <= ap_const_logic_1;
    M2S_repeat_16_16_ap_int_16_ap_int_256_U0_start_write <= ap_const_logic_0;
    M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_start <= (lshr_ln44_cast_loc_channel_empty_n and k1_buffer_V_9_t_empty_n and k1_buffer_V_8_t_empty_n and k1_buffer_V_7_t_empty_n and k1_buffer_V_6_t_empty_n and k1_buffer_V_5_t_empty_n and k1_buffer_V_4_t_empty_n and k1_buffer_V_3_t_empty_n and k1_buffer_V_2_t_empty_n and k1_buffer_V_1_t_empty_n and k1_buffer_V_15_t_empty_n and k1_buffer_V_14_t_empty_n and k1_buffer_V_13_t_empty_n and k1_buffer_V_12_t_empty_n and k1_buffer_V_11_t_empty_n and k1_buffer_V_10_t_empty_n and k1_buffer_V_0_t_empty_n);
    M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_start_full_n <= ap_const_logic_1;
    M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_start_write <= ap_const_logic_0;
    M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_continue <= ap_const_logic_1;
    M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_start <= (k3_buffer_V_8_t_empty_n and k3_buffer_V_7_t_empty_n and k3_buffer_V_6_t_empty_n and k3_buffer_V_5_t_empty_n and k3_buffer_V_4_t_empty_n and k3_buffer_V_3_t_empty_n and k3_buffer_V_2_t_empty_n and k3_buffer_V_1_t_empty_n and k3_buffer_V_0_t_empty_n);
    PackReadBuffer_ap_int_16_U0_ap_continue <= (ap_sync_channel_write_scale_buffer3_V_7 and ap_sync_channel_write_scale_buffer3_V_6 and ap_sync_channel_write_scale_buffer3_V_5 and ap_sync_channel_write_scale_buffer3_V_4 and ap_sync_channel_write_scale_buffer3_V_3 and ap_sync_channel_write_scale_buffer3_V_2 and ap_sync_channel_write_scale_buffer3_V_1 and ap_sync_channel_write_scale_buffer3_V_0 and ap_sync_channel_write_scale_buffer1_V_7 and ap_sync_channel_write_scale_buffer1_V_6 and ap_sync_channel_write_scale_buffer1_V_5 and ap_sync_channel_write_scale_buffer1_V_4 and ap_sync_channel_write_scale_buffer1_V_3 and ap_sync_channel_write_scale_buffer1_V_2 and ap_sync_channel_write_scale_buffer1_V_1 and ap_sync_channel_write_scale_buffer1_V_0 and ap_sync_channel_write_bias_buffer3_V_7 and ap_sync_channel_write_bias_buffer3_V_6 and ap_sync_channel_write_bias_buffer3_V_5 and ap_sync_channel_write_bias_buffer3_V_4 and ap_sync_channel_write_bias_buffer3_V_3 and ap_sync_channel_write_bias_buffer3_V_2 and ap_sync_channel_write_bias_buffer3_V_1 and ap_sync_channel_write_bias_buffer3_V_0 and ap_sync_channel_write_bias_buffer1_V_7 and ap_sync_channel_write_bias_buffer1_V_6 and ap_sync_channel_write_bias_buffer1_V_5 and ap_sync_channel_write_bias_buffer1_V_4 and ap_sync_channel_write_bias_buffer1_V_3 and ap_sync_channel_write_bias_buffer1_V_2 and ap_sync_channel_write_bias_buffer1_V_1 and ap_sync_channel_write_bias_buffer1_V_0);
    PackReadBuffer_ap_int_16_U0_ap_start <= ((ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready xor ap_const_logic_1) and ap_start);
    PackReadBuffer_ap_int_16_U0_bias110_full_n <= bias_buffer1_V_3_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias111_full_n <= bias_buffer1_V_4_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias112_full_n <= bias_buffer1_V_5_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias113_full_n <= bias_buffer1_V_6_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias114_full_n <= bias_buffer1_V_7_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias18_full_n <= bias_buffer1_V_1_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias19_full_n <= bias_buffer1_V_2_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias1_full_n <= bias_buffer1_V_0_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias322_full_n <= bias_buffer3_V_1_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias323_full_n <= bias_buffer3_V_2_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias324_full_n <= bias_buffer3_V_3_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias325_full_n <= bias_buffer3_V_4_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias326_full_n <= bias_buffer3_V_5_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias327_full_n <= bias_buffer3_V_6_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias328_full_n <= bias_buffer3_V_7_i_full_n;
    PackReadBuffer_ap_int_16_U0_bias3_full_n <= bias_buffer3_V_0_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale11_full_n <= scale_buffer1_V_1_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale12_full_n <= scale_buffer1_V_2_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale13_full_n <= scale_buffer1_V_3_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale14_full_n <= scale_buffer1_V_4_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale15_full_n <= scale_buffer1_V_5_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale16_full_n <= scale_buffer1_V_6_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale17_full_n <= scale_buffer1_V_7_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale1_full_n <= scale_buffer1_V_0_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale315_full_n <= scale_buffer3_V_1_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale316_full_n <= scale_buffer3_V_2_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale317_full_n <= scale_buffer3_V_3_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale318_full_n <= scale_buffer3_V_4_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale319_full_n <= scale_buffer3_V_5_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale320_full_n <= scale_buffer3_V_6_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale321_full_n <= scale_buffer3_V_7_i_full_n;
    PackReadBuffer_ap_int_16_U0_scale3_full_n <= scale_buffer3_V_0_i_full_n;
    PackReadBuffer_ap_int_16_U0_start_full_n <= ap_const_logic_1;
    PackReadBuffer_ap_int_16_U0_start_write <= ap_const_logic_0;
    S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_continue <= ap_const_logic_1;
    S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_start <= start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_empty_n;
    S2M_16_8_8_ap_int_128_ap_int_128_U0_start_full_n <= ap_const_logic_1;
    S2M_16_8_8_ap_int_128_ap_int_128_U0_start_write <= ap_const_logic_0;
    ap_channel_done_bias_buffer1_V_0 <= ((ap_sync_reg_channel_write_bias_buffer1_V_0 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_1 <= ((ap_sync_reg_channel_write_bias_buffer1_V_1 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_2 <= ((ap_sync_reg_channel_write_bias_buffer1_V_2 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_3 <= ((ap_sync_reg_channel_write_bias_buffer1_V_3 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_4 <= ((ap_sync_reg_channel_write_bias_buffer1_V_4 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_5 <= ((ap_sync_reg_channel_write_bias_buffer1_V_5 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_6 <= ((ap_sync_reg_channel_write_bias_buffer1_V_6 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer1_V_7 <= ((ap_sync_reg_channel_write_bias_buffer1_V_7 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_0 <= ((ap_sync_reg_channel_write_bias_buffer3_V_0 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_1 <= ((ap_sync_reg_channel_write_bias_buffer3_V_1 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_2 <= ((ap_sync_reg_channel_write_bias_buffer3_V_2 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_3 <= ((ap_sync_reg_channel_write_bias_buffer3_V_3 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_4 <= ((ap_sync_reg_channel_write_bias_buffer3_V_4 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_5 <= ((ap_sync_reg_channel_write_bias_buffer3_V_5 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_6 <= ((ap_sync_reg_channel_write_bias_buffer3_V_6 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_bias_buffer3_V_7 <= ((ap_sync_reg_channel_write_bias_buffer3_V_7 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_k1_buffer_V_0 <= ((ap_sync_reg_channel_write_k1_buffer_V_0 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_1 <= ((ap_sync_reg_channel_write_k1_buffer_V_1 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_10 <= ((ap_sync_reg_channel_write_k1_buffer_V_10 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_11 <= ((ap_sync_reg_channel_write_k1_buffer_V_11 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_12 <= ((ap_sync_reg_channel_write_k1_buffer_V_12 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_13 <= ((ap_sync_reg_channel_write_k1_buffer_V_13 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_14 <= ((ap_sync_reg_channel_write_k1_buffer_V_14 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_15 <= ((ap_sync_reg_channel_write_k1_buffer_V_15 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_2 <= ((ap_sync_reg_channel_write_k1_buffer_V_2 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_3 <= ((ap_sync_reg_channel_write_k1_buffer_V_3 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_4 <= ((ap_sync_reg_channel_write_k1_buffer_V_4 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_5 <= ((ap_sync_reg_channel_write_k1_buffer_V_5 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_6 <= ((ap_sync_reg_channel_write_k1_buffer_V_6 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_7 <= ((ap_sync_reg_channel_write_k1_buffer_V_7 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_8 <= ((ap_sync_reg_channel_write_k1_buffer_V_8 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k1_buffer_V_9 <= ((ap_sync_reg_channel_write_k1_buffer_V_9 xor ap_const_logic_1) and Loop_VITIS_LOOP_38_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_0 <= ((ap_sync_reg_channel_write_k3_buffer_V_0 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_1 <= ((ap_sync_reg_channel_write_k3_buffer_V_1 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_2 <= ((ap_sync_reg_channel_write_k3_buffer_V_2 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_3 <= ((ap_sync_reg_channel_write_k3_buffer_V_3 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_4 <= ((ap_sync_reg_channel_write_k3_buffer_V_4 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_5 <= ((ap_sync_reg_channel_write_k3_buffer_V_5 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_6 <= ((ap_sync_reg_channel_write_k3_buffer_V_6 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_7 <= ((ap_sync_reg_channel_write_k3_buffer_V_7 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_k3_buffer_V_8 <= ((ap_sync_reg_channel_write_k3_buffer_V_8 xor ap_const_logic_1) and Loop_VITIS_LOOP_88_1_proc_U0_ap_done);
    ap_channel_done_lshr_ln44_cast_loc_channel <= Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_done;
    ap_channel_done_scale_buffer1_V_0 <= ((ap_sync_reg_channel_write_scale_buffer1_V_0 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_1 <= ((ap_sync_reg_channel_write_scale_buffer1_V_1 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_2 <= ((ap_sync_reg_channel_write_scale_buffer1_V_2 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_3 <= ((ap_sync_reg_channel_write_scale_buffer1_V_3 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_4 <= ((ap_sync_reg_channel_write_scale_buffer1_V_4 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_5 <= ((ap_sync_reg_channel_write_scale_buffer1_V_5 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_6 <= ((ap_sync_reg_channel_write_scale_buffer1_V_6 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer1_V_7 <= ((ap_sync_reg_channel_write_scale_buffer1_V_7 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_0 <= ((ap_sync_reg_channel_write_scale_buffer3_V_0 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_1 <= ((ap_sync_reg_channel_write_scale_buffer3_V_1 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_2 <= ((ap_sync_reg_channel_write_scale_buffer3_V_2 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_3 <= ((ap_sync_reg_channel_write_scale_buffer3_V_3 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_4 <= ((ap_sync_reg_channel_write_scale_buffer3_V_4 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_5 <= ((ap_sync_reg_channel_write_scale_buffer3_V_5 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_6 <= ((ap_sync_reg_channel_write_scale_buffer3_V_6 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_scale_buffer3_V_7 <= ((ap_sync_reg_channel_write_scale_buffer3_V_7 xor ap_const_logic_1) and PackReadBuffer_ap_int_16_U0_ap_done);
    ap_channel_done_select_ln160_loc_channel <= Block_split7793_proc_U0_ap_done;
    ap_done <= S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_done;
    ap_idle <= (top_entry39_U0_ap_idle and quantize_mul_shift_24_8_16_16_16_16_U0_ap_idle and quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_idle and (lshr_ln44_cast_loc_channel_empty_n xor ap_const_logic_1) and (select_ln160_loc_channel_empty_n xor ap_const_logic_1) and (k3_buffer_V_8_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_7_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_6_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_5_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_4_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_3_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_2_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_1_t_empty_n xor ap_const_logic_1) and (k3_buffer_V_0_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_15_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_14_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_13_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_12_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_11_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_10_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_9_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_8_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_7_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_6_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_5_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_4_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_3_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_2_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_1_t_empty_n xor ap_const_logic_1) and (k1_buffer_V_0_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_7_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_6_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_5_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_4_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_3_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_2_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_1_t_empty_n xor ap_const_logic_1) and (bias_buffer3_V_0_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_7_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_6_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_5_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_4_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_3_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_2_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_1_t_empty_n xor ap_const_logic_1) and (scale_buffer3_V_0_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_7_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_6_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_5_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_4_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_3_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_2_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_1_t_empty_n xor ap_const_logic_1) and (bias_buffer1_V_0_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_7_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_6_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_5_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_4_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_3_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_2_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_1_t_empty_n xor ap_const_logic_1) and (scale_buffer1_V_0_t_empty_n xor ap_const_logic_1) and dw_deform_M_512_1024_16_24_8_4_1_U0_ap_idle and conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_idle and conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_idle and S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_idle and PackReadBuffer_ap_int_16_U0_ap_idle and M2S_repeat_merge_3x3_4_1_16_ap_int_64_MultiChanData_9u_64u_U0_ap_idle and M2S_repeat_merge_1x1_v2_4_16_16_ap_int_64_MultiChanData_16u_64u_U0_ap_idle and M2S_repeat_16_16_ap_int_16_ap_int_256_U0_ap_idle and M2S_repeat_16_16_ap_int_16_ap_int_256_24_U0_ap_idle and M2S_repeat_16_16_ap_int_16_ap_int_256_22_U0_ap_idle and M2S_repeat_16_16_ap_int_16_ap_int_256_21_U0_ap_idle and M2S_addr_ap_uint_8_ap_uint_8_U0_ap_idle and M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_idle and Loop_VITIS_LOOP_88_1_proc_U0_ap_idle and Loop_VITIS_LOOP_38_1_proc_U0_ap_idle and Block_split77_proc_U0_ap_idle and Block_split7796_proc_U0_ap_idle and Block_split7793_proc_U0_ap_idle and Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_ap_idle and Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_ap_idle and Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready <= (ap_sync_reg_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready or Loop_VITIS_LOOP_38_1_proc_U0_ap_ready);
    ap_sync_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready <= (ap_sync_reg_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready or Loop_VITIS_LOOP_88_1_proc_U0_ap_ready);
    ap_sync_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready <= (ap_sync_reg_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready or M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready);
    ap_sync_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready <= (ap_sync_reg_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready or M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready);
    ap_sync_PackReadBuffer_ap_int_16_U0_ap_ready <= (ap_sync_reg_PackReadBuffer_ap_int_16_U0_ap_ready or PackReadBuffer_ap_int_16_U0_ap_ready);
    ap_sync_channel_write_bias_buffer1_V_0 <= ((ap_channel_done_bias_buffer1_V_0 and PackReadBuffer_ap_int_16_U0_bias1_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_0);
    ap_sync_channel_write_bias_buffer1_V_1 <= ((ap_channel_done_bias_buffer1_V_1 and PackReadBuffer_ap_int_16_U0_bias18_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_1);
    ap_sync_channel_write_bias_buffer1_V_2 <= ((ap_channel_done_bias_buffer1_V_2 and PackReadBuffer_ap_int_16_U0_bias19_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_2);
    ap_sync_channel_write_bias_buffer1_V_3 <= ((ap_channel_done_bias_buffer1_V_3 and PackReadBuffer_ap_int_16_U0_bias110_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_3);
    ap_sync_channel_write_bias_buffer1_V_4 <= ((ap_channel_done_bias_buffer1_V_4 and PackReadBuffer_ap_int_16_U0_bias111_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_4);
    ap_sync_channel_write_bias_buffer1_V_5 <= ((ap_channel_done_bias_buffer1_V_5 and PackReadBuffer_ap_int_16_U0_bias112_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_5);
    ap_sync_channel_write_bias_buffer1_V_6 <= ((ap_channel_done_bias_buffer1_V_6 and PackReadBuffer_ap_int_16_U0_bias113_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_6);
    ap_sync_channel_write_bias_buffer1_V_7 <= ((ap_channel_done_bias_buffer1_V_7 and PackReadBuffer_ap_int_16_U0_bias114_full_n) or ap_sync_reg_channel_write_bias_buffer1_V_7);
    ap_sync_channel_write_bias_buffer3_V_0 <= ((ap_channel_done_bias_buffer3_V_0 and PackReadBuffer_ap_int_16_U0_bias3_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_0);
    ap_sync_channel_write_bias_buffer3_V_1 <= ((ap_channel_done_bias_buffer3_V_1 and PackReadBuffer_ap_int_16_U0_bias322_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_1);
    ap_sync_channel_write_bias_buffer3_V_2 <= ((ap_channel_done_bias_buffer3_V_2 and PackReadBuffer_ap_int_16_U0_bias323_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_2);
    ap_sync_channel_write_bias_buffer3_V_3 <= ((ap_channel_done_bias_buffer3_V_3 and PackReadBuffer_ap_int_16_U0_bias324_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_3);
    ap_sync_channel_write_bias_buffer3_V_4 <= ((ap_channel_done_bias_buffer3_V_4 and PackReadBuffer_ap_int_16_U0_bias325_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_4);
    ap_sync_channel_write_bias_buffer3_V_5 <= ((ap_channel_done_bias_buffer3_V_5 and PackReadBuffer_ap_int_16_U0_bias326_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_5);
    ap_sync_channel_write_bias_buffer3_V_6 <= ((ap_channel_done_bias_buffer3_V_6 and PackReadBuffer_ap_int_16_U0_bias327_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_6);
    ap_sync_channel_write_bias_buffer3_V_7 <= ((ap_channel_done_bias_buffer3_V_7 and PackReadBuffer_ap_int_16_U0_bias328_full_n) or ap_sync_reg_channel_write_bias_buffer3_V_7);
    ap_sync_channel_write_k1_buffer_V_0 <= ((ap_channel_done_k1_buffer_V_0 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_0_full_n) or ap_sync_reg_channel_write_k1_buffer_V_0);
    ap_sync_channel_write_k1_buffer_V_1 <= ((ap_channel_done_k1_buffer_V_1 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_1_full_n) or ap_sync_reg_channel_write_k1_buffer_V_1);
    ap_sync_channel_write_k1_buffer_V_10 <= ((ap_channel_done_k1_buffer_V_10 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_10_full_n) or ap_sync_reg_channel_write_k1_buffer_V_10);
    ap_sync_channel_write_k1_buffer_V_11 <= ((ap_channel_done_k1_buffer_V_11 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_11_full_n) or ap_sync_reg_channel_write_k1_buffer_V_11);
    ap_sync_channel_write_k1_buffer_V_12 <= ((ap_channel_done_k1_buffer_V_12 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_12_full_n) or ap_sync_reg_channel_write_k1_buffer_V_12);
    ap_sync_channel_write_k1_buffer_V_13 <= ((ap_channel_done_k1_buffer_V_13 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_13_full_n) or ap_sync_reg_channel_write_k1_buffer_V_13);
    ap_sync_channel_write_k1_buffer_V_14 <= ((ap_channel_done_k1_buffer_V_14 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_14_full_n) or ap_sync_reg_channel_write_k1_buffer_V_14);
    ap_sync_channel_write_k1_buffer_V_15 <= ((ap_channel_done_k1_buffer_V_15 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_15_full_n) or ap_sync_reg_channel_write_k1_buffer_V_15);
    ap_sync_channel_write_k1_buffer_V_2 <= ((ap_channel_done_k1_buffer_V_2 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_2_full_n) or ap_sync_reg_channel_write_k1_buffer_V_2);
    ap_sync_channel_write_k1_buffer_V_3 <= ((ap_channel_done_k1_buffer_V_3 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_3_full_n) or ap_sync_reg_channel_write_k1_buffer_V_3);
    ap_sync_channel_write_k1_buffer_V_4 <= ((ap_channel_done_k1_buffer_V_4 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_4_full_n) or ap_sync_reg_channel_write_k1_buffer_V_4);
    ap_sync_channel_write_k1_buffer_V_5 <= ((ap_channel_done_k1_buffer_V_5 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_5_full_n) or ap_sync_reg_channel_write_k1_buffer_V_5);
    ap_sync_channel_write_k1_buffer_V_6 <= ((ap_channel_done_k1_buffer_V_6 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_6_full_n) or ap_sync_reg_channel_write_k1_buffer_V_6);
    ap_sync_channel_write_k1_buffer_V_7 <= ((ap_channel_done_k1_buffer_V_7 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_7_full_n) or ap_sync_reg_channel_write_k1_buffer_V_7);
    ap_sync_channel_write_k1_buffer_V_8 <= ((ap_channel_done_k1_buffer_V_8 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_8_full_n) or ap_sync_reg_channel_write_k1_buffer_V_8);
    ap_sync_channel_write_k1_buffer_V_9 <= ((ap_channel_done_k1_buffer_V_9 and Loop_VITIS_LOOP_38_1_proc_U0_k1_buffer_V_9_full_n) or ap_sync_reg_channel_write_k1_buffer_V_9);
    ap_sync_channel_write_k3_buffer_V_0 <= ((ap_channel_done_k3_buffer_V_0 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_0_full_n) or ap_sync_reg_channel_write_k3_buffer_V_0);
    ap_sync_channel_write_k3_buffer_V_1 <= ((ap_channel_done_k3_buffer_V_1 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_1_full_n) or ap_sync_reg_channel_write_k3_buffer_V_1);
    ap_sync_channel_write_k3_buffer_V_2 <= ((ap_channel_done_k3_buffer_V_2 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_2_full_n) or ap_sync_reg_channel_write_k3_buffer_V_2);
    ap_sync_channel_write_k3_buffer_V_3 <= ((ap_channel_done_k3_buffer_V_3 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_3_full_n) or ap_sync_reg_channel_write_k3_buffer_V_3);
    ap_sync_channel_write_k3_buffer_V_4 <= ((ap_channel_done_k3_buffer_V_4 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_4_full_n) or ap_sync_reg_channel_write_k3_buffer_V_4);
    ap_sync_channel_write_k3_buffer_V_5 <= ((ap_channel_done_k3_buffer_V_5 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_5_full_n) or ap_sync_reg_channel_write_k3_buffer_V_5);
    ap_sync_channel_write_k3_buffer_V_6 <= ((ap_channel_done_k3_buffer_V_6 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_6_full_n) or ap_sync_reg_channel_write_k3_buffer_V_6);
    ap_sync_channel_write_k3_buffer_V_7 <= ((ap_channel_done_k3_buffer_V_7 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_7_full_n) or ap_sync_reg_channel_write_k3_buffer_V_7);
    ap_sync_channel_write_k3_buffer_V_8 <= ((ap_channel_done_k3_buffer_V_8 and Loop_VITIS_LOOP_88_1_proc_U0_k3_buffer_V_8_full_n) or ap_sync_reg_channel_write_k3_buffer_V_8);
    ap_sync_channel_write_scale_buffer1_V_0 <= ((ap_channel_done_scale_buffer1_V_0 and PackReadBuffer_ap_int_16_U0_scale1_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_0);
    ap_sync_channel_write_scale_buffer1_V_1 <= ((ap_channel_done_scale_buffer1_V_1 and PackReadBuffer_ap_int_16_U0_scale11_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_1);
    ap_sync_channel_write_scale_buffer1_V_2 <= ((ap_channel_done_scale_buffer1_V_2 and PackReadBuffer_ap_int_16_U0_scale12_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_2);
    ap_sync_channel_write_scale_buffer1_V_3 <= ((ap_channel_done_scale_buffer1_V_3 and PackReadBuffer_ap_int_16_U0_scale13_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_3);
    ap_sync_channel_write_scale_buffer1_V_4 <= ((ap_channel_done_scale_buffer1_V_4 and PackReadBuffer_ap_int_16_U0_scale14_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_4);
    ap_sync_channel_write_scale_buffer1_V_5 <= ((ap_channel_done_scale_buffer1_V_5 and PackReadBuffer_ap_int_16_U0_scale15_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_5);
    ap_sync_channel_write_scale_buffer1_V_6 <= ((ap_channel_done_scale_buffer1_V_6 and PackReadBuffer_ap_int_16_U0_scale16_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_6);
    ap_sync_channel_write_scale_buffer1_V_7 <= ((ap_channel_done_scale_buffer1_V_7 and PackReadBuffer_ap_int_16_U0_scale17_full_n) or ap_sync_reg_channel_write_scale_buffer1_V_7);
    ap_sync_channel_write_scale_buffer3_V_0 <= ((ap_channel_done_scale_buffer3_V_0 and PackReadBuffer_ap_int_16_U0_scale3_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_0);
    ap_sync_channel_write_scale_buffer3_V_1 <= ((ap_channel_done_scale_buffer3_V_1 and PackReadBuffer_ap_int_16_U0_scale315_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_1);
    ap_sync_channel_write_scale_buffer3_V_2 <= ((ap_channel_done_scale_buffer3_V_2 and PackReadBuffer_ap_int_16_U0_scale316_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_2);
    ap_sync_channel_write_scale_buffer3_V_3 <= ((ap_channel_done_scale_buffer3_V_3 and PackReadBuffer_ap_int_16_U0_scale317_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_3);
    ap_sync_channel_write_scale_buffer3_V_4 <= ((ap_channel_done_scale_buffer3_V_4 and PackReadBuffer_ap_int_16_U0_scale318_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_4);
    ap_sync_channel_write_scale_buffer3_V_5 <= ((ap_channel_done_scale_buffer3_V_5 and PackReadBuffer_ap_int_16_U0_scale319_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_5);
    ap_sync_channel_write_scale_buffer3_V_6 <= ((ap_channel_done_scale_buffer3_V_6 and PackReadBuffer_ap_int_16_U0_scale320_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_6);
    ap_sync_channel_write_scale_buffer3_V_7 <= ((ap_channel_done_scale_buffer3_V_7 and PackReadBuffer_ap_int_16_U0_scale321_full_n) or ap_sync_reg_channel_write_scale_buffer3_V_7);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= S2M_16_8_8_ap_int_128_ap_int_128_U0_ap_done;
    ap_sync_ready <= (ap_sync_top_entry39_U0_ap_ready and ap_sync_PackReadBuffer_ap_int_16_U0_ap_ready and ap_sync_M2S_addr_ap_uint_8_ap_uint_8_U0_ap_ready and ap_sync_M2S_16_8_8_ap_int_128_ap_int_128_U0_ap_ready and ap_sync_Loop_VITIS_LOOP_88_1_proc_U0_ap_ready and ap_sync_Loop_VITIS_LOOP_38_1_proc_U0_ap_ready);
    ap_sync_top_entry39_U0_ap_ready <= (top_entry39_U0_ap_ready or ap_sync_reg_top_entry39_U0_ap_ready);
    bias_buffer1_V_0_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_0_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_1_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_1_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_2_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_2_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_3_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_3_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_4_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_4_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_5_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_5_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_6_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_6_t_we1 <= ap_const_logic_0;
    bias_buffer1_V_7_t_d1 <= ap_const_lv16_0;
    bias_buffer1_V_7_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_0_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_0_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_1_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_1_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_2_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_2_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_3_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_3_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_4_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_4_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_5_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_5_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_6_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_6_t_we1 <= ap_const_logic_0;
    bias_buffer3_V_7_t_d1 <= ap_const_lv16_0;
    bias_buffer3_V_7_t_we1 <= ap_const_logic_0;
    conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_continue <= ap_const_logic_1;
    conv1x1_v4_512_512_1024_16_16_24_8_4_U0_ap_start <= start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_empty_n;
    conv1x1_v4_512_512_1024_16_16_24_8_4_U0_start_full_n <= ap_const_logic_1;
    conv1x1_v4_512_512_1024_16_16_24_8_4_U0_start_write <= ap_const_logic_0;
    conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_continue <= ap_const_logic_1;
    conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_ap_start <= start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_empty_n;
    conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_start_full_n <= ap_const_logic_1;
    conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_start_write <= ap_const_logic_0;
    dw_deform_M_512_1024_16_24_8_4_1_U0_ap_continue <= ap_const_logic_1;
    dw_deform_M_512_1024_16_24_8_4_1_U0_ap_start <= start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_empty_n;
    dw_deform_M_512_1024_16_24_8_4_1_U0_start_full_n <= ap_const_logic_1;
    dw_deform_M_512_1024_16_24_8_4_1_U0_start_write <= ap_const_logic_0;
    k3_buffer_V_0_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_0_t_we1 <= ap_const_logic_0;
    k3_buffer_V_1_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_1_t_we1 <= ap_const_logic_0;
    k3_buffer_V_2_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_2_t_we1 <= ap_const_logic_0;
    k3_buffer_V_3_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_3_t_we1 <= ap_const_logic_0;
    k3_buffer_V_4_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_4_t_we1 <= ap_const_logic_0;
    k3_buffer_V_5_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_5_t_we1 <= ap_const_logic_0;
    k3_buffer_V_6_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_6_t_we1 <= ap_const_logic_0;
    k3_buffer_V_7_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_7_t_we1 <= ap_const_logic_0;
    k3_buffer_V_8_t_d1 <= ap_const_lv64_0;
    k3_buffer_V_8_t_we1 <= ap_const_logic_0;
    quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_continue <= ap_const_logic_1;
    quantize_mul_shift_24_8_16_16_16_16_23_U0_ap_start <= start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_empty_n;
    quantize_mul_shift_24_8_16_16_16_16_23_U0_start_full_n <= ap_const_logic_1;
    quantize_mul_shift_24_8_16_16_16_16_23_U0_start_write <= ap_const_logic_0;
    quantize_mul_shift_24_8_16_16_16_16_U0_ap_continue <= ap_const_logic_1;
    quantize_mul_shift_24_8_16_16_16_16_U0_ap_start <= start_for_quantize_mul_shift_24_8_16_16_16_16_U0_empty_n;
    quantize_mul_shift_24_8_16_16_16_16_U0_start_full_n <= ap_const_logic_1;
    quantize_mul_shift_24_8_16_16_16_16_U0_start_write <= ap_const_logic_0;
    scale_buffer1_V_0_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_0_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_1_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_1_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_2_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_2_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_3_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_3_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_4_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_4_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_5_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_5_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_6_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_6_t_we1 <= ap_const_logic_0;
    scale_buffer1_V_7_t_d1 <= ap_const_lv16_0;
    scale_buffer1_V_7_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_0_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_0_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_1_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_1_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_2_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_2_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_3_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_3_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_4_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_4_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_5_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_5_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_6_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_6_t_we1 <= ap_const_logic_0;
    scale_buffer3_V_7_t_d1 <= ap_const_lv16_0;
    scale_buffer3_V_7_t_we1 <= ap_const_logic_0;
    start_for_Block_Z12conv1x1_packILi16ELi16ELi512ELi1024ELi512ELi8ELi24ELi4ELi16ELi16EEvRN3hls6streamI6ap_intIXmlT4_T_EELi0EEERNS1_IS2_IXmlT4_T0_EELi0EEEPS2_IXmlT6_T_EEPS2_IXT7_EEPS2_IXT8_EE7ap_uintILi16EESG_SG_ibb_exit_i_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_split7793_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_split7796_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_split77_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv1x1_v4_512_512_1024_16_16_24_8_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dw_deform_M_512_1024_16_24_8_4_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_quantize_mul_shift_24_8_16_16_16_16_U0_din <= (0=>ap_const_logic_1, others=>'-');
    top_entry39_U0_STRIDE_2 <= (0=>STRIDE_2, others=>'-');
    top_entry39_U0_ap_continue <= ap_const_logic_1;
    top_entry39_U0_ap_start <= ((ap_sync_reg_top_entry39_U0_ap_ready xor ap_const_logic_1) and ap_start);
    top_entry39_U0_deform <= (0=>deform, others=>'-');
    top_entry39_U0_relu1 <= (0=>relu1, others=>'-');
    top_entry39_U0_relu3 <= (0=>relu3, others=>'-');
    top_entry39_U0_skip1 <= (0=>skip1, others=>'-');
    top_entry39_U0_skip3 <= (0=>skip3, others=>'-');
    top_entry39_U0_start_full_n <= (start_for_quantize_mul_shift_24_8_16_16_16_16_U0_full_n and start_for_quantize_mul_shift_24_8_16_16_16_16_23_U0_full_n and start_for_conv_3x3_linebuffer_512_1024_1024_16_8_1024_ap_int_128_MultiChanData_9u_128u_U0_full_n and start_for_S2M_16_8_8_ap_int_128_ap_int_128_U0_full_n and start_for_Block_split77_proc_U0_full_n and start_for_Block_split7796_proc_U0_full_n and start_for_Block_split7793_proc_U0_full_n and start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit_proc_U0_full_n and start_for_Block_Z7wrapperP6ap_intILi128EES1_PS_ILi64EES3_PS_ILi16EEP7ap_uintILi8EEiiiibbbbbb_exit89_proc_U0_full_n);
end behav;
